{"version":3,"sources":["../external \"electron\"","../external \"child_process\"","components/Navbar.jsx","components/App.jsx","components/Settings.jsx","components/Dashboard.jsx","components/Proxies.jsx","components/CreditCard.jsx","components/Profiles.jsx","empty.svg","components/Harvester.jsx","account.svg","components/Accounts.jsx","components/Sessions.jsx","components/Login.jsx","components/TopBar.jsx","main.jsx","index.js"],"names":["module","exports","require","headerStyles","padding","fontSize","height","color","whiteSpace","overflow","DiscordAvatar","props","Avatar","style","position","left","bottom","circle","src","discordAvatar","alt","connect","state","capitalizeFirstLetter","string","charAt","toUpperCase","slice","e","className","Sidebar","display","flexDirection","Sidenav","expanded","defaultOpenKeys","appearance","Header","top","width","Body","Nav","link","name","icon","map","page","to","Whisper","placement","trigger","speaker","Tooltip","Item","eventKey","Icon","discordUsername","ipcRenderer","Column","Table","HeaderCell","Cell","passwordGenerator","Math","random","toString","substr","CheckCell","rowData","onChange","checkedKeys","dataKey","lineHeight","Checkbox","value","inline","checked","some","item","TasksTable","handleCheckAll","tasks","id","dispatch","type","obj","handleCheck","event","preventDefault","nativeEvent","shiftKey","console","log","nextCheckedKeys","filter","getProfiles","profiles","sendSync","close","setState","show","open","taskStatusColor","status","getTasks","search","term","filteredTasks","row","JSON","stringify","toLowerCase","includes","startTask","task","send","activeTasks","stopTasks","handleClick","data","logs","handleChange","prevState","arrayToLabel","array","labels","i","push","label","profileName","getTaskGroups","taskGroups","selectedTaskGroup","getSessions","sessions","getProxies","proxies","getAccounts","accounts","deleteTasks","taskGroupID","cogoToast","success","heading","deleteSomeTasks","arg","createTasks","formValue","quantity","store","mode","profile","proxy","sku","session","proxyName","monitorDelay","checkoutDelay","statusColor","startAllTasks","t","stopAllTasks","window","innerHeight","round","createTaskGroup","taskGroup","sendTaskGroup","taskGroupForm","groupName","error","deleteTaskGroup","getSessionsArray","site","property","accountName","account","alias","getProxiesArray","returnModal","FormGroup","marginLeft","ControlLabel","FormControl","placeholder","accepter","InputPicker","siteToModes","size","keywords","this","indeterminate","length","Modal","onHide","Title","Form","fluid","sites","Footer","Button","onClick","border","marginRight","format","interval","ticking","right","float","siteToImages","Input","InputGroup","Addon","disabled","borderWidth","marginTop","variant","justify","preventClose","virtualized","shouldUpdateScroll","renderEmpty","textAlign","fontWeight","align","statuses","fixed","paddingRight","hideOnLeave","divider","overflowY","overflowX","margin","marginBottom","backgroundColor","setSelectedTaskgroup","Panel","shaded","bordered","Dropdown","renderTitle","IconButton","background","onSelect","Typography","component","React","Component","styles","styles1","Settings","testWebhook","bind","saveSettings","deactivate","onTodoChange","settings","RetryDelays","MonitorDelays","WebhookURL","getSettings","openLogs","header","collapsible","defaultExpanded","username","LicenseKey","$","val","DoughnutData","datasets","borderColor","title","image","date","price","styleCenter","justifyContent","alignItems","slimText","paddingBottom","titleStyle","Dashboard","getAnalytics","analytics","a","fetch","response","json","responseJSON","announcements","today","Date","createdOn","setHours","diff","Paper","transform","paddingTop","checkouts","declines","totalSpent","fetchAnnouncements","index","borderRadius","message","List","maxWidth","maxHeight","FlexboxGrid","colspan","toLocaleDateString","Proxies","filteredProxies","editProxyGroup","edit","selectedProxygroup","formatProxy","sendEditProxies","proxyObject","proxyText","keys","Object","user","password","ip","port","objectToArray","object","Array","isArray","setSelectedProxygroup","addProxies","deleteProxies","spanColor","num","parseInt","deleteSpecificProxy","groupID","pingProxy","testAllProxies","proxiesObject","block","componentClass","rows","center","hover","speed","CreditCards","setCards","prevProps","acceptedCards","callback","number","options","Payment","fns","validateCardNumber","issuer","preview","maxLength","nextNumber","replace","isNaN","limit","space_index","expiry","month","year","split","cardType","newCardArray","getCardArray","forEach","d","concat","setCardArray","cvc","focused","locale","placeholders","profileID","join","trim","deleteProfile","onEditClick","duplicateProfile","defaultProps","valid","Profile","handleInputFocus","focus","target","handleInputChange","saveProfile","changeStep","stepNow","step","email","cardName","cardNumber","cardCVV","cardExpiration","firstName","lastName","address","city","phone","zip","country","billingFirstName","billingLastName","billingAddress","billingCity","billingPhone","billingZip","billingState","billingCountry","editProfile","sendEditProfile","clearState","CardCVC","CardExpiry","CardName","CardNumber","filteredProfiles","profileSearch","Steps","current","layout","states","canadaProvinces","Toggle","ButtonGroup","createProfile","inside","flexWrap","gridTemplateColumns","CreditCard","flex","role","Captcha","getHarvesters","harvesters","showHarvester","addHarvester","saveHarvester","contentEditable","createRef","harvester","idNum","harvesterSites","EmptySVG","innerRef","html","CheckPicker","searchable","defaultValue","text","Accounts","deleteAccount","addAccount","result","characters","charactersLength","floor","sendInfo","makeID","amazon","bestbuy","Sessions","selectedSessionSite","cookies","addSession","placeContent","setSelectedSite","returnEmail","returnAccountName","Login","key","activate","auth","onLogin","Alert","remote","TopBar","minimize","getCurrentWindow","history","createBrowserHistory","createStore","activated","pingSpeeds","taskGroupStatuses","products","inputtedProxies","selectedProxies","listPings","progress","selectedGroup","selectedGroups","showDeleteGroup","groups","cookiesUsed","cookieInfo","FootAction","EastBay","action","newState","info","product","sendToStatus","taskId","ping","Index","login","checkActivation","version","on","msg","then","response1","exact","path","Profiles","ReactDOM","render","document","getElementById"],"mappings":"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8BAIL8S,GAAS,CACb,CACE9S,MAAO,UACPtD,MAAO,UACP8W,KAAM,WAER,CACExT,MAAO,SACPtD,MAAO,SACP8W,KAAM,UAER,CACExT,MAAO,UACPtD,MAAO,UACP8W,KAAM,WAER,CACExT,MAAO,WACPtD,MAAO,WACP8W,KAAM,YAER,CACExT,MAAO,aACPtD,MAAO,aACP8W,KAAM,cAER,CACExT,MAAO,WACPtD,MAAO,WACP8W,KAAM,YAER,CACExT,MAAO,cACPtD,MAAO,cACP8W,KAAM,eAER,CACExT,MAAO,WACPtD,MAAO,WACP8W,KAAM,YAER,CACExT,MAAO,UACPtD,MAAO,UACP8W,KAAM,WAER,CACExT,MAAO,UACPtD,MAAO,UACP8W,KAAM,WAER,CACExT,MAAO,QACPtD,MAAO,QACP8W,KAAM,SAER,CACExT,MAAO,SACPtD,MAAO,SACP8W,KAAM,UAER,CACExT,MAAO,WACPtD,MAAO,WACP8W,KAAM,YAER,CACExT,MAAO,UACPtD,MAAO,UACP8W,KAAM,WAER,CACExT,MAAO,OACPtD,MAAO,OACP8W,KAAM,QAER,CACExT,MAAO,SACPtD,MAAO,SACP8W,KAAM,UAER,CACExT,MAAO,WACPtD,MAAO,WACP8W,KAAM,YAER,CACExT,MAAO,YACPtD,MAAO,YACP8W,KAAM,aAER,CACExT,MAAO,QACPtD,MAAO,QACP8W,KAAM,SAER,CACExT,MAAO,WACPtD,MAAO,WACP8W,KAAM,YAER,CACExT,MAAO,gBACPtD,MAAO,gBACP8W,KAAM,iBAER,CACExT,MAAO,WACPtD,MAAO,WACP8W,KAAM,YAER,CACExT,MAAO,YACPtD,MAAO,YACP8W,KAAM,aAER,CACExT,MAAO,cACPtD,MAAO,cACP8W,KAAM,eAER,CACExT,MAAO,WACPtD,MAAO,WACP8W,KAAM,YAER,CACExT,MAAO,UACPtD,MAAO,UACP8W,KAAM,WAER,CACExT,MAAO,WACPtD,MAAO,WACP8W,KAAM,YAER,CACExT,MAAO,SACPtD,MAAO,SACP8W,KAAM,UAER,CACExT,MAAO,gBACPtD,MAAO,gBACP8W,KAAM,iBAER,CACExT,MAAO,aACPtD,MAAO,aACP8W,KAAM,cAER,CACExT,MAAO,aACPtD,MAAO,aACP8W,KAAM,cAER,CACExT,MAAO,WACPtD,MAAO,WACP8W,KAAM,YAER,CACExT,MAAO,iBACPtD,MAAO,iBACP8W,KAAM,kBAER,CACExT,MAAO,eACPtD,MAAO,eACP8W,KAAM,gBAER,CACExT,MAAO,OACPtD,MAAO,OACP8W,KAAM,QAER,CACExT,MAAO,WACPtD,MAAO,WACP8W,KAAM,YAER,CACExT,MAAO,SACPtD,MAAO,SACP8W,KAAM,UAER,CACExT,MAAO,eACPtD,MAAO,eACP8W,KAAM,gBAER,CACExT,MAAO,eACPtD,MAAO,eACP8W,KAAM,gBAER,CACExT,MAAO,iBACPtD,MAAO,iBACP8W,KAAM,kBAER,CACExT,MAAO,eACPtD,MAAO,eACP8W,KAAM,gBAER,CACExT,MAAO,YACPtD,MAAO,YACP8W,KAAM,aAER,CACExT,MAAO,QACPtD,MAAO,QACP8W,KAAM,SAER,CACExT,MAAO,OACPtD,MAAO,OACP8W,KAAM,QAER,CACExT,MAAO,UACPtD,MAAO,UACP8W,KAAM,WAER,CACExT,MAAO,WACPtD,MAAO,WACP8W,KAAM,YAER,CACExT,MAAO,aACPtD,MAAO,aACP8W,KAAM,cAER,CACExT,MAAO,gBACPtD,MAAO,gBACP8W,KAAM,iBAER,CACExT,MAAO,YACPtD,MAAO,YACP8W,KAAM,aAER,CACExT,MAAO,UACPtD,MAAO,UACP8W,KAAM,WAER,CACExT,MAAO,KACPtD,MAAO,KACP8W,KAAM,MAER,CACExT,MAAO,cACPtD,MAAO,cACP8W,KAAM,gB,+BCv5BK,OAA0B,kCCWjC/X,GAAgBvD,EAAQ,IAAxBuD,YAEFgY,G,kDACJ,WAAY9a,GAAQ,IAAD,8BACjB,cAAMA,IAiCR+a,cAAgB,WACd,IAAMC,EAAalY,GAAYwC,SAAS,kBACxC,EAAKtF,MAAMwE,SAAS,CAAEC,KAAM,SAAUC,IAAK,CAAEsW,iBAlC7C,EAAKC,cAAgB,EAAKA,cAAchM,KAAnB,iBACrB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","file":"static/js/main.5bf9be71.chunk.js","sourcesContent":["module.exports = require(\"electron\");","module.exports = require(\"child_process\");","import { Sidenav, Sidebar, Nav, Icon, Avatar, Tooltip, Whisper } from 'rsuite';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport cogoToast from 'cogo-toast';\nimport { connect } from 'react-redux';\n\nconst headerStyles = {\n  padding: 18,\n  fontSize: 16,\n  height: 56,\n  // background: '#34c3ff',\n  color: ' #fff',\n  whiteSpace: 'nowrap',\n  overflow: 'hidden',\n};\n\nfunction DiscordAvatar(props) {\n  return (\n    <Avatar\n      style={{\n        position: 'absolute',\n        left: '8px',\n        bottom: '47px',\n      }}\n      circle\n      src={props.discordAvatar}\n      alt=\"RU\"\n    />\n  );\n}\n\nfunction SidebarReact(props) {\n  function capitalizeFirstLetter(string) {\n    try {\n      return string.charAt(0).toUpperCase() + string.slice(1);\n    } catch (e) {\n      return '';\n    }\n  }\n  const pages = [\n    { link: 'dashboard', name: 'Dashboard', icon: 'dashboard' },\n    { link: 'tasks', name: 'Tasks', icon: 'task' },\n    { link: 'profiles', name: 'Profiles', icon: 'group' },\n    { link: 'proxies', name: 'Proxies', icon: 'wifi' },\n    { link: 'captcha', name: 'Captcha', icon: 'google' },\n    { link: 'accounts', name: 'Accounts', icon: 'file-text' },\n    { link: 'sessions', name: 'Sessions', icon: 'web' },\n    { link: 'settings', name: 'Settings', icon: 'cogs' },\n  ];\n\n  return (\n    <div style={{ height: '100%' }} className=\"navbar\">\n      <Sidebar style={{ display: 'flex', flexDirection: 'column' }}>\n        <Sidenav\n          // onSelect={handleSelect}\n          expanded={false}\n          defaultOpenKeys={['3']}\n          appearance=\"subtle\"\n        >\n          <Sidenav.Header>\n            <div style={headerStyles}>\n              <img\n                style={{ position: 'absolute', left: '5px', top: '5px' }}\n                src=\"./assets/logo_transparent.png\"\n                alt=\"logo\"\n                width=\"50\"\n              />\n            </div>\n          </Sidenav.Header>\n          <Sidenav.Body>\n            <Nav>\n              {pages.map((page) => (\n                <Link key={page.link} to={page.link}>\n                  <Whisper\n                    placement=\"right\"\n                    trigger=\"hover\"\n                    speaker={<Tooltip>{page.name}</Tooltip>}\n                  >\n                    <Nav.Item eventKey=\"1\" icon={<Icon icon={page.icon} />}>\n                      {capitalizeFirstLetter(page.link)}\n                    </Nav.Item>\n                  </Whisper>\n                </Link>\n              ))}\n            </Nav>\n            <Whisper\n              placement=\"right\"\n              trigger=\"hover\"\n              speaker={<Tooltip>{props.state.discordUsername}</Tooltip>}\n            >\n              <DiscordAvatar discordAvatar={props.state.discordAvatar} />\n            </Whisper>\n          </Sidenav.Body>\n        </Sidenav>\n      </Sidebar>\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => ({ state });\nexport default connect(mapStateToProps)(SidebarReact);\n","import React from 'react';\nimport { Button } from '@material-ui/core';\nimport '../app.css';\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport Typography from '@material-ui/core/Typography';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Chip from '@material-ui/core/Chip';\nimport { connect } from 'react-redux';\nimport {\n  Icon,\n  InputPicker,\n  Table,\n  Modal,\n  Checkbox,\n  Avatar,\n  Form,\n  InputGroup,\n  Input,\n  FormGroup,\n  FormControl,\n  ControlLabel,\n  Panel,\n  IconButton,\n  Button as RsuiteButton,\n  Dropdown,\n} from 'rsuite';\nimport cogoToast from 'cogo-toast';\n// import { datadogLogs } from '@datadog/browser-logs';\nimport { ContextMenu, MenuItem, ContextMenuTrigger } from 'react-contextmenu';\nimport Clock from 'react-live-clock';\n\nconst { ipcRenderer } = require('electron');\n\nconst { Column, HeaderCell, Cell } = Table;\n\nfunction passwordGenerator() {\n  return Math.random().toString(25).substr(2, 6).toUpperCase();\n}\nconst CheckCell = ({ rowData, onChange, checkedKeys, dataKey, ...props }) => (\n  <Cell {...props} style={{ padding: 0 }}>\n    <div style={{ lineHeight: '46px' }}>\n      <Checkbox\n        value={rowData[dataKey]}\n        inline\n        onChange={onChange}\n        checked={checkedKeys.some((item) => item === rowData[dataKey])}\n      />\n    </div>\n  </Cell>\n);\nclass TasksTable extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: this.props.state.tasks,\n      show: false,\n      logs: [],\n      store: '',\n      color: '',\n      profile: '',\n      proxy: '',\n      size: '',\n      keywords: '',\n      monitorDelay: 3000,\n      checkoutDelay: 3000,\n      account: '',\n      checkedKeys: this.props.state.checkedKeys,\n      selectedTaskGroup: '',\n      taskGroup: false,\n      formValue: {\n        id: passwordGenerator(),\n        taskGroupID: '',\n        store: '',\n        mode: '',\n        profile: '',\n        proxy: '',\n        size: '',\n        keywords: '',\n        color: '',\n        account: null,\n        monitorDelay: 3000,\n        checkoutDelay: 3000,\n        status: {\n          status: 'Idle',\n          statusColor: '#f2f2f2',\n        },\n      },\n      taskGroupForm: {\n        id: passwordGenerator(),\n        store: '',\n        groupName: '',\n        tasks: 0,\n      },\n    };\n  }\n\n  handleCheckAll = (value, checked) => {\n    const checkedKeys = checked\n      ? this.props.state.tasks.map((item) => item.id)\n      : [];\n    this.props.dispatch({ type: 'update', obj: { checkedKeys } });\n  };\n\n  handleCheck = (value, checked, event) => {\n    event.preventDefault();\n    if (event.nativeEvent.shiftKey) {\n      console.log('Shift Key');\n    }\n    const { checkedKeys } = this.props.state;\n    const nextCheckedKeys = checked\n      ? [...checkedKeys, value]\n      : checkedKeys.filter((item) => item !== value);\n    this.props.dispatch({\n      type: 'update',\n      obj: { checkedKeys: nextCheckedKeys },\n    });\n  };\n\n  getProfiles = () => {\n    const profiles = ipcRenderer.sendSync('get:profiles');\n    this.props.dispatch({ type: 'update', obj: { profiles } });\n  };\n\n  close = () => {\n    this.setState({ show: false });\n  };\n\n  open = () => {\n    this.setState({ show: true });\n  };\n\n  taskStatusColor = (status) => {\n    switch (status) {\n      case 'Idle':\n        return 'white';\n      case 'Successful Checkout':\n      case 'Checked Out':\n        return 'springgreen';\n      case 'Adding to Cart':\n        return '#0ee3c3';\n      case 'Starting Task':\n      case 'Submitting Shipping':\n      case 'Submitting Billing':\n      case 'Calculating Taxes':\n      case 'Visiting Home Page':\n        return '#4287f5';\n      case 'Checking Out':\n        return '#e3bc0e';\n      case 'Stopped':\n        return '#ff6b6b';\n      default:\n        return 'white';\n    }\n  };\n\n  getTasks = () => {\n    const tasks = ipcRenderer.sendSync('get:tasks');\n    this.props.dispatch({ type: 'update', obj: { tasks } });\n  };\n\n  search = (term) => {\n    if (term !== '') {\n      const filteredTasks = this.props.state.tasks.filter((row) =>\n        JSON.stringify(row).toLowerCase().includes(term.toLowerCase())\n      );\n      this.props.dispatch({\n        type: 'update',\n        obj: { filteredTasks, search: true },\n      });\n    } else {\n      this.props.dispatch({\n        type: 'update',\n        obj: { search: false },\n      });\n    }\n  };\n\n  startTask = (task) => {\n    ipcRenderer.send('start:tasks', task);\n    this.props.dispatch({ type: 'set-active-tasks', obj: { activeTasks: task.id } });\n  };\n\n  stopTasks = (task) => {\n    ipcRenderer.send('stop:tasks', task);\n  };\n\n  handleClick = (e, data) => {\n    this.setState(({ logs }) => ({\n      logs: [`Clicked on ${data.name} menu ${data.item}`, ...logs],\n    }));\n  };\n\n  handleChange = (name, value) => {\n    this.setState((prevState) => ({\n      ...prevState,\n      [name]: value,\n    }));\n  };\n\n  arrayToLabel = (array) => {\n    const labels = [];\n    for (const i in array) {\n      labels.push({ value: array[i].id, label: array[i].profileName });\n    }\n    return labels;\n  };\n\n  componentDidMount() {\n    this.getTasks();\n    this.getProfiles();\n    this.getTaskGroups();\n    this.getSessions();\n    this.getProxies();\n    this.getAccounts();\n  }\n\n  getTaskGroups = () => {\n    const taskGroups = ipcRenderer.sendSync('get:taskgroups');\n    this.props.dispatch({ type: 'update', obj: { taskGroups } });\n    this.setState((prevState) => ({\n      ...prevState,\n      selectedTaskGroup: taskGroups[0]?.id,\n    }));\n  };\n\n  getSessions = () => {\n    const sessions = ipcRenderer.sendSync('get:sessions');\n    this.props.dispatch({ type: 'update', obj: { sessions } });\n  };\n\n  getProxies = () => {\n    const proxies = ipcRenderer.sendSync('get:proxies');\n    this.props.dispatch({ type: 'update', obj: { proxies } });\n  };\n\n  getAccounts = () => {\n    const accounts = ipcRenderer.sendSync('get:accounts');\n    this.props.dispatch({ type: 'update', obj: { accounts } });\n  };\n\n  deleteTasks = (e, taskGroupID) => {\n    ipcRenderer.sendSync('delete:tasks', taskGroupID);\n    this.getTasks();\n    this.props.dispatch({\n      type: 'update',\n      obj: { checkedKeys: [] },\n    });\n\n    cogoToast.success(`Deleted Tasks`, {\n      position: 'top-right',\n      heading: 'Success',\n    });\n  };\n\n  deleteSomeTasks = (e, arg) => {\n    e.preventDefault();\n    ipcRenderer.sendSync('delete:some:tasks', arg);\n    this.getTasks();\n    this.props.dispatch({\n      type: 'update',\n      obj: { checkedKeys: [] },\n    });\n  };\n\n  createTasks = (event) => {\n    event.preventDefault();\n    const tasks = [];\n    for (let i = 0; i < this.state.formValue.quantity; i++) {\n      tasks.push({\n        id: passwordGenerator(),\n        taskGroupID: this.state.selectedTaskGroup,\n        store: this.capitalizeFirstLetter(\n          this.props.state.taskGroups.filter(\n            (item) => item?.id === this.state?.selectedTaskGroup\n          )[0]?.store\n        ),\n        mode: this.state.formValue.mode,\n        profile: this.state.formValue.profile,\n        proxy: this.state.formValue.proxy || 'local',\n        sku: this.state.formValue.sku,\n        session: this.state.formValue.session,\n        proxyName:\n          this.props.state.proxies[this.state.formValue.proxy]?.name || 'local',\n        monitorDelay: 3000,\n        checkoutDelay: 3000,\n        status: {\n          status: 'Idle',\n          statusColor: '#f2f2f2',\n        },\n      });\n    }\n    ipcRenderer.sendSync('create:tasks', tasks);\n    this.setState({ show: false });\n    cogoToast.success(\n      `Created ${\n        this.state.formValue.quantity > 1 ? this.state.formValue.quantity : ''\n      } Tasks`,\n      {\n        position: 'top-right',\n        heading: 'Success',\n      }\n    );\n    this.getTasks();\n  };\n\n  startAllTasks = (tasks) => {\n    if (tasks === 'all') {\n      for (const t in this.props.state.tasks) {\n        const task = this.props.state.tasks[t];\n        this.startTask(task);\n      }\n    } else {\n      for (const t in this.props.state.tasks) {\n        if (tasks.includes(this.props.state.tasks[t].id)) {\n          this.startTask(this.props.state.tasks[t]);\n        }\n      }\n    }\n  };\n\n  stopAllTasks = (tasks) => {\n    if (tasks === 'all') {\n      for (const t in this.props.state.tasks) {\n        const task = this.props.state.tasks[t];\n        this.stopTasks(task);\n      }\n    } else {\n      for (const t in this.props.state.tasks) {\n        if (tasks.includes(this.props.state.tasks[t].id)) {\n          this.stopTasks(this.props.state.tasks[t]);\n        }\n      }\n    }\n  };\n\n  capitalizeFirstLetter(string) {\n    try {\n      return string.charAt(0).toUpperCase() + string.slice(1);\n    } catch (e) {\n      return string;\n    }\n  }\n\n  height = () => {\n    const height = window.innerHeight;\n    return Math.round(0.75 * height);\n  };\n\n  createTaskGroup = () => {\n    this.setState((prevState) => ({\n      ...prevState,\n      taskGroup: true,\n    }));\n    this.open();\n  };\n\n  sendTaskGroup = (e) => {\n    const { taskGroupForm } = this.state;\n    if (taskGroupForm.groupName && taskGroupForm.store) {\n      ipcRenderer.send('create:taskgroup', this.state.taskGroupForm);\n      this.setState((prevState) => ({\n        ...prevState,\n        taskGroupForm: {\n          id: passwordGenerator(),\n          store: '',\n          groupName: '',\n          tasks : 0,\n        },\n      }));\n      this.close();\n      this.getTaskGroups();\n    } else {\n      cogoToast.error('Please fill in all fields', {\n        position: 'top-right',\n        heading: 'Error',\n      });\n    }\n  };\n\n  setSelectedTaskgroup(id) {\n    this.setState((prevState) => ({\n      ...prevState,\n      selectedTaskGroup: id,\n    }));\n  }\n\n  deleteTaskGroup = (e, id) => {\n    ipcRenderer.send('delete:taskgroup', id);\n    this.getTaskGroups();\n    this.getTasks();\n  };\n\n  getSessionsArray = (site) => {\n    const sessions = this.props.state.sessions[site];\n    const array = [];\n    for (const property in sessions) {\n      const accountName = this.props.state.accounts[site].filter(\n        (item) => item.id === sessions[property].account\n      )[0].alias;\n      array.push({\n        value: sessions[property].id,\n        label: accountName,\n      });\n    }\n    return array;\n  };\n\n  getProxiesArray = () => {\n    const { proxies } = this.props.state;\n    const array = [];\n    for (const property in proxies) {\n      array.push({\n        value: proxies[property].id,\n        label: proxies[property].name,\n      });\n    }\n    return array;\n  };\n\n  returnModal = (site) => {\n    console.log(site);\n    if (site === 'amazon') {\n      return (\n        <>\n          <FormGroup style={{ marginLeft: '5%' }}>\n            <ControlLabel>SKU</ControlLabel>\n            <FormControl\n              style={{ width: 'auto' }}\n              name=\"sku\"\n              placeholder=\"SKU\"\n            />\n          </FormGroup>\n          <FormGroup style={{ marginLeft: '5%' }}>\n            <ControlLabel>Mode</ControlLabel>\n            <FormControl\n              name=\"mode\"\n              placeholder=\"Mode\"\n              accepter={InputPicker}\n              data={this.props.state.siteToModes[site] ?? []}\n            />\n          </FormGroup>\n          <FormGroup style={{ marginLeft: '5%' }}>\n            <ControlLabel>Session</ControlLabel>\n            <FormControl\n              name=\"session\"\n              data={this.getSessionsArray(site)}\n              accepter={InputPicker}\n            />\n          </FormGroup>\n          <FormGroup style={{ position: 'absolute', top: '0%', left: '60%' }}>\n            <ControlLabel>Proxy</ControlLabel>\n            <FormControl\n              name=\"proxy\"\n              data={this.getProxiesArray()}\n              placeholder=\"Proxy\"\n              accepter={InputPicker}\n            />\n          </FormGroup>\n          <FormGroup style={{ position: 'absolute', top: '30%', left: '60%' }}>\n            <ControlLabel>Task Quantity</ControlLabel>\n            <FormControl name=\"quantity\" placeholder=\"Quantity\" />\n          </FormGroup>\n        </>\n      );\n    }\n    if (site === 'target') {\n      return (\n        <>\n          <FormGroup style={{ marginLeft: '5%' }}>\n            <ControlLabel>SKU</ControlLabel>\n            <FormControl\n              style={{ width: 'auto' }}\n              name=\"sku\"\n              placeholder=\"SKU\"\n            />\n          </FormGroup>\n          <FormGroup style={{ marginLeft: '5%' }}>\n            <ControlLabel>Mode</ControlLabel>\n            <FormControl\n              name=\"mode\"\n              placeholder=\"Mode\"\n              accepter={InputPicker}\n              data={this.props.state.siteToModes[site] ?? []}\n            />\n          </FormGroup>\n          <FormGroup style={{ marginLeft: '5%' }}>\n            <ControlLabel>Session</ControlLabel>\n            <FormControl\n              name=\"session\"\n              data={this.getSessionsArray(site)}\n              accepter={InputPicker}\n            />\n          </FormGroup>\n          <FormGroup style={{ position: 'absolute', top: '0%', left: '60%' }}>\n            <ControlLabel>Proxy</ControlLabel>\n            <FormControl\n              name=\"proxy\"\n              data={this.getProxiesArray()}\n              placeholder=\"Proxy\"\n              accepter={InputPicker}\n            />\n          </FormGroup>\n          <FormGroup style={{ position: 'absolute', top: '30%', left: '60%' }}>\n            <ControlLabel>Task Quantity</ControlLabel>\n            <FormControl name=\"quantity\" placeholder=\"Quantity\" />\n          </FormGroup>\n        </>\n      );\n    }\n\n    if (site === 'bestbuy') {\n      return (\n        <>\n          <FormGroup style={{ marginLeft: '5%' }}>\n            <ControlLabel>SKU</ControlLabel>\n            <FormControl\n              style={{ width: 'auto' }}\n              name=\"sku\"\n              placeholder=\"SKU\"\n            />\n          </FormGroup>\n          <FormGroup style={{ marginLeft: '5%' }}>\n            <ControlLabel>Mode</ControlLabel>\n            <FormControl\n              name=\"mode\"\n              placeholder=\"Mode\"\n              accepter={InputPicker}\n              data={this.props.state.siteToModes[site] ?? []}\n            />\n          </FormGroup>\n          <FormGroup style={{ position: 'absolute', top: '0%', left: '60%' }}>\n            <ControlLabel>Proxy</ControlLabel>\n            <FormControl\n              name=\"proxy\"\n              data={this.getProxiesArray()}\n              placeholder=\"Proxy\"\n              accepter={InputPicker}\n            />\n          </FormGroup>\n          <FormGroup style={{ position: 'absolute', top: '44%', left: '60%' }}>\n            <ControlLabel>Task Quantity</ControlLabel>\n            <FormControl name=\"quantity\" placeholder=\"Quantity\" />\n          </FormGroup>\n        </>\n      );\n    }\n  };\n\n  render() {\n    const { checkedKeys } = this.props.state;\n    const data = this.props.state.tasks;\n    let checked = false;\n    let indeterminate = false;\n\n    if (checkedKeys.length === data.length) {\n      checked = true;\n    } else if (checkedKeys.length === 0) {\n      checked = false;\n    } else if (checkedKeys.length > 0 && checkedKeys.length < data.length) {\n      indeterminate = true;\n    }\n    const { formValue, taskGroupForm } = this.state;\n\n    return (\n      <div>\n        <div>\n          <Modal show={this.state.show} onHide={this.close} size=\"md\">\n            <Modal.Header>\n              <Modal.Title>\n                Create {this.state.taskGroup ? 'Task Group' : 'Tasks'}\n              </Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n              {!this.state.taskGroup ? (\n                <Form\n                  fluid\n                  onChange={(formValue) => {\n                    this.setState({ formValue });\n                    console.log(formValue);\n                  }}\n                  formValue={formValue}\n                >\n                  {this.returnModal(\n                    this.props.state.taskGroups.filter(\n                      (item) => item?.id === this.state?.selectedTaskGroup\n                    )[0]?.store\n                  )}\n                  {/* <FormGroup style={{ marginLeft: '5%' }}>\n                    <ControlLabel>Site</ControlLabel>\n                    <FormControl\n                      name=\"Site\"\n                      placeholder=\"Site\"\n                      data={this.props.state.sites}\n                      accepter={InputPicker}\n                    />\n                  </FormGroup>\n                  <FormGroup style={{ marginLeft: '5%' }}>\n                    <ControlLabel>Monitor Input</ControlLabel>\n                    <FormControl\n                      style={{ width: 'auto' }}\n                      name=\"MonitorInput\"\n                      type=\"text\"\n                      placeholder=\"Keywords\"\n                    />\n                  </FormGroup>\n                  <FormGroup style={{ marginLeft: '5%' }}>\n                    <ControlLabel>Profile</ControlLabel>\n                    <FormControl\n                      name=\"Profile\"\n                      placeholder=\"Profile\"\n                      accepter={InputPicker}\n                      data={this.arrayToLabel(this.props.state.profiles)}\n                    />\n                  </FormGroup>\n                  <FormGroup style={{ marginLeft: '5%' }}>\n                    <ControlLabel>Size</ControlLabel>\n                    <FormControl\n                      name=\"Size\"\n                      placeholder=\"Size\"\n                      accepter={InputPicker}\n                    />\n                  </FormGroup>\n\n                  <FormGroup\n                    style={{ position: 'absolute', top: '0', left: '60%' }}\n                  >\n                    <ControlLabel>Mode</ControlLabel>\n                    <FormControl\n                      name=\"Mode\"\n                      placeholder=\"Mode\"\n                      accepter={InputPicker}\n                      data={this.props.state.siteToModes[formValue.site] ?? []}\n                    />\n                  </FormGroup>\n\n                  <FormGroup\n                    style={{ position: 'absolute', top: '22%', left: '60%' }}\n                  >\n                    <ControlLabel>Account</ControlLabel>\n                    <FormControl\n                      name=\"Account\"\n                      placeholder=\"Optional (None)\"\n                      accepter={InputPicker}\n                    />\n                  </FormGroup>\n\n                  <FormGroup\n                    style={{ position: 'absolute', top: '45%', left: '60%' }}\n                  >\n                    <ControlLabel>Proxy</ControlLabel>\n                    <FormControl\n                      name=\"Proxy\"\n                      placeholder=\"Proxy\"\n                      accepter={InputPicker}\n                    />\n                  </FormGroup>\n\n                  <FormGroup\n                    style={{ position: 'absolute', top: '68%', left: '60%' }}\n                  >\n                    <ControlLabel>Task Quantity</ControlLabel>\n                    <FormControl\n                      name=\"Quantity\"\n                      placeholder=\"Proxy\"\n                      accepter={InputPicker}\n                    />\n                  </FormGroup> */}\n                </Form>\n              ) : (\n                <Form\n                  fluid\n                  onChange={(taskGroupForm) => {\n                    this.setState({ taskGroupForm });\n                    console.log(taskGroupForm);\n                  }}\n                  formValue={taskGroupForm}\n                >\n                  <FormGroup style={{ marginLeft: '5%' }}>\n                    <ControlLabel>Site</ControlLabel>\n                    <FormControl\n                      name=\"store\"\n                      placeholder=\"Site\"\n                      data={this.props.state.sites}\n                      accepter={InputPicker}\n                    />\n                  </FormGroup>\n\n                  <FormGroup\n                    style={{ position: 'absolute', top: '0', left: '60%' }}\n                  >\n                    <ControlLabel>Group Name</ControlLabel>\n                    <FormControl name=\"groupName\" placeholder=\"Name\" />\n                  </FormGroup>\n                </Form>\n              )}\n            </Modal.Body>\n            <Modal.Footer>\n              <Button\n                onClick={this.close}\n                style={{\n                  color: 'white',\n                  border: '3px solid white',\n                  marginRight: '1rem',\n                }}\n                appearance=\"ghost\"\n              >\n                Cancel\n              </Button>\n              <Button\n                onClick={(event) =>\n                  !this.state.taskGroup\n                    ? this.createTasks(event)\n                    : this.sendTaskGroup(event)\n                }\n                style={{\n                  color: 'springgreen',\n                  border: '3px solid springgreen',\n                }}\n                appearance=\"ghost\"\n              >\n                Create Tasks\n              </Button>\n            </Modal.Footer>\n          </Modal>\n        </div>\n        <div\n          style={{\n            position: 'absolute',\n            top: '17px',\n            left: '80px',\n          }}\n        >\n          <Clock\n            format=\"HH:mm:ss\"\n            interval={1000}\n            ticking\n            style={{ position: 'absolute', top: '0', fontSize: '1rem' }}\n          />\n        </div>\n        <div\n          style={{\n            position: 'absolute',\n            top: '40px',\n            height: '80%',\n            width: '75%',\n            right: '0',\n            float: 'right',\n            fontSize: '22px',\n          }}\n        >\n          <Avatar\n            style={{ marginRight: '1rem', top: '0.5rem', position: 'absolute' }}\n            size=\"lg\"\n            src={\n              this.props.state.siteToImages[\n                this.props.state.taskGroups.filter(\n                  (item) => item?.id === this.state?.selectedTaskGroup\n                )[0]?.store\n              ]\n            }\n          />\n          <span\n            style={{\n              marginLeft: '4.75rem',\n              top: '0rem',\n              position: 'absolute',\n            }}\n          >\n            {\n              this.props.state.taskGroups.filter(\n                (item) => item?.id === this.state?.selectedTaskGroup\n              )[0]?.groupName\n            }{' '}\n            Task Group | Task Count:{' '}\n            {\n              this.props.state.tasks.filter(\n                (item) => item?.taskGroupID === this.state?.selectedTaskGroup\n              ).length\n            }{' '}\n            Tasks\n          </span>\n          <span\n            style={{\n              fontSize: '16px',\n              marginLeft: '4.75rem',\n              top: '3rem',\n              position: 'absolute',\n            }}\n          >\n            {checkedKeys.length} Tasks Selected\n            <Input\n              style={{\n                float: 'right',\n                position: 'absolute',\n                left: '120%',\n                top: '-24%',\n                width: '172%',\n                border: '3px ​solid #3c3f4',\n              }}\n              onChange={this.search}\n              placeholder=\"Search\"\n            />\n          </span>\n          <div style={{ position: 'absolute', top: '10px', right: '60px' }}>\n            <InputGroup style={{ width: '6rem' }}>\n              <InputGroup.Addon>\n                <Icon icon=\"check-circle\" style={{ color: 'springgreen' }} />\n              </InputGroup.Addon>\n              <Input value=\"0\" disabled />\n            </InputGroup>\n          </div>\n          <div style={{ position: 'absolute', top: '10px', right: '220px' }}>\n            <InputGroup style={{ width: '6rem' }}>\n              <InputGroup.Addon>\n                <Icon icon=\"shopping-cart\" style={{ color: 'mediumpurple' }} />\n              </InputGroup.Addon>\n              <Input value=\"0\" disabled />\n            </InputGroup>\n          </div>\n          <div style={{ position: 'absolute', top: '10px', right: '380px' }}>\n            <InputGroup style={{ width: '6rem' }}>\n              <InputGroup.Addon>\n                <Icon icon=\"warning\" style={{ color: 'crimson' }} />\n              </InputGroup.Addon>\n              <Input value=\"0\" disabled />\n            </InputGroup>\n          </div>\n        </div>\n        <div className=\"Tasks\">\n          <div\n            style={{\n              position: 'absolute',\n              top: '130px',\n              right: '20px',\n              height: '80%',\n              width: '75%',\n              float: 'right',\n            }}\n          >\n            <Button\n              id=\"create-tasks-btn\"\n              style={{ borderWidth: 2, marginTop: '10px' }}\n              variant=\"contained\"\n              color=\"secondary\"\n              onClick={(e) => {\n                this.setState((prevState) => ({\n                  ...prevState,\n                  taskGroup: false,\n                }));\n                this.open();\n              }}\n            >\n              + Create Tasks\n            </Button>\n            <Button\n              id=\"start-all-btn\"\n              style={{ borderWidth: 2, marginTop: '10px' }}\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={(e) =>\n                checkedKeys.length > 0\n                  ? this.startAllTasks(checkedKeys)\n                  : this.startAllTasks('all')\n              }\n            >\n              Start {checkedKeys.length > 0 ? 'selected' : 'all'}\n            </Button>\n            <Button\n              id=\"stop-all-btn\"\n              variant=\"contained\"\n              justify=\"flex-end\"\n              color=\"primary\"\n              onClick={(e) =>\n                checkedKeys.length > 0\n                  ? this.stopAllTasks(checkedKeys)\n                  : this.stopAllTasks('all')\n              }\n              style={{ borderWidth: 2, marginTop: '10px' }}\n            >\n              Stop {checkedKeys.length > 0 ? 'selected' : 'all'}\n            </Button>\n            <Button\n              id=\"edit-all-btn\"\n              variant=\"contained\"\n              justify=\"flex-end\"\n              color=\"primary\"\n              style={{ borderWidth: 2, marginTop: '10px' }}\n            >\n              Edit {checkedKeys.length > 0 ? 'selected' : 'all'}\n            </Button>\n\n            <Button\n              id=\"delete-all-btn\"\n              variant=\"contained\"\n              justify=\"flex-end\"\n              color=\"primary\"\n              onClick={(event) => {\n                checkedKeys.length >= 1\n                  ? this.deleteSomeTasks(event, checkedKeys)\n                  : this.deleteTasks(event, this.state.selectedTaskGroup);\n              }}\n              style={{ borderWidth: 2, marginTop: '10px' }}\n            >\n              Delete {checkedKeys.length > 0 ? 'selected' : 'all'}\n            </Button>\n          </div>\n          <div\n            style={{\n              position: 'absolute',\n              top: '190px',\n              right: '10px',\n              width: '75%',\n            }}\n          >\n            <ContextMenuTrigger preventClose={false} id=\"SIMPLE\">\n              <Table\n                height={this.height()}\n                data={\n                  !this.props.state.search\n                    ? this.props.state.tasks.filter(\n                        (item) =>\n                          item.taskGroupID === this.state.selectedTaskGroup\n                      )\n                    : this.props.state.filteredTasks.filter(\n                        (item) =>\n                          item.taskGroupID === this.state.selectedTaskGroup\n                      )\n                }\n                // data={this.props.state.tasks}\n                virtualized\n                // onRowClick={(rowData) => {\n                //   console.log(rowData.id);\n                // }}\n                shouldUpdateScroll={false}\n                renderEmpty={() => (\n                  <div\n                    style={{\n                      fontSize: '20px',\n                      top: '40%',\n                      width: '100%',\n                      textAlign: 'center',\n                      display: 'block',\n                      lineHeight: '40px',\n                      position: 'absolute',\n                      fontWeight: 'bold',\n                    }}\n                  >\n                    Create Tasks to Get Started 😎\n                  </div>\n                )}\n              >\n                <Column width={50} align=\"center\">\n                  <HeaderCell style={{ padding: 0 }}>\n                    <div style={{ lineHeight: '40px' }}>\n                      <Checkbox\n                        inline\n                        checked={checked}\n                        indeterminate={indeterminate}\n                        onChange={this.handleCheckAll}\n                      />\n                    </div>\n                  </HeaderCell>\n                  <CheckCell\n                    dataKey=\"id\"\n                    checkedKeys={checkedKeys}\n                    onChange={this.handleCheck}\n                  />\n                </Column>\n                <Column width={120} align=\"center\">\n                  <HeaderCell>ID</HeaderCell>\n                  <Cell dataKey=\"id\" />\n                </Column>\n\n                <Column width={130}>\n                  <HeaderCell>Store</HeaderCell>\n                  <Cell dataKey=\"store\" />\n                </Column>\n\n                <Column width={180}>\n                  <HeaderCell>Product</HeaderCell>\n                  <Cell dataKey=\"sku\" />\n                </Column>\n\n                <Column width={100}>\n                  <HeaderCell>Proxy</HeaderCell>\n                  <Cell dataKey=\"proxyName\" />\n                </Column>\n\n                <Column width={150}>\n                  <HeaderCell>Mode</HeaderCell>\n                  <Cell dataKey=\"mode\" />\n                </Column>\n\n                <Column width={220}>\n                  <HeaderCell>Status</HeaderCell>\n                  <Cell>\n                    {(rowData) => {\n                      return (\n                        <span\n                          style={{\n                            color: `${this.taskStatusColor(\n                              this.props.state.statuses[rowData.id]\n                            )}`,\n                          }}\n                        >\n                          {this.props.state.statuses[rowData.id]\n                            ? this.props.state.statuses[rowData.id]\n                            : 'Idle'}\n                        </span>\n                      );\n                    }}\n                  </Cell>\n                </Column>\n                <Column width={120} fixed=\"right\">\n                  <HeaderCell>Actions</HeaderCell>\n                  <Cell>\n                    {(rowData) => {\n                      return (\n                        <span>\n                          <Icon\n                            icon=\"trash2\"\n                            size=\"lg\"\n                            style={{ color: 'crimson', paddingRight: '20px' }}\n                            onClick={(e) =>\n                              this.deleteSomeTasks(e, [rowData.id])\n                            }\n                          />\n                          <Icon\n                            icon=\"pencil\"\n                            size=\"lg\"\n                            style={{ color: 'white', paddingRight: '20px' }}\n                            // onClick={(e) => {\n                            //   datadogLogs.logger.info('Checkout', {\n                            //     name: 'Amazon',\n                            //     service: 'Aladdin AIO',\n                            //     env: 'dev',\n                            //     sku: 'BHA32SDAS',\n                            //     site: 'Bestbuy',\n                            //     mode: 'Fast',\n                            //   });\n                            // }}\n                          />\n                          <Icon\n                            icon={this.props.state.activeTasks.includes(rowData.id) ? 'stop2' : 'play'}\n                            size=\"lg\"\n                            style={{\n                              color: `${\n                                this.props.state.activeTasks.includes(rowData.id) ? 'white' : 'springgreen'\n                              }`,\n                              paddingRight: '5px',\n                            }}\n                            onClick={(e) => this.startTask(rowData)}\n                          />\n                        </span>\n                      );\n                    }}\n                  </Cell>\n                </Column>\n              </Table>\n            </ContextMenuTrigger>\n            <ContextMenu hideOnLeave id=\"SIMPLE\">\n              <MenuItem onClick={this.handleClick} data={{ item: 'item 1' }}>\n                <Icon icon=\"play\" style={{ color: 'springgreen' }} /> &nbsp;\n                Start\n              </MenuItem>\n              <MenuItem onClick={this.handleClick} data={{ item: 'item 2' }}>\n                <Icon icon=\"stop\" /> &nbsp; Stop\n              </MenuItem>\n              <MenuItem divider />\n              <MenuItem onClick={this.handleClick} data={{ item: 'item 3' }}>\n                <Icon icon=\"copy\" /> &nbsp; Duplicate\n              </MenuItem>\n              <MenuItem onClick={this.handleClick} data={{ item: 'item 4' }}>\n                <Icon icon=\"edit2\" style={{ color: 'mediumpurple' }} /> &nbsp;\n                Edit\n              </MenuItem>\n              <MenuItem onClick={this.handleClick} data={{ item: 'item 5' }}>\n                <Icon icon=\"trash2\" style={{ color: 'crimson' }} /> &nbsp;\n                Delete\n              </MenuItem>\n            </ContextMenu>\n          </div>\n          <div\n            className=\"TaskGroup\"\n            style={{\n              width: '18%',\n              position: 'absolute',\n              top: '-25px',\n              left: '4.5%',\n              overflowY: 'scroll',\n              display: 'block',\n              height: '88%',\n              marginTop: '80px',\n              overflowX: 'hidden',\n            }}\n          >\n            <div>\n              <>\n                {' '}\n                <div\n                  style={{\n                    fontSize: '20px',\n                    margin: 'auto',\n                    textAlign: 'center',\n                  }}\n                >\n                  Task Groups\n                </div>\n                <RsuiteButton\n                  style={{ marginBottom: '2rem', left: '20%' }}\n                  size=\"lg\"\n                  color=\"blue\"\n                  onClick={this.createTaskGroup}\n                >\n                  <Icon icon=\"plus-square\" /> Create Group\n                </RsuiteButton>\n              </>\n              {this.props.state?.taskGroups.length ? (\n                this.props.state?.taskGroups.map((row) => (\n                  <div\n                    style={{\n                      backgroundColor: 'rgb(41, 44, 62)',\n                      marginBottom: '10px',\n                      float: 'left',\n                      width: '97%',\n                      height: '50%',\n                      border: `${\n                        this.state?.selectedTaskGroup === row?.id\n                          ? '2px solid #92ade0'\n                          : 'none'\n                      }`,\n                    }}\n                    key={row?.id}\n                    onClick={(e) => this.setSelectedTaskgroup(row?.id)}\n                  >\n                    <div>\n                      <Panel shaded bordered>\n                        <div style={{ float: 'right' }}>\n                          <Dropdown\n                            placement=\"leftStart\"\n                            renderTitle={() => {\n                              return (\n                                <IconButton\n                                  style={{\n                                    float: 'right',\n                                    position: 'static',\n                                    background: 'transparent',\n                                  }}\n                                  size=\"lg\"\n                                  icon={<Icon icon=\"ellipsis-h\" />}\n                                />\n                              );\n                            }}\n                          >\n                            <Dropdown.Item\n                              onSelect={(e) => this.deleteTaskGroup(e, row?.id)}\n                            >\n                              <Icon icon=\"trash2\" /> Delete Group\n                            </Dropdown.Item>\n                            {/* <Dropdown.Item>\n                              <Icon icon=\"group\" /> Rename Group\n                            </Dropdown.Item> */}\n                          </Dropdown>\n                        </div>\n                        <div>\n                          <div style={{ display: '-webkit-box' }}>\n                            <img\n                              alt=\"\"\n                              width=\"40\"\n                              src={this.props.state.siteToImages[row?.store]}\n                            />\n\n                            <Typography\n                              style={{ marginTop: '3%', marginLeft: '5%' }}\n                              component=\"h2\"\n                              variant=\"subtitle1\"\n                            >\n                              {row?.groupName}\n                            </Typography>\n                          </div>\n                        </div>\n\n                        {/* <Chip\n                          size=\"small\"\n                          color=\"secondary\"\n                          style={{\n                            margin: '5px 2px 3px 2px',\n                            backgroundColor: '#e7ff00',\n                            color: 'black',\n                          }}\n                          icon={<ShoppingCartIcon />}\n                          label=\"0\"\n                        />\n                        <Chip\n                          size=\"small\"\n                          color=\"secondary\"\n                          style={{\n                            margin: '5px 2px 3px 2px',\n                            backgroundColor: '#1fcc61',\n                            color: 'black',\n                          }}\n                          icon={<CheckCircleIcon />}\n                          label=\"0\"\n                        />\n                        <Chip\n                          size=\"small\"\n                          color=\"secondary\"\n                          style={{\n                            margin: '5px 2px 3px 2px',\n                            backgroundColor: '#cd5161',\n                            color: 'black',\n                          }}\n                          icon={<CloseIcon />}\n                          label=\"0\"\n                        /> */}\n                      </Panel>\n                    </div>\n                  </div>\n                ))\n              ) : (\n                <> </>\n              )}\n            </div>\n            <div />\n          </div>\n        </div>\n        <div>\n          <span\n            style={{\n              bottom: '20px',\n              position: 'absolute',\n              color: 'springgreen',\n              left: '4rem',\n            }}\n          >\n            <Icon icon=\"circle\" /> &nbsp; Connected\n          </span>\n          <span\n            style={{\n              bottom: '20px',\n              position: 'absolute',\n              color: 'springgreen',\n              left: '12rem',\n            }}\n          >\n            <Icon icon=\"code-fork\" /> &nbsp; Version 1.0.1\n          </span>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({ state });\nexport default connect(mapStateToProps)(TasksTable);\n","import React from 'react';\nimport { InputPicker, Input, InputGroup, Panel, Avatar } from 'rsuite';\nimport Clock from 'react-live-clock';\nimport { Button } from '@material-ui/core';\nimport cogoToast from 'cogo-toast';\nimport { connect } from 'react-redux';\nimport $ from 'jquery';\n\nconst childProcess = require('child_process');\nconst { ipcRenderer } = require('electron');\n\nconst styles = {\n  width: 360,\n  marginBottom: 10,\n  marginTop: 10,\n};\n\nconst styles1 = {\n  width: 700,\n  marginBottom: 10,\n  marginTop: 10,\n};\n\nclass Settings extends React.Component {\n  constructor(props) {\n    super(props);\n    this.testWebhook = this.testWebhook.bind(this);\n    this.saveSettings = this.saveSettings.bind(this);\n    this.deactivate = this.deactivate.bind(this);\n    this.onTodoChange = this.onTodoChange.bind(this);\n    this.state = {\n    };\n  }\n\n  testWebhook(event, arg) {\n    event.preventDefault();\n    ipcRenderer.send('test:webhook', (event, arg));\n    cogoToast.success('Webhook Sent Successfully', {\n      position: 'top-right',\n      heading: 'Success',\n    });\n  }\n\n  onTodoChange(name, value) {\n    this.setState((prevState) => ({\n      ...prevState,\n      [name]: value,\n    }));\n  }\n\n  getSettings() {\n    const settings = ipcRenderer.sendSync('get:settings') || {\n      RetryDelays: 2222,\n      MonitorDelays: 3333,\n      WebhookURL: '',\n    };\n    console.log(settings);\n    this.setState(settings);\n  }\n\n  getProfiles = () => {\n    const profiles = ipcRenderer.sendSync('get:profiles');\n    this.props.dispatch({ type: 'update', obj: { profiles } });\n  };\n\n  componentDidMount() {\n    this.getSettings();\n    this.getProfiles();\n  }\n\n  saveSettings(event) {\n    event.preventDefault();\n    console.log(this.state);\n    const arg = this.state;\n    ipcRenderer.send('save:settings', arg);\n    cogoToast.success('Saved Settings', {\n      position: 'top-right',\n      heading: 'Success',\n    });\n  }\n\n  deactivate(event) {\n    event.preventDefault();\n    ipcRenderer.send('deactivate');\n    cogoToast.success('Deactivated Your Instance', {\n      position: 'top-right',\n      heading: 'Success',\n    });\n  }\n\n  openLogs() {\n    ipcRenderer.send('open:logs');\n  }\n\n  render() {\n    const { RetryDelays, MonitorDelays, WebhookURL } = this.state;\n    return (\n      <div\n        className=\"SettingsPage\"\n        style={{\n          width: '90%',\n          height: '100%',\n          position: 'absolute',\n          top: '50px',\n          left: '8%',\n        }}\n      >\n        <Button\n          id=\"import-btn\"\n          style={{ borderWidth: 2, float: 'right' }}\n          variant=\"outlined\"\n          color=\"secondary\"\n        >\n          Import All\n        </Button>\n        <Button\n          id=\"export-btn\"\n          style={{ borderWidth: 2, float: 'right' }}\n          variant=\"outlined\"\n          color=\"primary\"\n        >\n          Export All\n        </Button>\n        <Button\n          id=\"save-btn\"\n          variant=\"outlined\"\n          justify=\"flex-end\"\n          color=\"primary\"\n          onClick={(event) => this.saveSettings(event)}\n          style={{ borderWidth: 2, float: 'right' }}\n        >\n          Save\n        </Button>\n        <Button\n          id=\"open-logs-btn\"\n          variant=\"outlined\"\n          justify=\"flex-end\"\n          color=\"primary\"\n          onClick={this.openLogs}\n          style={{ borderWidth: 2, float: 'right' }}\n        >\n          Open Logs\n        </Button>\n        <Button\n          id=\"deactivate-btn\"\n          variant=\"outlined\"\n          justify=\"flex-end\"\n          color=\"primary\"\n          onClick={(event) => this.deactivate(event)}\n          style={{ borderWidth: 2, float: 'right' }}\n        >\n          Deactivate\n        </Button>\n\n        <h5>Settings</h5>\n\n        <Clock\n          format=\"HH:mm:ss\"\n          interval={1000}\n          ticking\n          style={{ position: 'absolute', top: '-25px', fontSize: '1rem' }}\n        />\n\n        <Panel\n          header=\"License\"\n          shaded\n          collapsible\n          defaultExpanded\n          style={{ marginTop: '5%', width: '35%' }}\n        >\n          <h6 style={{ marginBottom: '10px' }}>Discord</h6>\n          <div>\n            <Avatar\n              circle\n              size=\"lg\"\n              style={{ marginBottom: '10px' }}\n              src={this.props.state?.discordAvatar}\n              alt=\"RU\"\n            />\n            <h6\n              style={{\n                float: 'right',\n                fontWeight: '800',\n                fontSize: '15px',\n                margin: 'auto',\n                width: '90%',\n                marginTop: '5%',\n                marginRight: '-11%',\n              }}\n            >\n              {this.state?.username}\n            </h6>\n          </div>\n\n          <h6 style={{ marginBottom: '10px' }}>\n            License Key: {this.state?.LicenseKey}\n          </h6>\n          {/* <h6>Type: Lifetime Key</h6>\n          <h6>Expiry: Never</h6> */}\n        </Panel>\n\n        <Panel\n          header=\"Miscellaneous Settings\"\n          shaded\n          collapsible\n          defaultExpanded\n          style={{ position: 'absolute', top: '45%', width: '35%' }}\n        >\n          Discord Webhook\n          <InputGroup style={{ marginTop: '3%', marginBottom: '3%' }}>\n            <Input\n              id=\"WebhookURL\"\n              value={WebhookURL}\n              onChange={(event) =>\n                this.onTodoChange('WebhookURL', $('#WebhookURL').val())\n              }\n            />\n            <InputGroup.Button\n              onClick={(event) =>\n                this.testWebhook(event, $('#WebhookURL').val())\n              }\n            >\n              Test\n            </InputGroup.Button>\n          </InputGroup>\n          <h6>Delays</h6>\n          <Input\n            id=\"RetryDelays\"\n            name=\"RetryDelays\"\n            value={RetryDelays}\n            style={styles}\n            placeholder=\"Retry Delays\"\n            onChange={(event) =>\n              this.onTodoChange('RetryDelays', $('#RetryDelays').val())\n            }\n          />\n          <Input\n            id=\"MonitorDelays\"\n            name=\"MonitorDelays\"\n            value={MonitorDelays}\n            style={styles}\n            placeholder=\"Monitor Delays\"\n            onChange={(event) =>\n              this.onTodoChange('MonitorDelays', $('#MonitorDelays').val())\n            }\n          />\n        </Panel>\n\n        <Panel\n          header=\"Quick Task Config\"\n          shaded\n          defaultExpanded\n          collapsible\n          style={{\n            position: 'absolute',\n            top: '10%',\n            left: '50%',\n            width: '40%',\n          }}\n        >\n          Account Email\n          <InputGroup style={styles}>\n            <Input />\n          </InputGroup>\n          Account Password\n          <InputGroup style={styles}>\n            <Input />\n          </InputGroup>\n          Profile\n          <InputPicker\n            style={styles1}\n            data={data}\n            placeholder=\"Select Profile\"\n          />\n          Proxies\n          <InputPicker\n            style={styles1}\n            data={data}\n            placeholder=\"Select Proxies\"\n          />\n          Size\n          <InputPicker style={styles1} data={data} placeholder=\"Select Sizes\" />\n          Mode\n          <InputPicker style={styles1} data={data} placeholder=\"Select Mode\" />\n        </Panel>\n      </div>\n    );\n  }\n}\n\nconst data = [\n  // {\n  //   label: 'Main Debit',\n  //   value: 'Eugenia',\n  //   role: 'Master',\n  // },\n  // {\n  //   label: 'Capital One',\n  //   value: 'Kariane',\n  //   role: 'Master',\n  // },\n  // {\n  //   label: 'Cashapp',\n  //   value: 'Louisa',\n  //   role: 'Master',\n  // },\n  // {\n  //   label: 'Eno',\n  //   value: 'Marty',\n  //   role: 'Master',\n  // },\n  // {\n  //   label: 'Privacy',\n  //   value: 'Kenya',\n  //   role: 'Master',\n  // },\n  // {\n  //   label: 'Slut',\n  //   value: 'Hal',\n  //   role: 'Developer',\n  // },\n  // {\n  //   label: 'Julius',\n  //   value: 'Julius',\n  //   role: 'Developer',\n  // },\n];\n\nconst mapStateToProps = (state) => ({ state });\nexport default connect(mapStateToProps)(Settings);\n","import React from 'react';\nimport Clock from 'react-live-clock';\nimport Paper from '@material-ui/core/Paper';\nimport { Icon, Panel, Avatar, FlexboxGrid, List } from 'rsuite';\nimport { connect } from 'react-redux';\nimport cogoToast from 'cogo-toast';\n\nimport { Doughnut } from 'react-chartjs-2';\n\nconst { ipcRenderer } = require('electron');\n\nconst DoughnutData = {\n  labels: ['Amazon', 'Target', 'Bestbuy'],\n  datasets: [\n    {\n      label: '# of Votes',\n      data: [8, 10, 3],\n      backgroundColor: ['#f72585', '#480ca8', '#4895ef'],\n      borderColor: [\n        'rgba(255, 99, 132, 1)',\n        'rgba(54, 162, 235, 1)',\n        'rgba(255, 206, 86, 1)',\n      ],\n      borderWidth: 1,\n    },\n  ],\n};\n\nconst data = [\n  {\n    title: 'Sony PlayStation 5 Video Game Console',\n    image:\n      'https://i5.walmartimages.com/asr/fd596ed4-bf03-4ecb-a3b0-7a9c0067df83.bb8f535c7677cebdd4010741c6476d3a.png?odnWidth=612&odnHeight=612&odnBg=ffffff',\n    site: 'Amazon',\n    date: 1626198688053,\n    price: '499.99',\n  },\n  {\n    title: 'Sony PlayStation 5 Video Game Console',\n    image:\n      'https://i5.walmartimages.com/asr/fd596ed4-bf03-4ecb-a3b0-7a9c0067df83.bb8f535c7677cebdd4010741c6476d3a.png?odnWidth=612&odnHeight=612&odnBg=ffffff',\n    site: 'Amazon',\n    date: 1626198688053,\n    price: '499.99',\n  },\n  {\n    title: 'Sony PlayStation 5 Video Game Console',\n    image:\n      'https://i5.walmartimages.com/asr/fd596ed4-bf03-4ecb-a3b0-7a9c0067df83.bb8f535c7677cebdd4010741c6476d3a.png?odnWidth=612&odnHeight=612&odnBg=ffffff',\n    site: 'Amazon',\n    date: 1626198688053,\n    price: '499.99',\n  },\n  {\n    title: 'Sony PlayStation 5 Video Game Console',\n    image:\n      'https://i5.walmartimages.com/asr/fd596ed4-bf03-4ecb-a3b0-7a9c0067df83.bb8f535c7677cebdd4010741c6476d3a.png?odnWidth=612&odnHeight=612&odnBg=ffffff',\n    site: 'Amazon',\n    date: 1626198688053,\n    price: '499.99',\n  },\n  {\n    title: 'Sony PlayStation 5 Video Game Console',\n    image:\n      'https://i5.walmartimages.com/asr/fd596ed4-bf03-4ecb-a3b0-7a9c0067df83.bb8f535c7677cebdd4010741c6476d3a.png?odnWidth=612&odnHeight=612&odnBg=ffffff',\n    site: 'Amazon',\n    date: 1626198688053,\n    price: '499.99',\n  },\n];\nconst styleCenter = {\n  display: 'flex',\n  justifyContent: 'center',\n  alignItems: 'center',\n  height: '60px',\n};\n\nconst slimText = {\n  fontSize: '0.666em',\n  color: '#97969B',\n  fontWeight: 'lighter',\n  paddingBottom: 5,\n};\n\nconst titleStyle = {\n  paddingBottom: 5,\n  whiteSpace: 'nowrap',\n  fontWeight: 500,\n};\n\nclass Dashboard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  getAnalytics = () => {\n    const analytics = ipcRenderer.sendSync('get:analytics');\n    this.props.dispatch({ type: 'update', obj: { analytics } });\n  };\n\n  componentDidMount() {\n    this.getAnalytics();\n    // if (!JSON.stringify(this.props.state.announcements).includes('pdate')) {\n    //   this.fetchAnnouncements();\n    // }\n  }\n\n  async fetchAnnouncements() {\n    const response = await fetch(\n      'https://aladdin-aio.com/api/announcements'\n    );\n    const responseJSON = await response.json();\n    this.announcements = responseJSON.announcements;\n    this.props.dispatch({\n      type: 'update',\n      obj: { announcements: responseJSON.announcements },\n    });\n  }\n\n  daysAgo(date) {\n    const today = new Date();\n    const createdOn = new Date(date);\n    const msInDay = 24 * 60 * 60 * 1000;\n\n    createdOn.setHours(0, 0, 0, 0);\n    today.setHours(0, 0, 0, 0);\n\n    const diff = (+today - +createdOn) / msInDay;\n    return Math.round(diff);\n  }\n\n  render() {\n    return (\n      <div\n        className=\"SettingsPage\"\n        style={{ width: '90%', position: 'absolute', top: '50px', left: '8%' }}\n      >\n        <h5>Dashboard | Analytics</h5>\n\n        <Clock\n          format=\"HH:mm:ss\"\n          interval={1000}\n          ticking\n          style={{ position: 'absolute', top: '-25px', fontSize: '1rem' }}\n        />\n\n        <Paper\n          style={{\n            color: 'black',\n            marginTop: '2rem',\n            background:\n              'linear-gradient(90deg, hsla(152, 100%, 50%, 1) 0%, hsla(186, 100%, 69%, 1) 100%)',\n            width: '16rem',\n            height: '6rem',\n          }}\n        >\n          <span\n            style={{\n              position: 'absolute',\n              top: '43%',\n              marginLeft: '1.5rem',\n              transform: 'translateY(-50%)',\n            }}\n          >\n            <Icon icon=\"check-circle\" size=\"5x\" />\n          </span>\n          <h5\n            style={{\n              textAlign: 'center',\n              float: 'right',\n              paddingTop: '14%',\n              paddingRight: '9%',\n            }}\n          >\n            {this.props.state.analytics.checkouts} Checkouts\n          </h5>\n        </Paper>\n\n        <Paper\n          style={{\n            color: 'black',\n            marginTop: '2rem',\n            background:\n              'linear-gradient(90deg, hsla(340, 80%, 69%, 1) 0%, hsla(15, 93%, 71%, 1) 100%)',\n            position: 'absolute',\n            left: '18rem',\n            width: '16rem',\n            height: '6rem',\n            top: '1.6rem',\n          }}\n        >\n          <span\n            style={{\n              position: 'absolute',\n              top: '50%',\n              marginLeft: '1.5rem',\n              transform: 'translateY(-50%)',\n            }}\n          >\n            <Icon icon=\"times-circle\" size=\"5x\" />\n          </span>\n          <h5\n            style={{\n              top: '62%',\n              position: 'absolute',\n              left: '55%',\n              transform: 'translateY(-100%)',\n            }}\n          >\n            {this.props.state.analytics.declines} Declines\n          </h5>\n        </Paper>\n\n        <Paper\n          style={{\n            color: 'black',\n            marginTop: '2rem',\n            background:\n              'linear-gradient(90deg, hsla(238, 100%, 71%, 1) 0%, hsla(295, 100%, 84%, 1) 100%)',\n            position: 'absolute',\n            left: '36rem',\n            width: '17rem',\n            height: '6rem',\n            top: '1.6rem',\n          }}\n        >\n          <span\n            style={{\n              position: 'absolute',\n              top: '50%',\n              marginLeft: '1.5rem',\n              transform: 'translateY(-50%)',\n            }}\n          >\n            <Icon icon=\"credit-card\" size=\"5x\" />\n          </span>\n          <h5\n            style={{\n              top: '62%',\n              position: 'absolute',\n              left: '51%',\n              transform: 'translateY(-100%)',\n            }}\n          >\n            ${this.props.state.analytics.totalSpent} Spent\n          </h5>\n        </Paper>\n\n        <Panel\n          style={{\n            width: '30%',\n            float: 'right',\n            top: '22%',\n            position: 'absolute',\n            right: '0%',\n            height: '600px',\n            overflowY: 'scroll',\n            overflowX: 'clip',\n          }}\n          header={\n            <>\n              Announcements\n              <Icon\n                style={{ float: 'right', marginTop: '5px' }}\n                icon=\"refresh2\"\n                onClick={(e) => {\n                  e.preventDefault();\n                  this.fetchAnnouncements();\n                  cogoToast.success(`Fetching Announcements`, {\n                    position: 'top-right',\n                  });\n                }}\n              />\n            </>\n          }\n          bordered\n        >\n          {this.props.state?.announcements.length > 0 ? (\n            this.props.state?.announcements.map((item, index) => (\n              <div\n                style={{\n                  background: 'rgb(39 42 66)',\n                  marginBottom: '2rem',\n                  borderRadius: '6px',\n                }}\n                key={index}\n              >\n                <u>\n                  <h6 style={{ marginLeft: '2.5rem', paddingTop: '1rem' }}>\n                    {item.title}\n                  </h6>\n                </u>\n                <div\n                  style={{\n                    marginLeft: '1.5rem',\n                    padding: '1rem',\n                    paddingBottom: '2rem',\n                  }}\n                >\n                  {item.message}\n                </div>\n                <div\n                  style={{\n                    position: 'relative',\n                    left: '15.5rem',\n                    top: '-1rem',\n                  }}\n                >\n                  <div\n                    style={{\n                      right: '50%',\n                      position: 'relative',\n                    }}\n                  >\n                    {/* <Avatar\n                      src=\"./assets/logo_transparent.png\"\n                      size=\"sm\"\n                      circle\n                    /> */}\n                    {/* <div>\n                      &nbsp; Aladdin Updates\n                      {this.daysAgo(item.date) === 0\n                        ? `Today - ${\n                            new Date()\n                              .toLocaleString()\n                              .split(',')[0]\n                              .split('/2021')[0]\n                          }`\n                        : `${this.daysAgo(item.date)} days ago`}\n                    </div> */}\n                  </div>\n                </div>\n              </div>\n            ))\n          ) : (\n            <> </>\n          )}\n        </Panel>\n\n        <div style={{ marginTop: '5%' }}>\n          <h5>Recent Checkouts</h5>\n          <List\n            size=\"sm\"\n            style={{\n              marginRight: '1.5rem',\n              maxWidth: 'fit-content',\n              maxHeight: '400px',\n              position: 'absolute',\n            }}\n          >\n            {data.map((item, index) => (\n              <List.Item key={index} index={index}>\n                <FlexboxGrid>\n                  {/* icon */}\n                  <FlexboxGrid.Item colspan={25} style={styleCenter}>\n                    <img width=\"50\" src={item.image} alt=\"\" />\n                  </FlexboxGrid.Item>\n                  {/* base info */}\n                  <FlexboxGrid.Item\n                    colspan={25}\n                    style={{\n                      ...styleCenter,\n                      flexDirection: 'column',\n                      alignItems: 'flex-start',\n                      overflow: 'hidden',\n                    }}\n                  >\n                    <div style={titleStyle}>{item.title}</div>\n                    <div style={slimText}>\n                      <div\n                        style={{ fontSize: '14px', fontWeight: 'bold' }}\n                      >{` ${item.site} - $${item.price}`}</div>\n                      <div style={{ fontSize: '12px' }}>\n                        {new Date(item.date).toLocaleDateString()}\n                      </div>\n                    </div>\n                  </FlexboxGrid.Item>\n                  {/* peak data */}\n                </FlexboxGrid>\n              </List.Item>\n            ))}\n          </List>\n        </div>\n\n        <div\n          style={{\n            width: '400px',\n            position: 'absolute',\n            left: '30%',\n            top: '90%',\n          }}\n        >\n          <h5 style={{ marginBottom: '1rem' }}>Checkouts By Site</h5>\n          <Doughnut data={DoughnutData} />\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({ state });\nexport default connect(mapStateToProps)(Dashboard);\n","import React from 'react';\nimport {\n  Panel,\n  Icon,\n  Button,\n  Avatar,\n  IconButton,\n  Input,\n  FormGroup,\n  FormControl,\n  ControlLabel,\n  List,\n  Dropdown,\n  Modal,\n  Form,\n  FlexboxGrid,\n} from 'rsuite';\nimport Clock from 'react-live-clock';\nimport { connect } from 'react-redux';\nimport cogoToast from 'cogo-toast';\n\nconst { ipcRenderer } = require('electron');\n\nconst styleCenter = {\n  display: 'flex',\n  justifyContent: 'center',\n  alignItems: 'center',\n  height: '60px',\n};\n\nconst titleStyle = {\n  paddingBottom: 5,\n  whiteSpace: 'nowrap',\n  fontWeight: 500,\n};\n\nclass Proxies extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedProxygroup: '',\n      edit: false,\n      formValue: {\n        name: '',\n        proxies: '',\n      },\n    };\n  }\n\n  search = (term) => {\n    if (term !== '') {\n      const filteredProxies = this.props.state.proxies.filter((row) =>\n        JSON.stringify(row).toLowerCase().includes(term.toLowerCase())\n      );\n      this.props.dispatch({\n        type: 'update',\n        obj: { filteredProxies, search: true },\n      });\n    } else {\n      this.props.dispatch({\n        type: 'update',\n        obj: { search: false },\n      });\n    }\n  };\n\n  close = () => {\n    this.setState({ show: false });\n  };\n\n  open = () => {\n    this.setState({ show: true });\n  };\n\n  editProxyGroup = (e) => {\n    this.setState((prevState) => ({\n      ...prevState,\n      edit: true,\n      formValue: {\n        id: this.props.state.proxies[prevState.selectedProxygroup].id,\n        name: this.props.state.proxies[prevState.selectedProxygroup].name,\n        proxies: this.formatProxy(\n          this.props.state.proxies[prevState.selectedProxygroup]\n        ),\n      },\n    }));\n    this.open();\n  };\n\n  sendEditProxies = () => {\n    console.log(this.state.formValue);\n    ipcRenderer.send('edit:proxy', this.state.formValue);\n    this.close();\n    this.getProxies();\n    cogoToast.success(`Edited Proxy Group`, {\n      position: 'top-right',\n      heading: 'Success',\n    });\n  };\n\n  formatProxy = (proxyObject) => {\n    let proxyText = '';\n    const { proxies } = proxyObject;\n    const keys = Object.keys(proxies);\n    for (let i = 0; i < keys.length; i += 1) {\n      const key = keys[i];\n      const value = proxies[key];\n      if (!value.user && !value.password) {\n        proxyText += `${value.ip}:${value.port}\\n`;\n      } else {\n        proxyText += `${value.ip}:${value.port}:${value.user}:${value.password}\\n`;\n      }\n    }\n    return proxyText;\n  };\n\n  componentDidMount() {\n    this.getProxies();\n  }\n\n  objectToArray = (object) => {\n    if (Array.isArray(object)) {\n      return object;\n    }\n    const array = [];\n    for (const property in object) {\n      array.push(object[property]);\n    }\n    return array;\n  };\n\n  setSelectedProxygroup = (id) => {\n    this.setState((prevState) => ({\n      ...prevState,\n      selectedProxygroup: id,\n    }));\n  };\n\n  getProxies = () => {\n    const proxies = ipcRenderer.sendSync('get:proxies');\n    this.props.dispatch({ type: 'update', obj: { proxies } });\n    if (!this.state.selectedProxygroup) {\n      this.setState((prevState) => ({\n        ...prevState,\n        selectedProxygroup: proxies[Object.keys(proxies)[0]]?.id,\n      }));\n    }\n  };\n\n  addProxies = (e) => {\n    ipcRenderer.sendSync('add:proxies', this.state.formValue);\n    this.close();\n    this.setState((prevState) => ({\n      ...prevState,\n      formValue: {\n        name: '',\n        proxies: '',\n      },\n    }));\n    this.getProxies();\n  };\n\n  deleteProxies = (e, id) => {\n    ipcRenderer.sendSync('delete:proxies', id);\n    this.getProxies();\n  };\n\n  height = () => {\n    const height = window.innerHeight;\n    return Math.round(0.75 * height);\n  };\n\n  spanColor = (num) => {\n    num = parseInt(num, 10);\n    if (num < 500) {\n      return '#5dd47d';\n    }\n    return '#e0563a';\n  };\n\n  deleteSpecificProxy = (e, groupID, id) => {\n    ipcRenderer.sendSync('delete:specific:proxy', groupID, id);\n    this.getProxies();\n  };\n\n  pingProxy = (e, groupID, id, proxy) => {\n    ipcRenderer.send('test:proxy', groupID, id, proxy);\n  };\n\n  testAllProxies = (e) => {\n    const proxiesObject =\n      this.props.state.proxies[this.state.selectedProxygroup].proxies;\n\n    for (const property in proxiesObject) {\n      const item = proxiesObject[property];\n      this.pingProxy(\n        e,\n        this.state.selectedProxygroup,\n        property,\n        item.password\n          ? `${item.ip}:${item.port}:${item.user}:${item.password}`\n          : `${item.ip}:${item.port}`\n      );\n    }\n  };\n\n  render() {\n    const { formValue } = this.state;\n\n    return (\n      <>\n        <Modal show={this.state.show} onHide={this.close} size=\"md\">\n          <Modal.Header>\n            <Modal.Title>\n              {this.state.edit ? 'Edit Proxy Group' : 'Create Proxy Group'}\n            </Modal.Title>\n          </Modal.Header>\n          <Modal.Body style={{ overflow: 'hidden' }}>\n            <Form\n              fluid\n              // onChange={this.handleChange}\n              onChange={(formValue) => {\n                this.setState({ formValue });\n              }}\n              formValue={formValue}\n            >\n              <FormGroup style={{ marginLeft: '5%', marginRight: '5%' }}>\n                <ControlLabel>Name</ControlLabel>\n                <FormControl placeholder=\"Name\" block name=\"name\" />\n              </FormGroup>\n              <FormGroup style={{ marginLeft: '5%', marginRight: '5%' }}>\n                <ControlLabel>Proxies</ControlLabel>\n                <FormControl\n                  componentClass=\"textarea\"\n                  placeholder=\"Paste your proxies here\"\n                  block\n                  rows={5}\n                  name=\"proxies\"\n                />\n              </FormGroup>\n            </Form>\n          </Modal.Body>\n          <Modal.Footer>\n            <Button\n              onClick={this.close}\n              style={{\n                color: 'white',\n                border: '3px solid white',\n                marginRight: '1rem',\n              }}\n              appearance=\"ghost\"\n            >\n              Cancel\n            </Button>\n            <Button\n              onClick={\n                !this.state.edit ? this.addProxies : this.sendEditProxies\n              }\n              style={{\n                color: 'springgreen',\n                border: '3px solid springgreen',\n              }}\n              appearance=\"ghost\"\n            >\n              Save\n            </Button>\n          </Modal.Footer>\n        </Modal>\n        <div\n          className=\"SettingsPage\"\n          style={{\n            width: '90%',\n            position: 'absolute',\n            top: '50px',\n            left: '8%',\n            // overflowX: 'clip',\n          }}\n        >\n          <h5>Proxy Groups</h5>\n          <Clock\n            format=\"HH:mm:ss\"\n            interval={1000}\n            ticking\n            style={{ position: 'absolute', top: '-25px', fontSize: '1rem' }}\n          />\n          <div\n            style={{\n              width: '18%',\n              position: 'absolute',\n              top: '-25px',\n              overflowY: 'scroll',\n              display: 'block',\n              marginTop: '80px',\n              overflowX: 'hidden',\n            }}\n          >\n            <Input\n              style={{\n                float: 'right',\n                position: 'absolute',\n                left: '120%',\n                top: '-24%',\n                width: '172%',\n                border: '3px ​solid #3c3f4',\n              }}\n              onChange={this.search}\n              placeholder=\"Search\"\n            />\n            <Button\n              center\n              block\n              size=\"lg\"\n              color=\"blue\"\n              style={{ margin: 'auto', marginBottom: '1rem' }}\n              onClick={this.open}\n            >\n              <Icon icon=\"plus-square\" /> Create Proxy Group\n            </Button>\n            {this.objectToArray(this.props.state.proxies).map((row) => (\n              <Panel\n                style={{\n                  marginBottom: '7%',\n                  width: '95%',\n                  height: 'min-content',\n                  border: `${\n                    this.state?.selectedProxygroup === row?.id\n                      ? '2px solid #92ade0'\n                      : 'none'\n                  }`,\n                }}\n                key={row.id}\n                onClick={(e) => this.setSelectedProxygroup(row.id)}\n                shaded\n                bordered\n              >\n                <Avatar style={{ marginRight: '5%' }} size=\"md\">\n                  {Object.keys(row.proxies).length}\n                </Avatar>\n\n                <h5\n                  style={{\n                    float: 'right',\n                    top: '17%',\n                    right: '40%',\n                    display: 'contents',\n                  }}\n                >\n                  {row.name}\n                </h5>\n                <div style={{ float: 'right' }}>\n                  <Dropdown\n                    placement=\"leftStart\"\n                    renderTitle={() => {\n                      return (\n                        <IconButton\n                          style={{\n                            float: 'right',\n                            position: 'sticky',\n                            transform: 'translateY(-17px) translateX(18px)',\n                            background: 'transparent',\n                          }}\n                          size=\"lg\"\n                          icon={<Icon icon=\"ellipsis-h\" />}\n                        />\n                      );\n                    }}\n                  >\n                    <Dropdown.Item\n                      onSelect={(e) => this.deleteProxies(e, row?.id)}\n                    >\n                      <Icon icon=\"trash2\" /> Delete Group\n                    </Dropdown.Item>\n                  </Dropdown>\n                </div>\n              </Panel>\n            ))}\n          </div>\n          <div\n            style={{\n              position: 'absolute',\n              top: '6%',\n              right: '10px',\n              width: '79%',\n            }}\n          >\n            <Button\n              style={{ position: 'relative', left: '50%' }}\n              onClick={this.editProxyGroup}\n              appearance=\"primary\"\n            >\n              <Icon icon=\"spinner\" /> Edit Group\n            </Button>\n            <Button\n              style={{ position: 'relative', left: '80%' }}\n              onClick={this.testAllProxies}\n              appearance=\"primary\"\n            >\n              <Icon icon=\"spinner\" /> Test All Proxies\n            </Button>\n\n            <div>\n              <List style={{ height: `${this.height()}px` }} hover>\n                {this.objectToArray(\n                  this.objectToArray(this.props.state.proxies).filter(\n                    (item) => item.id === this.state.selectedProxygroup\n                  )[0]?.proxies\n                ).map((item) => (\n                  <List.Item key={item.title}>\n                    <FlexboxGrid>\n                      {/* base info */}\n                      <FlexboxGrid.Item\n                        colspan={4}\n                        // style={{\n                        //   ...styleCenter,\n                        //   marginLeft: '3rem',\n                        //   flexDirection: 'column',\n                        //   alignItems: 'flex-start',\n                        //   overflow: 'hidden',\n                        // }}\n                        style={styleCenter}\n                      >\n                        <div style={titleStyle}>{item?.ip}</div>\n                      </FlexboxGrid.Item>\n                      {/* peak data */}\n                      <FlexboxGrid.Item colspan={3} style={styleCenter}>\n                        {item?.port}\n                      </FlexboxGrid.Item>\n                      {/* uv data */}\n                      <FlexboxGrid.Item colspan={4} style={styleCenter}>\n                        {item?.user}\n                      </FlexboxGrid.Item>\n                      <FlexboxGrid.Item colspan={6} style={styleCenter}>\n                        {item?.password}\n                      </FlexboxGrid.Item>\n                      <FlexboxGrid.Item colspan={2} style={styleCenter}>\n                        <div\n                          style={{\n                            color: this.spanColor(\n                              item?.speed ? item?.speed : '0'\n                            ),\n                          }}\n                        >\n                          {item?.speed ? item?.speed : '0'}\n                        </div>\n                      </FlexboxGrid.Item>\n                      {/* uv data */}\n                      <FlexboxGrid.Item\n                        colspan={4}\n                        style={{\n                          ...styleCenter,\n                        }}\n                      >\n                        <span>\n                          <Icon\n                            icon=\"trash2\"\n                            style={{ marginRight: '10px' }}\n                            size=\"lg\"\n                            onClick={(e) =>\n                              this.deleteSpecificProxy(\n                                e,\n                                this.state.selectedProxygroup,\n                                item.id\n                              )\n                            }\n                          />\n                        </span>\n                        <span>\n                          <Icon\n                            icon=\"wifi\"\n                            size=\"lg\"\n                            onClick={(e) =>\n                              this.pingProxy(\n                                e,\n                                this.state.selectedProxygroup,\n                                item.id,\n                                item.password\n                                  ? `${item.ip}:${item.port}:${item.user}:${item.password}`\n                                  : `${item.ip}:${item.port}`\n                              )\n                            }\n                          />\n                        </span>\n                      </FlexboxGrid.Item>\n                    </FlexboxGrid>\n                  </List.Item>\n                ))}\n              </List>\n            </div>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\nconst mapStateToProps = (state) => ({ state });\nexport default connect(mapStateToProps)(Proxies);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Payment from 'payment';\nimport { Icon } from 'rsuite';\nimport { connect } from 'react-redux';\nimport cogoToast from 'cogo-toast';\n\nconst { ipcRenderer } = require('electron');\n\nclass CreditCards extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.setCards();\n  }\n\n  static propTypes = {\n    acceptedCards: PropTypes.array,\n    callback: PropTypes.func,\n    cvc: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n    expiry: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n      .isRequired,\n    focused: PropTypes.string,\n    issuer: PropTypes.string,\n    locale: PropTypes.shape({\n      valid: PropTypes.string,\n    }),\n    name: PropTypes.string.isRequired,\n    number: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n      .isRequired,\n    placeholders: PropTypes.shape({\n      name: PropTypes.string,\n    }),\n    preview: PropTypes.bool,\n  };\n\n  static defaultProps = {\n    acceptedCards: [],\n    locale: {\n      valid: 'valid thru',\n    },\n    placeholders: {\n      name: 'YOUR NAME HERE',\n    },\n    preview: false,\n  };\n\n  componentDidUpdate(prevProps) {\n    const { acceptedCards, callback, number } = this.props;\n\n    if (prevProps.number !== number) {\n      /* istanbul ignore else */\n      if (typeof callback === 'function') {\n        callback(this.options, Payment.fns.validateCardNumber(number));\n      }\n    }\n\n    if (prevProps.acceptedCards.toString() !== acceptedCards.toString()) {\n      this.setCards();\n    }\n  }\n\n  getProfiles = () => {\n    const profiles = ipcRenderer.sendSync('get:profiles');\n    console.log(profiles);\n    this.props.dispatch({ type: 'update', obj: { profiles } });\n  };\n\n  duplicateProfile(e, id) {\n    ipcRenderer.send('duplicate-profile', id);\n    cogoToast.success(`Duplicated Profile`, {\n      position: 'top-right',\n      heading: 'Success',\n    });\n    this.getProfiles();\n  }\n\n  deleteProfile(e, id) {\n    ipcRenderer.send('delete-profile', id);\n    cogoToast.success(`Deleted Profile`, {\n      position: 'top-right',\n      heading: 'Success',\n    });\n    this.getProfiles();\n  }\n\n  get issuer() {\n    const { issuer, preview } = this.props;\n\n    return preview && issuer ? issuer.toLowerCase() : this.options.issuer;\n  }\n\n  get number() {\n    const { number, preview } = this.props;\n\n    let maxLength = preview ? 19 : this.options.maxLength;\n    let nextNumber =\n      typeof number === 'number'\n        ? number.toString()\n        : number.replace(/[A-Za-z]| /g, '');\n\n    if (isNaN(parseInt(nextNumber, 10)) && !preview) {\n      nextNumber = '';\n    }\n\n    if (maxLength > 16) {\n      maxLength = nextNumber.length <= 16 ? 16 : maxLength;\n    }\n\n    if (nextNumber.length > maxLength) {\n      nextNumber = nextNumber.slice(0, maxLength);\n    }\n\n    while (nextNumber.length < maxLength) {\n      nextNumber += '•';\n    }\n\n    if (['amex', 'dinersclub'].includes(this.issuer)) {\n      const format = [0, 4, 10];\n      const limit = [4, 6, 5];\n      nextNumber = `${nextNumber.substr(\n        format[0],\n        limit[0]\n      )} ${nextNumber.substr(format[1], limit[1])} ${nextNumber.substr(\n        format[2],\n        limit[2]\n      )}`;\n    } else if (nextNumber.length > 16) {\n      const format = [0, 4, 8, 12];\n      const limit = [4, 7];\n      nextNumber = `${nextNumber.substr(\n        format[0],\n        limit[0]\n      )} ${nextNumber.substr(format[1], limit[0])} ${nextNumber.substr(\n        format[2],\n        limit[0]\n      )} ${nextNumber.substr(format[3], limit[1])}`;\n    } else {\n      for (let i = 1; i < maxLength / 4; i++) {\n        const space_index = i * 4 + (i - 1);\n        nextNumber = `${nextNumber.slice(0, space_index)} ${nextNumber.slice(\n          space_index\n        )}`;\n      }\n    }\n\n    return nextNumber;\n  }\n\n  get expiry() {\n    const { expiry = '' } = this.props;\n    const date = typeof expiry === 'number' ? expiry.toString() : expiry;\n    let month = '';\n    let year = '';\n\n    if (date.includes('/')) {\n      [month, year] = date.split('/');\n    } else if (date.length) {\n      month = date.substr(0, 2);\n      year = date.substr(2, 6);\n    }\n\n    while (month.length < 2) {\n      month += '•';\n    }\n\n    if (year.length > 2) {\n      year = year.substr(2, 4);\n    }\n\n    while (year.length < 2) {\n      year += '•';\n    }\n\n    return `${month}/${year}`;\n  }\n\n  get options() {\n    const { number } = this.props;\n    const issuer = Payment.fns.cardType(number) || 'unknown';\n\n    let maxLength = 16;\n\n    if (issuer === 'amex') {\n      maxLength = 15;\n    } else if (issuer === 'dinersclub') {\n      maxLength = 14;\n    } else if (['hipercard', 'mastercard', 'visa'].includes(issuer)) {\n      maxLength = 19;\n    }\n\n    return {\n      issuer,\n      maxLength,\n    };\n  }\n\n  setCards() {\n    const { acceptedCards } = this.props;\n    let newCardArray = [];\n\n    if (acceptedCards.length) {\n      Payment.getCardArray().forEach((d) => {\n        if (acceptedCards.includes(d.type)) {\n          newCardArray.push(d);\n        }\n      });\n    } else {\n      newCardArray = newCardArray.concat(Payment.getCardArray());\n    }\n\n    Payment.setCardArray(newCardArray);\n  }\n\n  render() {\n    const { cvc, focused, locale, name, placeholders, profileID } = this.props;\n    const { number, expiry } = this;\n\n    return (\n      <div key=\"Cards\" className=\"rccs\">\n        <div\n          className={[\n            'rccs__card',\n            `rccs__card--${this.issuer}`,\n            focused === 'cvc' && this.issuer !== 'amex'\n              ? 'rccs__card--flipped'\n              : '',\n          ]\n            .join(' ')\n            .trim()}\n        >\n          <div className=\"rccs__card--front\">\n            <div className=\"rccs__card__background\" />\n            <div className=\"rccs__issuer\" />\n            <div\n              className={[\n                'rccs__cvc__front',\n                focused === 'cvc' ? 'rccs--focused' : '',\n              ]\n                .join(' ')\n                .trim()}\n            >\n              {cvc}\n            </div>\n            <div\n              className={[\n                'rccs__number',\n                number.replace(/ /g, '').length > 16\n                  ? 'rccs__number--large'\n                  : '',\n                focused === 'number' ? 'rccs--focused' : '',\n                number.substr(0, 1) !== '•' ? 'rccs--filled' : '',\n              ]\n                .join(' ')\n                .trim()}\n            >\n              •••• {number.substr(-4)}\n            </div>\n            <div\n              className={[\n                'rccs__name',\n                focused === 'name' ? 'rccs--focused' : '',\n                name ? 'rccs--filled' : '',\n              ]\n                .join(' ')\n                .trim()}\n            >\n              {name || placeholders.name}\n            </div>\n            <div\n              className={[\n                'rccs__expiry',\n                focused === 'expiry' ? 'rccs--focused' : '',\n                expiry.substr(0, 1) !== '•' ? 'rccs--filled' : '',\n              ]\n                .join(' ')\n                .trim()}\n            >\n              <div className=\"rccs__expiry__value\">\n                <Icon\n                  style={{ color: 'crimson', paddingRight: '10px' }}\n                  size=\"lg\"\n                  icon=\"trash2\"\n                  onClick={(e) => this.deleteProfile(e, profileID)}\n                />\n                <Icon\n                  style={{ paddingRight: '10px' }}\n                  size=\"lg\"\n                  onClick={(e) => this.props.onEditClick(e, profileID)}\n                  icon=\"pencil\"\n                />\n                <Icon\n                  size=\"lg\"\n                  icon=\"copy\"\n                  onClick={(e) => this.duplicateProfile(e, profileID)}\n                />\n              </div>\n            </div>\n            <div className=\"rccs__chip\" />\n          </div>\n          <div className=\"rccs__card--back\">\n            <div className=\"rccs__card__background\" />\n            <div className=\"rccs__stripe\" />\n            <div className=\"rccs__signature\" />\n            <div\n              className={['rccs__cvc', focused === 'cvc' ? 'rccs--focused' : '']\n                .join(' ')\n                .trim()}\n            >\n              {cvc}\n            </div>\n            <div className=\"rccs__issuer\" />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = (state) => ({ state });\n\nexport default connect(mapStateToProps)(CreditCards);\n","import React from 'react';\nimport {\n  InputPicker,\n  Button,\n  Modal,\n  Form,\n  FormGroup,\n  FormControl,\n  Steps,\n  IconButton,\n  Icon,\n  ButtonGroup,\n  Toggle,\n  InputGroup,\n  Input,\n} from 'rsuite';\nimport cogoToast from 'cogo-toast';\n\nimport Clock from 'react-live-clock';\nimport { connect } from 'react-redux';\nimport CreditCards from './CreditCard';\n\nconst { ipcRenderer } = require('electron');\n\nclass Profile extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleInputFocus = this.handleInputFocus.bind(this);\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.saveProfile = this.saveProfile.bind(this);\n    this.state = {\n      show: false,\n      edit: false,\n      step: 0,\n      formValue: {\n        id: null,\n        profileName: '',\n        email: '',\n        cardName: '',\n        cardNumber: '',\n        cardCVV: '',\n        cardExpiration: '',\n        firstName: '',\n        lastName: '',\n        address: '',\n        city: '',\n        phone: '',\n        zip: '',\n        state: '',\n        country: '',\n        billingFirstName: '',\n        billingLastName: '',\n        billingAddress: '',\n        billingCity: '',\n        billingPhone: '',\n        billingZip: '',\n        billingState: '',\n        billingCountry: '',\n      },\n    };\n  }\n\n  handleInputFocus = (e) => {\n    this.setState({ focus: e.target.name });\n  };\n\n  handleInputChange = (event, name, value) => {\n    this.setState((prevState) => ({\n      ...prevState,\n      name: value,\n    }));\n  };\n\n  saveProfile = () => {\n    ipcRenderer.send('set:profiles', this.state.formValue);\n  };\n\n  getProfiles = () => {\n    const profiles = ipcRenderer.sendSync('get:profiles');\n    console.log(profiles);\n    this.props.dispatch({ type: 'update', obj: { profiles } });\n  };\n\n  componentDidMount() {\n    this.getProfiles();\n  }\n\n  close = () => {\n    this.setState({ show: false });\n  };\n\n  open = () => {\n    this.setState({ show: true });\n  };\n\n  changeStep = (stepNow) => {\n    const { formValue, step } = this.state;\n    if (step == 0) {\n      console.log('here');\n      if (\n        formValue.profileName &&\n        formValue.email &&\n        formValue.cardName &&\n        formValue.cardNumber &&\n        formValue.cardCVV &&\n        formValue.cardExpiration\n      ) {\n        this.setState((prevState) => ({\n          ...prevState,\n          step: stepNow,\n        }));\n      } else {\n        cogoToast.error(`Please fill all fields`, {\n          position: 'top-right',\n          heading: 'Error',\n        });\n      }\n    } else if (step === 1) {\n      if (\n        formValue.firstName &&\n        formValue.lastName &&\n        formValue.address &&\n        formValue.city &&\n        formValue.phone &&\n        formValue.zip &&\n        formValue.state &&\n        formValue.country\n      ) {\n        this.setState((prevState) => ({\n          ...prevState,\n          step: stepNow,\n        }));\n      } else {\n        cogoToast.error(`Please fill all fields`, {\n          position: 'top-right',\n          heading: 'Error',\n        });\n      }\n    } else if (step === 2) {\n      if (\n        formValue.billingFirstName &&\n        formValue.billingLastName &&\n        formValue.billingAddress &&\n        formValue.billingCity &&\n        formValue.billingPhone &&\n        formValue.billingZip &&\n        formValue.billingState &&\n        formValue.billingCountry\n      ) {\n        this.setState((prevState) => ({\n          ...prevState,\n          step: stepNow,\n        }));\n      } else {\n        cogoToast.error(`Please fill all fields`, {\n          position: 'top-right',\n          heading: 'Error',\n        });\n      }\n    }\n  };\n\n  // make a function to edit the profile by making the id in formvalue known and then send that to ipcmain\n  // open the modal and then send the id to ipcmain\n  editProfile = (e, id) => {\n    this.setState((prevState) => ({\n      ...prevState,\n      edit: true,\n      formValue: this.props.state.profiles[id],\n    }));\n    this.open();\n  };\n\n  sendEditProfile = (id) => {\n    ipcRenderer.send('edit:profile', this.state.formValue);\n    this.close();\n    this.clearState();\n    this.getProfiles();\n    cogoToast.success(`Edited Profile`, {\n      position: 'top-right',\n      heading: 'Success',\n    });\n  };\n\n  clearState = () => {\n    this.setState({\n      show: false,\n      edit: false,\n      step: 0,\n      CardCVC: '',\n      CardExpiry: '',\n      CardName: '',\n      CardNumber: '',\n      formValue: {\n        id: null,\n        profileName: '',\n        email: '',\n        cardName: '',\n        cardNumber: '',\n        cardCVV: '',\n        cardExpiration: '',\n        firstName: '',\n        lastName: '',\n        address: '',\n        city: '',\n        phone: '',\n        zip: '',\n        state: '',\n        country: '',\n        billingFirstName: '',\n        billingLastName: '',\n        billingAddress: '',\n        billingCity: '',\n        billingPhone: '',\n        billingZip: '',\n        billingState: '',\n        billingCountry: '',\n      },\n    });\n  };\n\n  createProfile() {\n    this.close();\n    ipcRenderer.send('set:profiles', this.state.formValue);\n    this.clearState();\n    this.getProfiles();\n  }\n\n  search = (term) => {\n    if (term !== '') {\n      // change to profiles object\n      const filteredProfiles = this.objectToArray(\n        this.props.state.profiles\n      ).filter((row) =>\n        JSON.stringify(row).toLowerCase().includes(term.toLowerCase())\n      );\n      this.props.dispatch({\n        type: 'update',\n        obj: { filteredProfiles, profileSearch: true },\n      });\n    } else {\n      this.props.dispatch({\n        type: 'update',\n        obj: { profileSearch: false },\n      });\n    }\n  };\n\n  objectToArray = (object) => {\n    if (Array.isArray(object)) {\n      return object;\n    }\n    const array = [];\n    for (const property in object) {\n      array.push(object[property]);\n    }\n    return array;\n  };\n\n  render() {\n    const { formValue, step } = this.state;\n    return (\n      <>\n        <Modal show={this.state.show} onHide={this.close} size=\"md\">\n          <Modal.Header>\n            <Modal.Title>\n              {this.state.edit ? 'Edit Profile' : 'Create a Profile'}\n            </Modal.Title>\n          </Modal.Header>\n          <Modal.Body style={{ overflow: 'hidden' }}>\n            <Steps\n              style={{ marginLeft: '3rem', marginRight: '3rem' }}\n              current={step}\n            >\n              <Steps.Item title=\"General\" />\n              <Steps.Item title=\"Shipping\" />\n              <Steps.Item title=\"Billing\" />\n            </Steps>\n            <Form\n              fluid\n              // onChange={this.handleChange}\n              onChange={(formValue) => {\n                this.setState({ formValue });\n                console.log(formValue);\n              }}\n              layout=\"inline\"\n              style={{ margin: 'auto', marginTop: '2rem', marginLeft: '4rem' }}\n              formValue={formValue}\n            >\n              <h6>\n                {step === 0\n                  ? 'General Information'\n                  : step === 1\n                  ? 'Shipping Information'\n                  : 'Billing Information'}\n              </h6>\n              {step === 0 ? (\n                <>\n                  <FormGroup>\n                    <FormControl\n                      name=\"profileName\"\n                      placeholder=\"Profile Name\"\n                    />\n                  </FormGroup>\n                  <FormGroup>\n                    <FormControl name=\"email\" placeholder=\"Email\" />\n                  </FormGroup>\n                  <FormGroup>\n                    <FormControl\n                      name=\"cardName\"\n                      placeholder=\"Cardholder Name\"\n                    />\n                  </FormGroup>\n                  <FormGroup>\n                    <FormControl name=\"cardNumber\" placeholder=\"Card Number\" />\n                  </FormGroup>\n                  <FormGroup>\n                    <FormControl name=\"cardCVV\" placeholder=\"CVV\" />\n                  </FormGroup>\n                  <FormGroup>\n                    <FormControl\n                      name=\"cardExpiration\"\n                      placeholder=\"Exp 09/23\"\n                    />\n                  </FormGroup>\n                </>\n              ) : step === 1 ? (\n                <>\n                  <FormGroup>\n                    <FormControl name=\"firstName\" placeholder=\"First Name\" />\n                  </FormGroup>\n                  <FormGroup>\n                    <FormControl name=\"lastName\" placeholder=\"Last Name\" />\n                  </FormGroup>\n                  <FormGroup>\n                    <FormControl name=\"address\" placeholder=\"Address\" />\n                  </FormGroup>\n                  <FormGroup>\n                    <FormControl name=\"city\" placeholder=\"City\" />\n                  </FormGroup>\n                  <FormGroup>\n                    <FormControl name=\"phone\" placeholder=\"Phone\" />\n                  </FormGroup>\n                  <FormGroup>\n                    <FormControl name=\"zip\" placeholder=\"Zip Code\" />\n                  </FormGroup>\n                  <div>\n                    <FormGroup>\n                      <FormControl\n                        style={{ paddingRight: '2.4rem' }}\n                        name=\"state\"\n                        placeholder=\"State\"\n                        accepter={InputPicker}\n                        data={\n                          formValue?.country\n                            ? formValue?.country === 'USA'\n                              ? states\n                              : canadaProvinces\n                            : []\n                        }\n                      />\n                    </FormGroup>\n                    <FormGroup>\n                      <FormControl\n                        style={{ paddingRight: '2.4rem', marginLeft: '1.3rem' }}\n                        name=\"country\"\n                        placeholder=\"Country\"\n                        accepter={InputPicker}\n                        data={[\n                          {\n                            label: 'United States',\n                            value: 'USA',\n                          },\n                          {\n                            label: 'Canada',\n                            value: 'CA',\n                          },\n                        ]}\n                      />\n                    </FormGroup>\n                  </div>\n                </>\n              ) : (\n                <>\n                  <div style={{ display: 'inline-flex', width: '100%' }}>\n                    <Toggle style={{ marginRight: '1rem' }} />\n                    <div>Same Billing And Shipping</div>\n                  </div>\n                  <FormGroup>\n                    <FormControl\n                      name=\"billingFirstName\"\n                      placeholder=\"First Name\"\n                    />\n                  </FormGroup>\n                  <FormGroup>\n                    <FormControl\n                      name=\"billingLastName\"\n                      placeholder=\"Last Name\"\n                    />\n                  </FormGroup>\n                  <FormGroup>\n                    <FormControl name=\"billingAddress\" placeholder=\"Address\" />\n                  </FormGroup>\n                  <FormGroup>\n                    <FormControl name=\"billingCity\" placeholder=\"City\" />\n                  </FormGroup>\n                  <FormGroup>\n                    <FormControl name=\"billingPhone\" placeholder=\"Phone\" />\n                  </FormGroup>\n                  <FormGroup>\n                    <FormControl name=\"billingZip\" placeholder=\"Zip Code\" />\n                  </FormGroup>\n                  <div>\n                    <FormGroup>\n                      <FormControl\n                        style={{ paddingRight: '2.4rem' }}\n                        name=\"billingState\"\n                        placeholder=\"State\"\n                        accepter={InputPicker}\n                        data={\n                          formValue?.country\n                            ? formValue?.country === 'USA'\n                              ? states\n                              : canadaProvinces\n                            : []\n                        }\n                      />\n                    </FormGroup>\n                    <FormGroup>\n                      <FormControl\n                        style={{\n                          paddingRight: '2.4rem',\n                          marginLeft: '1.3rem',\n                        }}\n                        name=\"billingCountry\"\n                        placeholder=\"Country\"\n                        accepter={InputPicker}\n                        data={[\n                          {\n                            label: 'United States',\n                            value: 'USA',\n                          },\n                          {\n                            label: 'Canada',\n                            value: 'CA',\n                          },\n                        ]}\n                      />\n                    </FormGroup>\n                  </div>\n                </>\n              )}\n            </Form>\n\n            <ButtonGroup style={{ marginLeft: '3rem' }}>\n              <Button\n                onClick={(e) => this.changeStep(step - 1)}\n                disabled={step === 0}\n                appearance=\"primary\"\n              >\n                Previous\n              </Button>\n              <Button\n                onClick={(e) => this.changeStep(step + 1)}\n                disabled={step === 2}\n                appearance=\"primary\"\n              >\n                Next\n              </Button>\n            </ButtonGroup>\n          </Modal.Body>\n          <Modal.Footer>\n            <Button\n              onClick={(e) => this.close()}\n              style={{\n                color: 'white',\n                border: '3px solid white',\n                marginRight: '1rem',\n              }}\n              appearance=\"ghost\"\n            >\n              Cancel\n            </Button>\n            <Button\n              onClick={\n                !this.state.edit\n                  ? (e) => this.createProfile()\n                  : (e) => this.sendEditProfile(e)\n              }\n              style={{\n                color: 'springgreen',\n                border: '3px solid springgreen',\n              }}\n              appearance=\"ghost\"\n            >\n              {!this.state.edit ? 'Create' : 'Edit'}\n            </Button>\n          </Modal.Footer>\n        </Modal>\n        <div\n          className=\"SettingsPage\"\n          style={{\n            width: '90%',\n            height: '90%',\n            position: 'absolute',\n            top: '50px',\n            left: '8%',\n            overflowY: 'auto',\n          }}\n        >\n          <h5>Profiles</h5>\n\n          <Clock\n            format=\"HH:mm:ss\"\n            interval={1000}\n            ticking\n            style={{ position: 'absolute', top: '-25px', fontSize: '1rem' }}\n          />\n          <div style={{ display: 'flex' }}>\n            <IconButton\n              onClick={this.open}\n              icon={<Icon icon=\"plus\" />}\n              appearance=\"primary\"\n            />\n            <InputGroup\n              inside\n              style={{\n                width: 300,\n                marginBottom: 10,\n                marginTop: 11,\n              }}\n            >\n              <InputGroup.Button>\n                <Icon icon=\"search\" />\n              </InputGroup.Button>\n              <Input placeholder=\"Search Profiles\" onChange={this.search} />\n            </InputGroup>\n          </div>\n          <div\n            style={{\n              display: 'grid',\n              flexWrap: 'wrap',\n              marginRight: '2rem',\n              marginLeft: '-2rem',\n              gridTemplateColumns: 'repeat(auto-fill,minmax(300px, 4fr))',\n            }}\n          >\n            {Object.keys(this.props.state.profiles).length ? (\n              this.objectToArray(\n                !this.props.state.profileSearch\n                  ? this.props.state.profiles\n                  : this.props.state.filteredProfiles\n              ).map((row) => (\n                <CreditCards\n                  style={{\n                    color: 'white',\n                    backgroundColor: '#292c3e',\n                    width: '17rem',\n                    height: '15rem',\n                    position: 'relative',\n                    marginRight: '2rem',\n                    flex: '0 0 25%',\n                  }}\n                  onEditClick={this.editProfile}\n                  key={row.id}\n                  cvc={row.cardCVV}\n                  expiry={row.cardExpiration}\n                  name={row.profileName}\n                  number={row.cardNumber}\n                  profileID={row.id}\n                />\n              ))\n            ) : (\n              <> </>\n            )}\n          </div>\n        </div>\n      </>\n    );\n  }\n}\nconst mapStateToProps = (state) => ({ state });\nexport default connect(mapStateToProps)(Profile);\nconst data = [\n  {\n    label: 'United States',\n    value: 'United States',\n    role: 'Master',\n  },\n  {\n    label: 'Canada',\n    value: 'Canada',\n    role: 'Master',\n  },\n  {\n    label: 'Cashapp',\n    value: 'Louisa',\n    role: 'Master',\n  },\n  {\n    label: 'Eno',\n    value: 'Marty',\n    role: 'Master',\n  },\n  {\n    label: 'Privacy',\n    value: 'Kenya',\n    role: 'Master',\n  },\n  {\n    label: 'Slut',\n    value: 'Hal',\n    role: 'Developer',\n  },\n  {\n    label: 'Julius',\n    value: 'Julius',\n    role: 'Developer',\n  },\n];\n\nconst canadaProvinces = [\n  {\n    value: 'Ontario',\n    label: 'Ontario',\n  },\n  {\n    value: 'Quebec',\n    label: 'Quebec',\n  },\n  {\n    value: 'Nova Scotia',\n    label: 'Nova Scotia',\n  },\n  {\n    value: 'New Brunswick',\n    label: 'New Brunswick',\n  },\n  {\n    value: 'British Columbia',\n    label: 'British Columbia',\n  },\n  {\n    value: 'Prince Edward Island',\n    label: 'Prince Edward Island',\n  },\n  {\n    value: 'Saskatchewan',\n    label: 'Saskatchewan',\n  },\n  {\n    value: 'Alberta',\n    label: 'Alberta',\n  },\n  {\n    value: 'Newfoundland and Labrador',\n    label: 'Newfoundland and Labrador',\n  },\n];\n\nconst states = [\n  {\n    label: 'Alabama',\n    value: 'Alabama',\n    role: 'Alabama',\n  },\n  {\n    label: 'Alaska',\n    value: 'Alaska',\n    role: 'Alaska',\n  },\n  {\n    label: 'Arizona',\n    value: 'Arizona',\n    role: 'Arizona',\n  },\n  {\n    label: 'Arkansas',\n    value: 'Arkansas',\n    role: 'Arkansas',\n  },\n  {\n    label: 'California',\n    value: 'California',\n    role: 'California',\n  },\n  {\n    label: 'Colorado',\n    value: 'Colorado',\n    role: 'Colorado',\n  },\n  {\n    label: 'Connecticut',\n    value: 'Connecticut',\n    role: 'Connecticut',\n  },\n  {\n    label: 'Delaware',\n    value: 'Delaware',\n    role: 'Delaware',\n  },\n  {\n    label: 'Florida',\n    value: 'Florida',\n    role: 'Florida',\n  },\n  {\n    label: 'Georgia',\n    value: 'Georgia',\n    role: 'Georgia',\n  },\n  {\n    label: 'Idaho',\n    value: 'Idaho',\n    role: 'Idaho',\n  },\n  {\n    label: 'Hawaii',\n    value: 'Hawaii',\n    role: 'Hawaii',\n  },\n  {\n    label: 'Illinois',\n    value: 'Illinois',\n    role: 'Illinois',\n  },\n  {\n    label: 'Indiana',\n    value: 'Indiana',\n    role: 'Indiana',\n  },\n  {\n    label: 'Iowa',\n    value: 'Iowa',\n    role: 'Iowa',\n  },\n  {\n    label: 'Kansas',\n    value: 'Kansas',\n    role: 'Kansas',\n  },\n  {\n    label: 'Kentucky',\n    value: 'Kentucky',\n    role: 'Kentucky',\n  },\n  {\n    label: 'Louisiana',\n    value: 'Louisiana',\n    role: 'Louisiana',\n  },\n  {\n    label: 'Maine',\n    value: 'Maine',\n    role: 'Maine',\n  },\n  {\n    label: 'Maryland',\n    value: 'Maryland',\n    role: 'Maryland',\n  },\n  {\n    label: 'Massachusetts',\n    value: 'Massachusetts',\n    role: 'Massachusetts',\n  },\n  {\n    label: 'Michigan',\n    value: 'Michigan',\n    role: 'Michigan',\n  },\n  {\n    label: 'Minnesota',\n    value: 'Minnesota',\n    role: 'Minnesota',\n  },\n  {\n    label: 'Mississippi',\n    value: 'Mississippi',\n    role: 'Mississippi',\n  },\n  {\n    label: 'Missouri',\n    value: 'Missouri',\n    role: 'Missouri',\n  },\n  {\n    label: 'Montana',\n    value: 'Montana',\n    role: 'Montana',\n  },\n  {\n    label: 'Nebraska',\n    value: 'Nebraska',\n    role: 'Nebraska',\n  },\n  {\n    label: 'Nevada',\n    value: 'Nevada',\n    role: 'Nevada',\n  },\n  {\n    label: 'New Hampshire',\n    value: 'New Hampshire',\n    role: 'New Hampshire',\n  },\n  {\n    label: 'New Jersey',\n    value: 'New Jersey',\n    role: 'New Jersey',\n  },\n  {\n    label: 'New Mexico',\n    value: 'New Mexico',\n    role: 'New Mexico',\n  },\n  {\n    label: 'New York',\n    value: 'New York',\n    role: 'New York',\n  },\n  {\n    label: 'North Carolina',\n    value: 'North Carolina',\n    role: 'North Carolina',\n  },\n  {\n    label: 'North Dakota',\n    value: 'North Dakota',\n    role: 'North Dakota',\n  },\n  {\n    label: 'Ohio',\n    value: 'Ohio',\n    role: 'Ohio',\n  },\n  {\n    label: 'Oklahoma',\n    value: 'Oklahoma',\n    role: 'Oklahoma',\n  },\n  {\n    label: 'Oregon',\n    value: 'Oregon',\n    role: 'Oregon',\n  },\n  {\n    label: 'Pennsylvania',\n    value: 'Pennsylvania',\n    role: 'Pennsylvania',\n  },\n  {\n    label: 'Rhode Island',\n    value: 'Rhode Island',\n    role: 'Rhode Island',\n  },\n  {\n    label: 'South Carolina',\n    value: 'South Carolina',\n    role: 'South Carolina',\n  },\n  {\n    label: 'South Dakota',\n    value: 'South Dakota',\n    role: 'South Dakota',\n  },\n  {\n    label: 'Tennessee',\n    value: 'Tennessee',\n    role: 'Tennessee',\n  },\n  {\n    label: 'Texas',\n    value: 'Texas',\n    role: 'Texas',\n  },\n  {\n    label: 'Utah',\n    value: 'Utah',\n    role: 'Utah',\n  },\n  {\n    label: 'Vermont',\n    value: 'Vermont',\n    role: 'Vermont',\n  },\n  {\n    label: 'Virginia',\n    value: 'Virginia',\n    role: 'Virginia',\n  },\n  {\n    label: 'Washington',\n    value: 'Washington',\n    role: 'Washington',\n  },\n  {\n    label: 'West Virginia',\n    value: 'West Virginia',\n    role: 'West Virginia',\n  },\n  {\n    label: 'Wisconsin',\n    value: 'Wisconsin',\n    role: 'Wisconsin',\n  },\n  {\n    label: 'Wyoming',\n    value: 'Wyoming',\n    role: 'Wyoming',\n  },\n  {\n    label: 'DC',\n    value: 'DC',\n    role: 'DC',\n  },\n  {\n    label: 'Puerto Rico',\n    value: 'Puerto Rico',\n    role: 'Puerto Rico',\n  },\n];\n","export default __webpack_public_path__ + \"static/media/empty.25d10e0d.svg\";","import React from 'react';\nimport { Form, IconButton, Icon, Panel, Input, CheckPicker } from 'rsuite';\nimport cogoToast from 'cogo-toast';\nimport { connect } from 'react-redux';\nimport $ from 'jquery';\n\nimport ContentEditable from 'react-contenteditable';\n\nimport Clock from 'react-live-clock';\nimport EmptySVG from '../empty.svg';\n\nconst { ipcRenderer } = require('electron');\n\nclass Captcha extends React.Component {\n  constructor(props) {\n    super(props);\n    this.showHarvester = this.showHarvester.bind(this);\n    this.addHarvester = this.addHarvester.bind(this);\n    this.saveHarvester = this.saveHarvester.bind(this);\n    this.contentEditable = React.createRef();\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  componentDidMount() {\n    this.getHarvesters();\n  }\n\n  showHarvester(arg, name) {\n    ipcRenderer.send('show:harvester', arg, name);\n  }\n\n  addHarvester() {\n    const harvester = this.props.state.harvesters;\n    const idNum = harvester[harvester.length - 1].id + 1;\n\n    ipcRenderer.sendSync('set:harvesters', {\n      id: idNum,\n      store: [],\n      name: `Captcha Harvester ${idNum}`,\n      proxy: '',\n    });\n    cogoToast.success(`Added Captcha Harvester`, {\n      position: 'top-right',\n      heading: 'Success',\n    });\n    this.getHarvesters();\n  }\n\n  getHarvesters = () => {\n    const harvesters = ipcRenderer.sendSync('get:harvesters');\n    this.props.dispatch({ type: 'update', obj: { harvesters } });\n  };\n\n  saveHarvester(event, id, name, site, proxy) {\n    const arg = {\n      id,\n      store: site,\n      name,\n      proxy,\n    };\n    ipcRenderer.sendSync('save:harvesters', id, arg);\n    this.getHarvesters();\n    cogoToast.success(`Saved Captcha Harvester`, {\n      position: 'top-right',\n      heading: 'Success',\n    });\n    this.getHarvesters();\n  }\n\n  handleChange(value) {\n    console.log(value);\n  }\n\n  render() {\n    const { state } = this.props;\n    const { harvesterSites, harvesters } = state;\n    return (\n      <div\n        className=\"SettingsPage\"\n        style={{\n          width: '90%',\n          position: 'absolute',\n          top: '50px',\n          left: '8%',\n        }}\n      >\n        <h5>Captcha Harvesters</h5>\n\n        <Clock\n          format=\"HH:mm:ss\"\n          interval={1000}\n          ticking\n          style={{ position: 'absolute', top: '-25px', fontSize: '1rem' }}\n        />\n        <div\n          style={{\n            display: 'flex',\n            flexWrap: 'wrap',\n            overflowY: 'scroll',\n          }}\n        >\n          <div\n            style={{\n              color: 'white',\n              marginTop: '2rem',\n              backgroundColor: '#292c3e',\n              width: '17rem',\n              height: '15rem',\n              position: 'relative',\n              borderRadius: '15px',\n              marginRight: '2rem',\n              border: '1px dashed grey',\n            }}\n            onClick={() => this.addHarvester()}\n          >\n            <div\n              style={{\n                width: '80%',\n                textAlign: 'center',\n                top: '27%',\n                position: 'relative',\n                marginLeft: '28px',\n                height: '100%',\n              }}\n            >\n              <img src={EmptySVG} alt=\"Harvester\" />\n            </div>\n            <div\n              style={{\n                textAlign: 'center',\n                bottom: '30%',\n                position: 'relative',\n              }}\n            >\n              Add New Harvester\n            </div>\n          </div>\n          {harvesters.map((row) => (\n            <Panel\n              style={{\n                color: 'white',\n                marginTop: '2rem',\n                backgroundColor: '#292c3e',\n                width: '17rem',\n                height: '15rem',\n                position: 'relative',\n                marginRight: '2rem',\n              }}\n            >\n              <div\n                style={{\n                  position: 'absolute',\n                  top: '0',\n                  width: '100%',\n                  right: '0',\n                }}\n              >\n                <ContentEditable\n                  innerRef={this.contentEditable}\n                  html={`<div id='Harvester${row.id}'>${row.name}</div>`}\n                  style={{\n                    position: 'relative',\n                    width: '100%',\n                    justifyContent: 'center',\n                    display: 'flex',\n                    height: '30px',\n                    textAlign: 'center',\n                    fontSize: '20px',\n                    backgroundColor: '#33374e',\n                  }}\n                />\n              </div>\n              <Form style={{ position: 'relative', marginTop: '15px' }}>\n                <span style={{ textAlign: 'center' }}>Site</span>\n                <CheckPicker\n                  onChange={(value) => (row.store = value)}\n                  searchable={false}\n                  data={harvesterSites}\n                  defaultValue={row.store || []}\n                  style={{ width: 224, marginBottom: '10px' }}\n                />\n                <span style={{ textAlign: 'center' }}>Proxy</span>\n                <Input\n                  style={{ width: 224 }}\n                  placeholder=\"Proxy\"\n                  name=\"proxy\"\n                  label=\"Proxy\"\n                  onChange={(value) => (row.proxy = value)}\n                  defaultValue={row.proxy}\n                />\n              </Form>\n              <div\n                className=\"captchaButtons\"\n                style={{\n                  position: 'relative',\n                  textAlign: 'center',\n                  marginTop: '1rem',\n                }}\n              >\n                <IconButton\n                  icon={<Icon icon=\"external-link\" size=\"lg\" />}\n                  size=\"lg\"\n                  color=\"blue\"\n                  onClick={(e) =>\n                    this.showHarvester(`${row.id}`, `${row.name}`)\n                  }\n                />\n                <IconButton\n                  icon={<Icon icon=\"youtube-play\" size=\"lg\" />}\n                  size=\"lg\"\n                  color=\"red\"\n                />\n                <IconButton\n                  icon={<Icon icon=\"save\" size=\"lg\" />}\n                  color=\"cyan\"\n                  size=\"lg\"\n                  onClick={(event) =>\n                    this.saveHarvester(\n                      event,\n                      row.id,\n                      $(`#Harvester${row.id}`).text(),\n                      row.store,\n                      row.proxy\n                    )\n                  }\n                />\n              </div>\n            </Panel>\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({ state });\nexport default connect(mapStateToProps)(Captcha);\n","export default __webpack_public_path__ + \"static/media/account.f3addd5d.svg\";","import React from 'react';\nimport {\n  Input,\n  Form,\n  IconButton,\n  Icon,\n  Panel,\n  CheckPicker,\n  Modal,\n  FormGroup,\n  FormControl,\n  ControlLabel,\n  InputPicker,\n  Button,\n} from 'rsuite';\nimport Clock from 'react-live-clock';\nimport cogoToast from 'cogo-toast';\nimport { connect } from 'react-redux';\nimport ContentEditable from 'react-contenteditable';\n\nimport EmptySVG from '../account.svg';\n\nconst { ipcRenderer } = require('electron');\n\nconst styles = {\n  width: 460,\n  marginBottom: 10,\n  marginTop: 30,\n};\n\nclass Accounts extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      accounts: '',\n      formValue: {\n        email: '',\n        site: '',\n        password: '',\n        alias: '',\n      },\n    };\n    this.getAccounts = this.getAccounts.bind(this);\n    this.addAccount = this.addAccount.bind(this);\n  }\n\n  componentDidMount() {\n    this.getAccounts();\n  }\n\n  makeID(length) {\n    let result = '';\n    const characters =\n      'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    const charactersLength = characters.length;\n    for (let i = 0; i < length; i++) {\n      result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    }\n    return result;\n  }\n\n  addAccount() {\n    const { accounts } = this.props.state;\n    if (\n      !this.state.formValue?.email ||\n      !this.state.formValue?.site ||\n      !this.state.formValue?.password ||\n      !this.state.formValue?.alias ||\n      this.state.formValue?.email === '' ||\n      this.state.formValue?.site === '' ||\n      this.state.formValue?.password === '' ||\n      this.state.formValue?.alias === ''\n    ) {\n      cogoToast.error(`Please fill all fields`, {\n        position: 'top-right',\n        heading: 'Error',\n      });\n      return;\n    }\n    const sendInfo = this.state?.formValue;\n    sendInfo.id = this.makeID(5);\n\n    ipcRenderer.sendSync('set:accounts', sendInfo);\n\n    cogoToast.success(`Added Account`, {\n      position: 'top-right',\n      heading: 'Success',\n    });\n    this.getAccounts();\n  }\n\n  getAccounts = () => {\n    const accounts = ipcRenderer.sendSync('get:accounts');\n    this.props.dispatch({ type: 'update', obj: { accounts } });\n  };\n\n  deleteAccount = (id) => {\n    ipcRenderer.sendSync('delete:account', id);\n    this.getAccounts();\n  };\n\n  capitalizeFirstLetter(string) {\n    try {\n      return string.charAt(0).toUpperCase() + string.slice(1);\n    } catch (e) {\n      return string;\n    }\n  }\n\n  close = () => {\n    this.setState({ show: false });\n  };\n\n  open = () => {\n    this.setState({ show: true });\n  };\n\n  handleChange = (val) => {\n    console.log(val);\n    console.log(this.state?.formValue);\n  };\n\n  render() {\n    const { formValue } = this.state;\n\n    return (\n      <>\n        <Modal show={this.state.show} onHide={this.close} size=\"md\">\n          <Modal.Header>\n            <Modal.Title>Accounts</Modal.Title>\n          </Modal.Header>\n          <Modal.Body style={{ overflow: 'hidden' }}>\n            <Form\n              fluid\n              // onChange={this.handleChange}\n              onChange={(formValue) => {\n                this.setState({ formValue });\n              }}\n              formValue={formValue}\n            >\n              <FormGroup style={{ marginLeft: '5%' }}>\n                <ControlLabel>Site</ControlLabel>\n                <FormControl\n                  name=\"site\"\n                  placeholder=\"Site\"\n                  style={{ width: '40%' }}\n                  data={[\n                    { value: 'amazon', label: 'Amazon' },\n                    { value: 'target', label: 'Target' },\n                    { value: 'bestbuy', label: 'Bestbuy' },\n                  ]}\n                  accepter={InputPicker}\n                />\n              </FormGroup>\n              <FormGroup\n                style={{\n                  marginRight: '5%',\n                  position: 'absolute',\n                  top: '0',\n                  left: '52%',\n                  width: '101%',\n                }}\n              >\n                <ControlLabel>Alias</ControlLabel>\n                <FormControl\n                  style={{ width: '38%' }}\n                  name=\"alias\"\n                  placeholder=\"Alias\"\n                />\n              </FormGroup>\n              <FormGroup style={{ marginLeft: '5%' }}>\n                <ControlLabel>Email</ControlLabel>\n                <FormControl\n                  style={{ width: '38%' }}\n                  name=\"email\"\n                  placeholder=\"Email\"\n                />\n              </FormGroup>\n              <FormGroup\n                style={{\n                  marginLeft: '5%',\n                  position: 'absolute',\n                  top: '42%',\n                  left: '47%',\n                  width: '101%',\n                }}\n              >\n                <ControlLabel>Password</ControlLabel>\n                <FormControl\n                  name=\"password\"\n                  style={{ width: '38%' }}\n                  placeholder=\"Password\"\n                />\n              </FormGroup>\n            </Form>\n          </Modal.Body>\n          <Modal.Footer>\n            <Button\n              onClick={this.close}\n              style={{\n                color: 'white',\n                border: '3px solid white',\n                marginRight: '1rem',\n              }}\n              appearance=\"ghost\"\n            >\n              Cancel\n            </Button>\n            <Button\n              onClick={this.addAccount}\n              style={{\n                color: 'springgreen',\n                border: '3px solid springgreen',\n              }}\n              appearance=\"ghost\"\n            >\n              Save\n            </Button>\n          </Modal.Footer>\n        </Modal>\n        <div\n          style={{\n            width: '90%',\n            position: 'absolute',\n            top: '50px',\n            left: '8%',\n          }}\n        >\n          <h5>Accounts</h5>\n          <Clock\n            format=\"HH:mm:ss\"\n            interval={1000}\n            ticking\n            style={{ position: 'absolute', top: '-25px', fontSize: '1rem' }}\n          />\n          <div\n            style={{\n              display: 'flex',\n              flexWrap: 'wrap',\n              overflowY: 'scroll',\n              height: '800px',\n            }}\n          >\n            <div\n              style={{\n                color: 'white',\n                marginTop: '2rem',\n                backgroundColor: '#292c3e',\n                width: '17rem',\n                height: '15rem',\n                position: 'relative',\n                borderRadius: '15px',\n                marginRight: '2rem',\n                border: '1px dashed grey',\n              }}\n              onClick={this.open}\n            >\n              <div\n                style={{\n                  width: '200px',\n                  textAlign: 'center',\n                  marginLeft: '28px',\n                }}\n              >\n                <img src={EmptySVG} alt=\"Accounts\" />\n              </div>\n              <div\n                style={{\n                  textAlign: 'center',\n                  bottom: '20px',\n                  position: 'relative',\n                }}\n              >\n                Add New Account\n              </div>\n            </div>\n            {Object.keys(this.props.state.accounts).length ? (\n              this.props.state.accounts.amazon\n                ?.concat(this.props.state.accounts.target)\n                .concat(this.props.state.accounts.bestbuy)\n                .map((row) => (\n                  <Panel\n                    style={{\n                      color: 'white',\n                      marginTop: '2rem',\n                      backgroundColor: '#292c3e',\n                      width: '17rem',\n                      height: '15rem',\n                      position: 'relative',\n                      marginRight: '2rem',\n                    }}\n                  >\n                    <div\n                      style={{\n                        position: 'absolute',\n                        top: '0',\n                        width: '100%',\n                        right: '0',\n                      }}\n                    >\n                      <ContentEditable\n                        innerRef={this.contentEditable}\n                        html={`<div>${row?.alias}</div>`}\n                        style={{\n                          position: 'relative',\n                          width: '100%',\n                          justifyContent: 'center',\n                          display: 'flex',\n                          height: '30px',\n                          textAlign: 'center',\n                          fontSize: '20px',\n                          backgroundColor: '#33374e',\n                        }}\n                      />\n                    </div>\n                    <Form style={{ position: 'relative', marginTop: '15px' }}>\n                      <span style={{ textAlign: 'center' }}>Site</span>\n                      <Input\n                        style={{ width: 224, marginBottom: '10px' }}\n                        value={this.capitalizeFirstLetter(row?.site) || ''}\n                        disabled\n                      />\n                      <span style={{ textAlign: 'center' }}>Email</span>\n                      <Input\n                        style={{ width: 224 }}\n                        disabled\n                        value={row?.email}\n                      />\n                    </Form>\n                    <div\n                      className=\"captchaButtons\"\n                      style={{\n                        position: 'relative',\n                        textAlign: 'center',\n                        marginTop: '1rem',\n                      }}\n                    >\n                      <IconButton\n                        icon={<Icon icon=\"pencil\" size=\"lg\" />}\n                        size=\"lg\"\n                        color=\"blue\"\n                      />\n                      <IconButton\n                        icon={<Icon icon=\"trash\" size=\"lg\" />}\n                        size=\"lg\"\n                        color=\"red\"\n                        onClick={(e) => {\n                          this.deleteAccount(row?.id);\n                        }}\n                      />\n                    </div>\n                  </Panel>\n                ))\n            ) : (\n              <> </>\n            )}\n          </div>\n        </div>\n      </>\n    );\n  }\n}\nconst mapStateToProps = (state) => ({ state });\nexport default connect(mapStateToProps)(Accounts);\n","import React from 'react';\nimport {\n  Input,\n  Form,\n  IconButton,\n  Icon,\n  Panel,\n  Button,\n  Modal,\n  FormGroup,\n  FormControl,\n  ControlLabel,\n  InputPicker,\n} from 'rsuite';\nimport Clock from 'react-live-clock';\nimport cogoToast from 'cogo-toast';\nimport { connect } from 'react-redux';\n\nimport EmptySVG from '../account.svg';\n\nconst { ipcRenderer } = require('electron');\n\nclass Sessions extends React.Component {\n  constructor(props) {\n    super(props);\n    this.close = this.close.bind(this);\n    this.open = this.open.bind(this);\n    this.state = {\n      selectedSessionSite: 'amazon',\n      show: false,\n      formValue: {\n        site: this.props.state.selectedSessionSite,\n        account: '',\n        proxy: '',\n        cookies: [],\n      },\n    };\n    this.getAccounts = this.getAccounts.bind(this);\n    this.addSession = this.addSession.bind(this);\n  }\n\n  componentDidMount() {\n    this.getAccounts();\n    this.getSessions();\n  }\n\n  setSelectedSite(site) {\n    this.props.dispatch({ type: 'update', obj: { selectedSessionSite: site } });\n  }\n\n  makeID(length) {\n    let result = '';\n    const characters =\n      'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    const charactersLength = characters.length;\n    for (let i = 0; i < length; i++) {\n      result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    }\n    return result;\n  }\n\n  objectToArray = () => {\n    const sessions =\n      this.props.state.sessions[this.props.state.selectedSessionSite];\n    const array = [];\n    for (const property in sessions) {\n      array.push(sessions[property]);\n    }\n    return array;\n  };\n\n  addSession() {\n    if (\n      !this.state.formValue?.site ||\n      !this.state.formValue?.account ||\n      this.state.formValue?.site === '' ||\n      this.state.formValue?.account === ''\n    ) {\n      cogoToast.error(`Please fill all fields`, {\n        position: 'top-right',\n        heading: 'Error',\n      });\n      return;\n    }\n    const sendInfo = this.state?.formValue;\n    sendInfo.id = this.makeID(5);\n\n    ipcRenderer.sendSync('add:session', sendInfo);\n\n    cogoToast.success(`Added Session`, {\n      position: 'top-right',\n      heading: 'Success',\n    });\n    this.getAccounts();\n    this.getSessions();\n  }\n\n  getAccounts = () => {\n    const accounts = ipcRenderer.sendSync('get:accounts');\n    this.props.dispatch({ type: 'update', obj: { accounts } });\n  };\n\n  getSessions = () => {\n    const sessions = ipcRenderer.sendSync('get:sessions');\n    this.props.dispatch({ type: 'update', obj: { sessions } });\n  };\n\n  close = () => {\n    this.setState({ show: false });\n  };\n\n  open = () => {\n    this.setState({ show: true });\n  };\n\n  arrayToLabel = (array) => {\n    const labels = [];\n    for (const i in array) {\n      labels.push({ value: array[i].id, label: array[i].alias });\n    }\n    return labels;\n  };\n\n  capitalizeFirstLetter(string) {\n    try {\n      return string.charAt(0).toUpperCase() + string.slice(1);\n    } catch (e) {\n      return string;\n    }\n  }\n\n  returnEmail(id, site) {\n    for (let i = 0; i < this.props.state.accounts[site].length; i++) {\n      if (this.props.state.accounts[site][i].id === id) {\n        return this.props.state.accounts[site][i].email;\n      }\n    }\n    return '';\n  }\n\n  returnAccountName(id, site) {\n    for (let i = 0; i < this.props.state.accounts[site].length; i++) {\n      console.log(this.props.state.accounts[site][i].id, id);\n      if (this.props.state.accounts[site][i].id === id) {\n        console.log('matched');\n        return this.props.state.accounts[site][i].alias;\n      }\n    }\n    return '';\n  }\n\n  render() {\n    const { formValue } = this.state;\n    return (\n      <>\n        <Modal show={this.state.show} onHide={this.close} size=\"md\">\n          <Modal.Header>\n            <Modal.Title>Create A Session</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <Form\n              fluid\n              onChange={(formValue) => {\n                this.setState({ formValue });\n              }}\n              formValue={formValue}\n            >\n              <FormGroup style={{ marginLeft: '5%' }}>\n                <ControlLabel>Site</ControlLabel>\n                <FormControl\n                  name=\"site\"\n                  placeholder=\"Site\"\n                  data={[\n                    { value: 'amazon', label: 'Amazon' },\n                    { value: 'target', label: 'Target' },\n                  ]}\n                  accepter={InputPicker}\n                />\n              </FormGroup>\n\n              <FormGroup\n                style={{ position: 'absolute', left: '55%', top: '0%' }}\n              >\n                <ControlLabel>Login Proxy</ControlLabel>\n                <FormControl\n                  style={{ width: '100%' }}\n                  name=\"proxy\"\n                  placeholder=\"Login Proxy\"\n                />\n              </FormGroup>\n              <FormGroup style={{ marginLeft: '5%' }}>\n                <FormControl\n                  name=\"account\"\n                  style={{ width: '38%' }}\n                  placeholder=\"Account\"\n                  accepter={InputPicker}\n                  data={\n                    this.props.state.accounts[this.state.formValue.site]?.length\n                      ? this.arrayToLabel(\n                          this.props.state.accounts[this.state.formValue.site]\n                        )\n                      : []\n                  }\n                />\n              </FormGroup>\n            </Form>\n          </Modal.Body>\n          <Modal.Footer>\n            <Button\n              onClick={this.close}\n              style={{\n                color: 'white',\n                border: '3px solid white',\n                marginRight: '1rem',\n              }}\n              appearance=\"ghost\"\n            >\n              Cancel\n            </Button>\n            <Button\n              onClick={this.addSession}\n              style={{\n                color: 'springgreen',\n                border: '3px solid springgreen',\n              }}\n              appearance=\"ghost\"\n            >\n              Save\n            </Button>\n          </Modal.Footer>\n        </Modal>\n        <div\n          style={{\n            width: '90%',\n            position: 'absolute',\n            top: '50px',\n            left: '8%',\n          }}\n        >\n          <h5>\n            {this.capitalizeFirstLetter(this.props.state.selectedSessionSite)}{' '}\n            Sessions\n          </h5>\n          <Clock\n            format=\"HH:mm:ss\"\n            interval={1000}\n            ticking\n            style={{ position: 'absolute', top: '-25px', fontSize: '1rem' }}\n          />\n          <div\n            style={{\n              display: 'flex',\n              flexWrap: 'wrap',\n              placeContent: 'center',\n              marginRight: '2rem',\n              marginLeft: '-2rem',\n            }}\n          >\n            <Panel\n              style={{\n                color: 'white',\n                marginTop: '2rem',\n                backgroundColor: 'rgb(50 53 75)',\n                position: 'relative',\n                borderRadius: '15px',\n                width: '20%',\n                marginRight: '2rem',\n                border:\n                  this.props.state.selectedSessionSite === 'amazon'\n                    ? 'dotted'\n                    : 'none',\n              }}\n              onClick={(e) => this.setSelectedSite('amazon')}\n            >\n              <img\n                src=\"https://upload.wikimedia.org/wikipedia/commons/a/a9/Amazon_logo.svg\"\n                alt=\"Amazon\"\n                width=\"200\"\n                style={{\n                  display: 'block',\n                  marginLeft: 'auto',\n                  marginRight: 'auto',\n                  marginTop: '18%',\n                }}\n              />\n            </Panel>\n            <Panel\n              style={{\n                color: 'white',\n                marginTop: '2rem',\n                backgroundColor: 'rgb(50 53 75)',\n                position: 'relative',\n                borderRadius: '15px',\n                width: '20%',\n                marginRight: '2rem',\n                border:\n                  this.props.state.selectedSessionSite === 'target'\n                    ? 'dotted'\n                    : 'none',\n              }}\n              onClick={(e) => this.setSelectedSite('target')}\n            >\n              <img\n                src=\"https://upload.wikimedia.org/wikipedia/commons/9/9a/Target_logo.svg\"\n                alt=\"Target_logo\"\n                width=\"70\"\n                style={{\n                  display: 'block',\n                  marginLeft: 'auto',\n                  marginRight: 'auto',\n                  marginTop: '8%',\n                }}\n              />\n            </Panel>\n          </div>\n          <div\n            style={{\n              display: 'flex',\n              flexWrap: 'wrap',\n              overflowY: 'scroll',\n            }}\n          >\n            <div\n              style={{\n                color: 'white',\n                marginTop: '2rem',\n                backgroundColor: '#292c3e',\n                width: '17rem',\n                height: '15rem',\n                position: 'relative',\n                borderRadius: '15px',\n                marginRight: '2rem',\n                border: '1px dashed grey',\n              }}\n              onClick={this.open}\n            >\n              <div\n                style={{\n                  width: '200px',\n                  textAlign: 'center',\n                  marginLeft: '28px',\n                }}\n              >\n                <img src={EmptySVG} alt=\"Accounts\" />\n              </div>\n              <div\n                style={{\n                  textAlign: 'center',\n                  bottom: '20px',\n                  position: 'relative',\n                }}\n              >\n                Add New Session\n              </div>\n            </div>\n            {Object.keys(this.props.state.sessions).length ? (\n              this.objectToArray().map((row) => (\n                <Panel\n                  style={{\n                    color: 'white',\n                    marginTop: '2rem',\n                    backgroundColor: '#292c3e',\n                    width: '17rem',\n                    height: '15rem',\n                    position: 'relative',\n                    marginRight: '2rem',\n                  }}\n                >\n                  <div\n                    style={{\n                      position: 'absolute',\n                      top: '0',\n                      width: '100%',\n                      right: '0',\n                    }}\n                  />\n                  <Form style={{ position: 'relative', marginTop: '15px' }}>\n                    <span style={{ textAlign: 'center' }}>Email</span>\n                    <Input\n                      style={{ width: 224 }}\n                      label=\"Proxy\"\n                      disabled\n                      value={this.returnEmail(\n                        this.props.state.sessions[row.site][row.id].account,\n                        row.site\n                      )}\n                    />\n                    <span style={{ textAlign: 'center' }}>Account Name</span>\n                    <Input\n                      style={{ width: 224 }}\n                      label=\"Proxy\"\n                      disabled\n                      value={this.returnAccountName(\n                        this.props.state.sessions[row.site][row.id].account,\n                        row.site\n                      )}\n                    />\n                  </Form>\n                  <div\n                    className=\"captchaButtons\"\n                    style={{\n                      position: 'relative',\n                      textAlign: 'center',\n                      marginTop: '1rem',\n                    }}\n                  >\n                    <Button\n                      size=\"lg\"\n                      color=\"blue\"\n                      onClick={async (event) => {\n                        ipcRenderer.send(`${row.site}-login`, row);\n                        console.log(row);\n                      }}\n                    >\n                      Login\n                    </Button>\n                    <IconButton\n                      icon={<Icon icon=\"pencil\" size=\"lg\" />}\n                      size=\"lg\"\n                      color=\"cyan\"\n                    />\n                    <IconButton\n                      icon={<Icon icon=\"trash\" size=\"lg\" />}\n                      color=\"red\"\n                      size=\"lg\"\n                    />\n                  </div>\n                </Panel>\n              ))\n            ) : (\n              <></>\n            )}\n          </div>\n        </div>\n      </>\n    );\n  }\n}\nconst mapStateToProps = (state) => ({ state });\nexport default connect(mapStateToProps)(Sessions);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport { FlexboxGrid, Input, Button, Icon, Alert } from 'rsuite';\nimport { ipcRenderer } from 'electron';\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n    this.activate = this.activate.bind(this);\n    this.state = {\n      key: '',\n    };\n  }\n\n  activate(e) {\n    const auth = ipcRenderer.sendSync('activate', this.state?.key.trim());\n    if (auth.success) {\n      this.props.onLogin(auth);\n      Alert.success('Success!');\n    } else {\n      Alert.error('Invalid key');\n    }\n  }\n\n  handleChange = (value) => {\n    this.setState((prevState) => ({\n      ...prevState,\n      key: value,\n    }));\n  };\n\n  render() {\n    return (\n      <div>\n        <FlexboxGrid>\n          <FlexboxGrid.Item colspan={12}>\n            <div>\n              <img\n                alt=\"\"\n                style={{ marginTop: '15%' }}\n                width=\"400\"\n                src=\"./assets/undraw_accept_tasks_po1c.svg\"\n              />\n            </div>\n          </FlexboxGrid.Item>\n          <FlexboxGrid.Item colspan={12}>\n            <div style={{ marginTop: '15%', textAlign: 'center' }}>\n              <img width=\"100\" src=\"./assets/logo_transparent.png\" alt=\"logo\" />\n              <h4 style={{ color: '#9C99F2' }}>\n                Welcome To <span style={{ color: 'white' }}>Aladdin AIO</span>\n              </h4>\n              <div style={{ color: 'lightgray' }}>\n                Enter your key to get started\n              </div>\n            </div>\n            <div style={{ textAlign: 'center', margin: '10% 15% 0 15%' }}>\n              <Input onChange={this.handleChange} placeholder=\"License Key\" />\n              <Button\n                onClick={this.activate}\n                style={{ background: '#6C63FF', marginTop: '1rem' }}\n              >\n                <Icon style={{ padding: '0.25rem' }} icon=\"sign-in\" /> Activate\n              </Button>\n            </div>\n          </FlexboxGrid.Item>\n        </FlexboxGrid>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({ state });\nexport default connect(mapStateToProps)(Login);\n","import React from 'react';\nimport { Button, Icon } from 'rsuite';\n\nconst { remote } = window.require('electron');\nconst { ipcRenderer } = window.require('electron');\n\nclass TopBar extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  close = (e) => {\n    e.preventDefault();\n    ipcRenderer.send('close');\n    return false;\n  };\n\n  minimize = (e) => {\n    e.preventDefault();\n    console.log('minimize');\n    const window = remote.getCurrentWindow();\n    window.minimize();\n    return false;\n  };\n\n  render() {\n    return (\n      <div className=\"titlebar\">\n        <div\n          style={{\n            position: 'absolute',\n            height: '1rem',\n            '-webkit-app-region': 'drag',\n            top: 0,\n            width: '95%',\n          }}\n        >\n          <div>\n            <div\n              style={{ top: '-10px', right: '-38px', position: 'absolute' }}\n              className=\"minimize\"\n            >\n              <Button\n                style={{ background: 'transparent' }}\n                onClick={this.minimize}\n              >\n                <Icon icon=\"window-minimize\" />\n              </Button>\n            </div>\n            <div\n              style={{ top: '-10px', right: '-67px', position: 'absolute' }}\n              className=\"close\"\n            >\n              <Button\n                style={{ background: 'transparent' }}\n                onClick={this.close}\n              >\n                <Icon icon=\"close\" />\n              </Button>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default TopBar;\n","import React from 'react';\r\nimport { HashRouter as Router, Route, Redirect } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore } from 'redux';\r\nimport './App.global.css';\r\nimport { createBrowserHistory } from 'history';\r\nimport { ipcRenderer } from 'electron';\r\n// import { datadogLogs } from '@datadog/browser-logs';\r\nimport { Alert } from 'rsuite';\r\nimport SidebarReact from './components/Navbar';\r\nimport TasksTable from './components/App';\r\nimport Settings from './components/Settings';\r\nimport Dashboard from './components/Dashboard';\r\nimport Proxies from './components/Proxies';\r\nimport Profiles from './components/Profiles';\r\nimport Captcha from './components/Harvester';\r\nimport Accounts from './components/Accounts';\r\nimport Sessions from './components/Sessions';\r\nimport Login from './components/Login';\r\nimport TopBar from './components/TopBar';\r\n\r\nconst history = createBrowserHistory();\r\n// const Sentry = require('@sentry/node');\r\n// or use es6 import statements\r\n// import * as Sentry from '@sentry/node';\r\n\r\n// const Tracing = require('@sentry/tracing');\r\n// or use es6 import statements\r\n// import * as Tracing from '@sentry/tracing';\r\n\r\n// Sentry.init({\r\n//   dsn:\r\n//     'https://160acd89026246f78def21d2fe63d136@o849007.ingest.sentry.io/5815937',\r\n\r\n//   // Set tracesSampleRate to 1.0 to capture 100%\r\n//   // of transactions for performance monitoring.\r\n//   // We recommend adjusting this value in production\r\n//   tracesSampleRate: 1.0,\r\n// });\r\n\r\n// datadogLogs.init({\r\n//   clientToken: 'pub2407437efef61d9bab24254d4cf60497',\r\n//   site: 'datadoghq.com',\r\n//   forwardErrorsToLogs: true,\r\n//   sampleRate: 100,\r\n// });\r\n\r\nconst store = createStore(function (\r\n  state = {\r\n    activated: false,\r\n    key: {},\r\n    tasks: [],\r\n    activeTasks: [],\r\n    filteredTasks: [],\r\n    filteredProxies: [],\r\n    filteredProfiles: [],\r\n    taskGroups: [],\r\n    profileSearch: false,\r\n    announcements: [],\r\n    search: false,\r\n    sessions: [],\r\n    logs: {},\r\n    pingSpeeds: {},\r\n    statuses: {},\r\n    taskGroupStatuses: {},\r\n    profiles: [],\r\n    products: {},\r\n    checkedKeys: [],\r\n    selectedSessionSite: 'amazon',\r\n    siteToModes: {\r\n      amazon: [\r\n        { value: 'amazonTurbo', label: 'Turbo' },\r\n        { value: 'amazonNormal', label: 'Normal' },\r\n        { value: 'amazonMobile', label: 'Mobile' },\r\n        { value: 'amazonMonitor', label: 'Monitor' },\r\n      ],\r\n      target: [{ value: 'targetSafe', label: 'Safe' }],\r\n      bestbuy: [{ value: 'bestbuySafe', label: 'Regular' }],\r\n    },\r\n    siteToImages: {\r\n      amazon: './assets/icons8-amazon-480.png',\r\n      target: './assets/icons8-target-app-256.png',\r\n      bestbuy: './assets/bestbuy.png',\r\n    },\r\n    sites: [\r\n      { value: 'amazon', label: 'Amazon' },\r\n      { value: 'bestbuy', label: 'Bestbuy' },\r\n      { value: 'target', label: 'Target' },\r\n      { value: 'customShopify', label: 'Custom Shopify' },\r\n    ],\r\n    proxies: {},\r\n    analytics: [],\r\n    inputtedProxies: [],\r\n    selectedProxies: [],\r\n    listPings: {},\r\n    harvesters: [],\r\n    accounts: {},\r\n    harvesterSites: [\r\n      { value: 'shopifyCheckpoint', label: 'Shopify Checkpoint' },\r\n      { value: 'shopifyCheckout', label: 'Shopify Checkout' },\r\n      { value: 'walmart', label: 'Walmart' },\r\n      { value: 'newegg', label: 'Newegg' },\r\n    ],\r\n    progress: {},\r\n    selectedGroup: null,\r\n    selectedGroups: [],\r\n    showDeleteGroup: false,\r\n    groups: [],\r\n    discordAvatar:\r\n      'https://external-preview.redd.it/4PE-nlL_PdMD5PrFNLnjurHQ1QKPnCvg368LTDnfM-M.png?auto=webp&s=ff4c3fbc1cce1a1856cff36b5d2a40a6d02cc1c3',\r\n    cookiesUsed: 0,\r\n    cookieInfo: {\r\n      'FootLocker US': {},\r\n      'FootLocker CA': {},\r\n      'Kids FootLocker': {},\r\n      FootAction: {},\r\n      EastBay: {},\r\n      'Champs Sports': {},\r\n    },\r\n  },\r\n  action\r\n) {\r\n  switch (action.type) {\r\n    case 'update':\r\n      return { ...state, ...action.obj };\r\n    case 'set-active-tasks':\r\n      var newState = { ...state };\r\n      newState.activeTasks.concat(action.obj.activeTasks);\r\n      return newState;\r\n    case 'addProduct':\r\n      var newState = { ...state, ...action.obj };\r\n      for (const i of action.info) {\r\n        newState.products[i.id] = i.product;\r\n      }\r\n      return newState;\r\n    case 'deleteProduct':\r\n      var newState = { ...state, ...action.obj };\r\n      delete newState.products[action.id];\r\n      return newState;\r\n    case 'addLog':\r\n      var newState = { ...state };\r\n      for (const i of action.info) {\r\n        // if (!newState.logs[i.taskId]) {\r\n        //     newState.logs[i.taskId] = []\r\n        // }\r\n        // newState.logs[i.taskId].push(i.time + ' ' + i.log)\r\n        if (i.sendToStatus) newState.statuses[i.taskId] = i.log;\r\n      }\r\n      return newState;\r\n    case 'addStatus':\r\n      var newState = { ...state };\r\n      for (const i of action.info) {\r\n        if (newState.taskGroupStatuses[i.taskGroupID]) {\r\n          newState.taskGroupStatuses[i.taskGroupID][i.type] += 1;\r\n        } else {\r\n          newState.taskGroupStatuses[i.taskGroupID][i.type] = 0;\r\n        }\r\n      }\r\n      return newState;\r\n    case 'pingSpeed':\r\n      var newState = { ...state };\r\n      for (const i of action.info) {\r\n        newState.pingSpeeds[i.id] = i.ping;\r\n      }\r\n      return newState;\r\n    default:\r\n      return state;\r\n  }\r\n});\r\n\r\nwindow.store = store;\r\n\r\nclass Index extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      activated: true,\r\n      version: '1.1.9',\r\n    };\r\n  }\r\n\r\n  login = (key) => {\r\n    var activate = ipcRenderer.sendSync('activated', key);\r\n    this.setState({ activated: true, key });\r\n  };\r\n\r\n  checkActivation = () => {\r\n    const checkActivation = ipcRenderer.sendSync('checkAuth');\r\n    if (checkActivation) {\r\n      this.setState({ activated: true });\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    // this.checkActivation();\r\n    const checkActivation = ipcRenderer.sendSync('checkAuth');\r\n    if (checkActivation) {\r\n      this.setState({ activated: true });\r\n    }\r\n    ipcRenderer.on('log', (e, info) => {\r\n      store.dispatch({ type: 'addLog', info });\r\n    });\r\n\r\n    ipcRenderer.on('groupStatus', (e, info) => {\r\n      store.dispatch({ type: 'addStatus', info });\r\n    });\r\n\r\n    ipcRenderer.on('session-msg', (e, msg) => {\r\n      Alert.info(msg);\r\n    });\r\n\r\n    ipcRenderer.on('proxySpeed', (e, info) => {\r\n      // store.dispatch({ type: 'pingSpeed', info });\r\n      const proxies = ipcRenderer.sendSync('get:proxies');\r\n      store.dispatch({ type: 'update', obj: { proxies } });\r\n    });\r\n\r\n    this.fetchAnnouncements();\r\n\r\n    // const info = ipcRenderer.sendSync('get:info');\r\n    // store.dispatch({\r\n    //   type: 'update',\r\n    //   obj: {\r\n    //     discordAvatar: info.avatar,\r\n    //     discordUsername: info.username,\r\n    //     licenseKey: info.LicenseKey,\r\n    //   },\r\n    // });\r\n  }\r\n\r\n  fetchAnnouncements() {\r\n    fetch('https://aladdin-aio.com/api/announcements')\r\n      .then((response1) => response1.json())\r\n      .then((json) =>\r\n        store.dispatch({\r\n          type: 'update',\r\n          obj: { announcements: json.announcements },\r\n        })\r\n      );\r\n  }\r\n\r\n  checkActivation = () => {\r\n    var auth = ipcRenderer.sendSync('checkAuth');\r\n    this.setState({ activated: auth.success, key: auth });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Provider store={store}>\r\n        {/* <React.StrictMode> */}\r\n        <Router history={history}>\r\n          <div className=\"app\">\r\n            {this.state.activated ? (\r\n              <div\r\n                style={{ height: '100%', width: '100%' }}\r\n                className=\"page-background\"\r\n              >\r\n                <TopBar />\r\n                <SidebarReact />\r\n                <Route exact path=\"/dashboard\" component={Dashboard} />\r\n                <Route exact path=\"/tasks\" component={TasksTable} />\r\n                <Route exact path=\"/captcha\" component={Captcha} />\r\n                <Route exact path=\"/proxies\" component={Proxies} />\r\n                <Route exact path=\"/profiles\" component={Profiles} />\r\n                <Route exact path=\"/accounts\" component={Accounts} />\r\n                <Route exact path=\"/sessions\" component={Sessions} />\r\n                <Route exact path=\"/settings\" component={Settings} />\r\n                <Redirect path=\"*\" to=\"/tasks\" />\r\n              </div>\r\n            ) : (\r\n              <>\r\n                <Route\r\n                  exact\r\n                  path=\"/login\"\r\n                  key=\"test\"\r\n                  component={() => (\r\n                    <Login\r\n                      activated={this.state.activated}\r\n                      onLogin={this.login}\r\n                    />\r\n                  )}\r\n                />\r\n              </>\r\n            )}\r\n          </div>\r\n        </Router>\r\n        {/* </React.StrictMode> */}\r\n      </Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Index;\r\n","import ReactDOM from 'react-dom';\nimport React from 'react';\nimport Index from './main';\n\nReactDOM.render(<Index />, document.getElementById('root'));\n"],"sourceRoot":""}
{"version":3,"sources":["../external \"electron\"","../external \"child_process\"","components/Navbar.jsx","components/App.jsx","components/Settings.jsx","components/Dashboard.jsx","components/Proxies.jsx","components/CreditCard.jsx","components/Profiles.jsx","empty.svg","components/Harvester.jsx","account.svg","components/Accounts.jsx","components/Sessions.jsx","components/Login.jsx","components/TopBar.jsx","main.jsx","index.js"],"names":["module","exports","require","headerStyles","padding","fontSize","height","color","whiteSpace","overflow","DiscordAvatar","props","Avatar","style","position","left","bottom","circle","src","discordAvatar","alt","connect","state","capitalizeFirstLetter","string","charAt","toUpperCase","slice","e","className","Sidebar","display","flexDirection","Sidenav","expanded","defaultOpenKeys","appearance","Header","top","width","Body","Nav","link","name","icon","map","page","to","Whisper","placement","trigger","speaker","Tooltip","Item","eventKey","Icon","discordUsername","ipcRenderer","Column","Table","HeaderCell","Cell","passwordGenerator","Math","random","toString","substr","CheckCell","rowData","onChange","checkedKeys","dataKey","lineHeight","Checkbox","value","inline","checked","some","item","TasksTable","handleCheckAll","tasks","id","dispatch","type","obj","handleCheck","event","preventDefault","nativeEvent","shiftKey","console","log","nextCheckedKeys","filter","getProfiles","profiles","sendSync","close","setState","show","open","taskStatusColor","status","getTasks","search","term","filteredTasks","row","JSON","stringify","toLowerCase","includes","startTask","task","send","activeTasks","stopTasks","handleClick","data","logs","handleChange","prevState","arrayToLabel","array","labels","i","push","label","profileName","getTaskGroups","taskGroups","selectedTaskGroup","getSessions","sessions","getProxies","proxies","getAccounts","accounts","deleteTasks","taskGroupID","cogoToast","success","heading","deleteSomeTasks","arg","createTasks","formValue","quantity","store","mode","profile","proxy","sku","session","proxyName","monitorDelay","checkoutDelay","statusColor","startAllTasks","t","stopAllTasks","window","innerHeight","round","createTaskGroup","taskGroup","sendTaskGroup","taskGroupForm","groupName","error","deleteTaskGroup","getSessionsArray","site","property","accountName","account","alias","getProxiesArray","returnModal","FormGroup","marginLeft","ControlLabel","FormControl","placeholder","accepter","InputPicker","siteToModes","size","keywords","this","indeterminate","length","Modal","onHide","Title","Form","fluid","sites","Footer","Button","onClick","border","marginRight","format","interval","ticking","right","float","siteToImages","Input","InputGroup","Addon","disabled","borderWidth","marginTop","variant","justify","virtualized","shouldUpdateScroll","renderEmpty","textAlign","fontWeight","align","statuses","fixed","paddingRight","overflowY","overflowX","margin","marginBottom","backgroundColor","setSelectedTaskgroup","Panel","shaded","bordered","Dropdown","renderTitle","IconButton","background","onSelect","Typography","component","React","Component","styles","styles1","Settings","testWebhook","bind","saveSettings","deactivate","onTodoChange","settings","RetryDelays","MonitorDelays","WebhookURL","getSettings","openLogs","header","collapsible","defaultExpanded","username","LicenseKey","$","val","DoughnutData","datasets","borderColor","styleCenter","justifyContent","alignItems","slimText","paddingBottom","titleStyle","Dashboard","getAnalytics","analytics","a","fetch","response","json","responseJSON","announcements","date","today","Date","createdOn","setHours","diff","items","Paper","transform","paddingTop","checkouts","declines","totalSpent","fetchAnnouncements","index","borderRadius","title","message","List","maxWidth","maxHeight","FlexboxGrid","colspan","image","price","toLocaleDateString","Proxies","filteredProxies","editProxyGroup","edit","selectedProxygroup","formatProxy","sendEditProxies","proxyObject","proxyText","keys","Object","user","password","ip","port","objectToArray","object","Array","isArray","setSelectedProxygroup","addProxies","deleteProxies","spanColor","num","parseInt","deleteSpecificProxy","groupID","pingProxy","testAllProxies","proxiesObject","block","componentClass","rows","center","hover","speed","CreditCards","setCards","prevProps","acceptedCards","callback","number","options","Payment","fns","validateCardNumber","issuer","preview","maxLength","nextNumber","replace","isNaN","limit","space_index","expiry","month","year","split","cardType","newCardArray","getCardArray","forEach","d","concat","setCardArray","cvc","focused","locale","placeholders","profileID","join","trim","deleteProfile","onEditClick","duplicateProfile","defaultProps","valid","Profile","handleInputFocus","focus","target","handleInputChange","saveProfile","changeStep","stepNow","step","email","cardName","cardNumber","cardCVV","cardExpiration","firstName","lastName","address","city","phone","zip","country","billingFirstName","billingLastName","billingAddress","billingCity","billingPhone","billingZip","billingState","billingCountry","editProfile","sendEditProfile","clearState","CardCVC","CardExpiry","CardName","CardNumber","filteredProfiles","profileSearch","Steps","current","layout","states","canadaProvinces","Toggle","ButtonGroup","createProfile","inside","flexWrap","gridTemplateColumns","CreditCard","flex","role","Captcha","getHarvesters","harvesters","showHarvester","addHarvester","saveHarvester","contentEditable","createRef","harvester","idNum","harvesterSites","EmptySVG","innerRef","html","CheckPicker","searchable","defaultValue","text","Accounts","deleteAccount","addAccount","result","characters","charactersLength","floor","sendInfo","makeID","amazon","bestbuy","Sessions","selectedSessionSite","cookies","addSession","placeContent","setSelectedSite","returnEmail","returnAccountName","Login","key","activate","auth","onLogin","Alert","remote","TopBar","minimize","getCurrentWindow","history","createBrowserHistory","createStore","activated","pingSpeeds","taskGroupStatuses","products","inputtedProxies","selectedProxies","listPings","progress","selectedGroup","selectedGroups","showDeleteGroup","groups","cookiesUsed","cookieInfo","FootAction","EastBay","action","newState","info","product","sendToStatus","taskId","ping","Index","login","version","on","msg","avatar","licenseKey","then","response1","exact","path","Profiles","ReactDOM","render","document","getElementById"],"mappings":"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AyB8W,IAuClC0C,GAAkB,CACtB,CACEnW,MAAO,UACPsD,MAAO,WAET,CACEtD,MAAO,SACPsD,MAAO,UAET,CACEtD,MAAO,cACPsD,MAAO,eAET,CACEtD,MAAO,gBACPsD,MAAO,iBAET,CACEtD,MAAO,mBACPsD,MAAO,oBAET,CACEtD,MAAO,uBACPsD,MAAO,wBAET,CACEtD,MAAO,eACPsD,MAAO,gBAET,CACEtD,MAAO,UACPsD,MAAO,WAET,CACEtD,MAAO,4BACPsD,MAAO,8BAIL4S,GAAS,CACb,CACE5S,MAAO,UACPtD,MAAO,UACP4W,KAAM,WAER,CACEtT,MAAO,SACPtD,MAAO,SACP4W,KAAM,UAER,CACEtT,MAAO,UACPtD,MAAO,UACP4W,KAAM,WAER,CACEtT,MAAO,WACPtD,MAAO,WACP4W,KAAM,YAER,CACEtT,MAAO,aACPtD,MAAO,aACP4W,KAAM,cAER,CACEtT,MAAO,WACPtD,MAAO,WACP4W,KAAM,YAER,CACEtT,MAAO,cACPtD,MAAO,cACP4W,KAAM,eAER,CACEtT,MAAO,WACPtD,MAAO,WACP4W,KAAM,YAER,CACEtT,MAAO,UACPtD,MAAO,UACP4W,KAAM,WAER,CACEtT,MAAO,UACPtD,MAAO,UACP4W,KAAM,WAER,CACEtT,MAAO,QACPtD,MAAO,QACP4W,KAAM,SAER,CACEtT,MAAO,SACPtD,MAAO,SACP4W,KAAM,UAER,CACEtT,MAAO,WACPtD,MAAO,WACP4W,KAAM,YAER,CACEtT,MAAO,UACPtD,MAAO,UACP4W,KAAM,WAER,CACEtT,MAAO,OACPtD,MAAO,OACP4W,KAAM,QAER,CACEtT,MAAO,SACPtD,MAAO,SACP4W,KAAM,UAER,CACEtT,MAAO,WACPtD,MAAO,WACP4W,KAAM,YAER,CACEtT,MAAO,YACPtD,MAAO,YACP4W,KAAM,aAER,CACEtT,MAAO,QACPtD,MAAO,QACP4W,KAAM,SAER,CACEtT,MAAO,WACPtD,MAAO,WACP4W,KAAM,YAER,CACEtT,MAAO,gBACPtD,MAAO,gBACP4W,KAAM,iBAER,CACEtT,MAAO,WACPtD,MAAO,WACP4W,KAAM,YAER,CACEtT,MAAO,YACPtD,MAAO,YACP4W,KAAM,aAER,CACEtT,MAAO,cACPtD,MAAO,cACP4W,KAAM,eAER,CACEtT,MAAO,WACPtD,MAAO,WACP4W,KAAM,YAER,CACEtT,MAAO,UACPtD,MAAO,UACP4W,KAAM,WAER,CACEtT,MAAO,WACPtD,MAAO,WACP4W,KAAM,YAER,CACEtT,MAAO,SACPtD,MAAO,SACP4W,KAAM,UAER,CACEtT,MAAO,gBACPtD,MAAO,gBACP4W,KAAM,iBAER,CACEtT,MAAO,aACPtD,MAAO,aACP4W,KAAM,cAER,CACEtT,MAAO,aACPtD,MAAO,aACP4W,KAAM,cAER,CACEtT,MAAO,WACPtD,MAAO,WACP4W,KAAM,YAER,CACEtT,MAAO,iBACPtD,MAAO,iBACP4W,KAAM,kBAER,CACEtT,MAAO,eACPtD,MAAO,eACP4W,KAAM,gBAER,CACEtT,MAAO,OACPtD,MAAO,OACP4W,KAAM,QAER,CACEtT,MAAO,WACPtD,MAAO,WACP4W,KAAM,YAER,CACEtT,MAAO,SACPtD,MAAO,SACP4W,KAAM,UAER,CACEtT,MAAO,eACPtD,MAAO,eACP4W,KAAM,gBAER,CACEtT,MAAO,eACPtD,MAAO,eACP4W,KAAM,gBAER,CACEtT,MAAO,iBACPtD,MAAO,iBACP4W,KAAM,kBAER,CACEtT,MAAO,eACPtD,MAAO,eACP4W,KAAM,gBAER,CACEtT,MAAO,YACPtD,MAAO,YACP4W,KAAM,aAER,CACEtT,MAAO,QACPtD,MAAO,QACP4W,KAAM,SAER,CACEtT,MAAO,OACPtD,MAAO,OACP4W,KAAM,QAER,CACEtT,MAAO,UACPtD,MAAO,UACP4W,KAAM,WAER,CACEtT,MAAO,WACPtD,MAAO,WACP4W,KAAM,YAER,CACEtT,MAAO,aACPtD,MAAO,aACP4W,KAAM,cAER,CACEtT,MAAO,gBACPtD,MAAO,gBACP4W,KAAM,iBAER,CACEtT,MAAO,YACPtD,MAAO,YACP4W,KAAM,aAER,CACEtT,MAAO,UACPtD,MAAO,UACP4W,KAAM,WAER,CACEtT,MAAO,KACPtD,MAA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","file":"static/js/main.638fb2bd.chunk.js","sourcesContent":["module.exports = require(\"electron\");","module.exports = require(\"child_process\");","import { Sidenav, Sidebar, Nav, Icon, Avatar, Tooltip, Whisper } from 'rsuite';\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport cogoToast from 'cogo-toast';\r\nimport { connect } from 'react-redux';\r\n\r\nconst headerStyles = {\r\n  padding: 18,\r\n  fontSize: 16,\r\n  height: 56,\r\n  // background: '#34c3ff',\r\n  color: ' #fff',\r\n  whiteSpace: 'nowrap',\r\n  overflow: 'hidden',\r\n};\r\n\r\nfunction DiscordAvatar(props) {\r\n  return (\r\n    <Avatar\r\n      style={{\r\n        position: 'absolute',\r\n        left: '8px',\r\n        bottom: '47px',\r\n      }}\r\n      circle\r\n      src={props.discordAvatar}\r\n      alt=\"RU\"\r\n    />\r\n  );\r\n}\r\n\r\nfunction SidebarReact(props) {\r\n  function capitalizeFirstLetter(string) {\r\n    try {\r\n      return string.charAt(0).toUpperCase() + string.slice(1);\r\n    } catch (e) {\r\n      return '';\r\n    }\r\n  }\r\n  const pages = [\r\n    { link: 'dashboard', name: 'Dashboard', icon: 'dashboard' },\r\n    { link: 'tasks', name: 'Tasks', icon: 'task' },\r\n    { link: 'profiles', name: 'Profiles', icon: 'group' },\r\n    { link: 'proxies', name: 'Proxies', icon: 'wifi' },\r\n    { link: 'captcha', name: 'Captcha', icon: 'google' },\r\n    { link: 'accounts', name: 'Accounts', icon: 'file-text' },\r\n    { link: 'sessions', name: 'Sessions', icon: 'web' },\r\n    { link: 'settings', name: 'Settings', icon: 'cogs' },\r\n  ];\r\n\r\n  return (\r\n    <div style={{ height: '100%' }} className=\"navbar\">\r\n      <Sidebar style={{ display: 'flex', flexDirection: 'column' }}>\r\n        <Sidenav\r\n          // onSelect={handleSelect}\r\n          expanded={false}\r\n          defaultOpenKeys={['3']}\r\n          appearance=\"subtle\"\r\n        >\r\n          <Sidenav.Header>\r\n            <div style={headerStyles}>\r\n              <img\r\n                style={{ position: 'absolute', left: '5px', top: '5px' }}\r\n                src=\"./assets/logo_transparent.png\"\r\n                alt=\"logo\"\r\n                width=\"50\"\r\n              />\r\n            </div>\r\n          </Sidenav.Header>\r\n          <Sidenav.Body>\r\n            <Nav>\r\n              {pages.map((page) => (\r\n                <Link key={page.link} to={page.link}>\r\n                  <Whisper\r\n                    placement=\"right\"\r\n                    trigger=\"hover\"\r\n                    speaker={<Tooltip>{page.name}</Tooltip>}\r\n                  >\r\n                    <Nav.Item eventKey=\"1\" icon={<Icon icon={page.icon} />}>\r\n                      {capitalizeFirstLetter(page.link)}\r\n                    </Nav.Item>\r\n                  </Whisper>\r\n                </Link>\r\n              ))}\r\n            </Nav>\r\n            <Whisper\r\n              placement=\"right\"\r\n              trigger=\"hover\"\r\n              speaker={<Tooltip>{props.state.discordUsername}</Tooltip>}\r\n            >\r\n              <DiscordAvatar discordAvatar={props.state.discordAvatar} />\r\n            </Whisper>\r\n          </Sidenav.Body>\r\n        </Sidenav>\r\n      </Sidebar>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({ state });\r\nexport default connect(mapStateToProps)(SidebarReact);\r\n","import React from 'react';\r\nimport { Button } from '@material-ui/core';\r\nimport '../app.css';\r\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  Icon,\r\n  InputPicker,\r\n  Table,\r\n  Modal,\r\n  Checkbox,\r\n  Avatar,\r\n  Form,\r\n  InputGroup,\r\n  Input,\r\n  FormGroup,\r\n  FormControl,\r\n  ControlLabel,\r\n  Panel,\r\n  IconButton,\r\n  Button as RsuiteButton,\r\n  Dropdown,\r\n} from 'rsuite';\r\nimport cogoToast from 'cogo-toast';\r\n// import { datadogLogs } from '@datadog/browser-logs';\r\nimport { ContextMenu, MenuItem, ContextMenuTrigger } from 'react-contextmenu';\r\nimport Clock from 'react-live-clock';\r\n\r\nconst { ipcRenderer } = require('electron');\r\n\r\nconst { Column, HeaderCell, Cell } = Table;\r\n\r\nfunction passwordGenerator() {\r\n  return Math.random().toString(25).substr(2, 6).toUpperCase();\r\n}\r\nconst CheckCell = ({ rowData, onChange, checkedKeys, dataKey, ...props }) => (\r\n  <Cell {...props} style={{ padding: 0 }}>\r\n    <div style={{ lineHeight: '46px' }}>\r\n      <Checkbox\r\n        value={rowData[dataKey]}\r\n        inline\r\n        onChange={onChange}\r\n        checked={checkedKeys.some((item) => item === rowData[dataKey])}\r\n      />\r\n    </div>\r\n  </Cell>\r\n);\r\nclass TasksTable extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: this.props.state.tasks,\r\n      show: false,\r\n      logs: [],\r\n      store: '',\r\n      color: '',\r\n      profile: '',\r\n      proxy: '',\r\n      size: '',\r\n      keywords: '',\r\n      monitorDelay: 3000,\r\n      checkoutDelay: 3000,\r\n      account: '',\r\n      checkedKeys: this.props.state.checkedKeys,\r\n      selectedTaskGroup: '',\r\n      taskGroup: false,\r\n      formValue: {\r\n        id: passwordGenerator(),\r\n        taskGroupID: '',\r\n        store: '',\r\n        mode: '',\r\n        profile: '',\r\n        proxy: '',\r\n        size: '',\r\n        keywords: '',\r\n        color: '',\r\n        account: null,\r\n        monitorDelay: 3000,\r\n        checkoutDelay: 3000,\r\n        status: {\r\n          status: 'Idle',\r\n          statusColor: '#f2f2f2',\r\n        },\r\n      },\r\n      taskGroupForm: {\r\n        id: passwordGenerator(),\r\n        store: '',\r\n        groupName: '',\r\n        tasks: 0,\r\n      },\r\n    };\r\n  }\r\n\r\n  handleCheckAll = (value, checked) => {\r\n    const checkedKeys = checked\r\n      ? this.props.state.tasks.map((item) => item.id)\r\n      : [];\r\n    this.props.dispatch({ type: 'update', obj: { checkedKeys } });\r\n  };\r\n\r\n  handleCheck = (value, checked, event) => {\r\n    event.preventDefault();\r\n    if (event.nativeEvent.shiftKey) {\r\n      console.log('Shift Key');\r\n    }\r\n    const { checkedKeys } = this.props.state;\r\n    const nextCheckedKeys = checked\r\n      ? [...checkedKeys, value]\r\n      : checkedKeys.filter((item) => item !== value);\r\n    this.props.dispatch({\r\n      type: 'update',\r\n      obj: { checkedKeys: nextCheckedKeys },\r\n    });\r\n  };\r\n\r\n  getProfiles = () => {\r\n    const profiles = ipcRenderer.sendSync('get:profiles');\r\n    this.props.dispatch({ type: 'update', obj: { profiles } });\r\n  };\r\n\r\n  close = () => {\r\n    this.setState({ show: false });\r\n  };\r\n\r\n  open = () => {\r\n    this.setState({ show: true });\r\n  };\r\n\r\n  taskStatusColor = (status) => {\r\n    switch (status) {\r\n      case 'Idle':\r\n        return 'white';\r\n      case 'Successful Checkout':\r\n      case 'Checked Out':\r\n        return 'springgreen';\r\n      case 'Adding to Cart':\r\n        return '#0ee3c3';\r\n      case 'Starting Task':\r\n      case 'Submitting Shipping':\r\n      case 'Submitting Billing':\r\n      case 'Calculating Taxes':\r\n      case 'Visiting Home Page':\r\n        return '#4287f5';\r\n      case 'Checking Out':\r\n        return '#e3bc0e';\r\n      case 'Stopped':\r\n        return '#ff6b6b';\r\n      default:\r\n        return 'white';\r\n    }\r\n  };\r\n\r\n  getTasks = () => {\r\n    const tasks = ipcRenderer.sendSync('get:tasks');\r\n    this.props.dispatch({ type: 'update', obj: { tasks } });\r\n  };\r\n\r\n  search = (term) => {\r\n    if (term !== '') {\r\n      const filteredTasks = this.props.state.tasks.filter((row) =>\r\n        JSON.stringify(row).toLowerCase().includes(term.toLowerCase())\r\n      );\r\n      this.props.dispatch({\r\n        type: 'update',\r\n        obj: { filteredTasks, search: true },\r\n      });\r\n    } else {\r\n      this.props.dispatch({\r\n        type: 'update',\r\n        obj: { search: false },\r\n      });\r\n    }\r\n  };\r\n\r\n  startTask = (task) => {\r\n    ipcRenderer.send('start:tasks', task);\r\n    this.props.dispatch({ type: 'set-active-tasks', obj: { activeTasks: task.id } });\r\n  };\r\n\r\n  stopTasks = (task) => {\r\n    ipcRenderer.send('stop:tasks', task);\r\n  };\r\n\r\n  handleClick = (e, data) => {\r\n    this.setState(({ logs }) => ({\r\n      logs: [`Clicked on ${data.name} menu ${data.item}`, ...logs],\r\n    }));\r\n  };\r\n\r\n  handleChange = (name, value) => {\r\n    this.setState((prevState) => ({\r\n      ...prevState,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  arrayToLabel = (array) => {\r\n    const labels = [];\r\n    for (const i in array) {\r\n      labels.push({ value: array[i].id, label: array[i].profileName });\r\n    }\r\n    return labels;\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getTasks();\r\n    this.getProfiles();\r\n    this.getTaskGroups();\r\n    this.getSessions();\r\n    this.getProxies();\r\n    this.getAccounts();\r\n  }\r\n\r\n  getTaskGroups = () => {\r\n    const taskGroups = ipcRenderer.sendSync('get:taskgroups');\r\n    this.props.dispatch({ type: 'update', obj: { taskGroups } });\r\n    this.setState((prevState) => ({\r\n      ...prevState,\r\n      selectedTaskGroup: taskGroups[0]?.id,\r\n    }));\r\n  };\r\n\r\n  getSessions = () => {\r\n    const sessions = ipcRenderer.sendSync('get:sessions');\r\n    this.props.dispatch({ type: 'update', obj: { sessions } });\r\n  };\r\n\r\n  getProxies = () => {\r\n    const proxies = ipcRenderer.sendSync('get:proxies');\r\n    this.props.dispatch({ type: 'update', obj: { proxies } });\r\n  };\r\n\r\n  getAccounts = () => {\r\n    const accounts = ipcRenderer.sendSync('get:accounts');\r\n    this.props.dispatch({ type: 'update', obj: { accounts } });\r\n  };\r\n\r\n  deleteTasks = (e, taskGroupID) => {\r\n    ipcRenderer.sendSync('delete:tasks', taskGroupID);\r\n    this.getTasks();\r\n    this.props.dispatch({\r\n      type: 'update',\r\n      obj: { checkedKeys: [] },\r\n    });\r\n\r\n    cogoToast.success(`Deleted Tasks`, {\r\n      position: 'top-right',\r\n      heading: 'Success',\r\n    });\r\n  };\r\n\r\n  deleteSomeTasks = (e, arg) => {\r\n    e.preventDefault();\r\n    ipcRenderer.sendSync('delete:some:tasks', arg);\r\n    this.getTasks();\r\n    this.props.dispatch({\r\n      type: 'update',\r\n      obj: { checkedKeys: [] },\r\n    });\r\n  };\r\n\r\n  createTasks = (event) => {\r\n    event.preventDefault();\r\n    const tasks = [];\r\n    for (let i = 0; i < this.state.formValue.quantity; i++) {\r\n      tasks.push({\r\n        id: passwordGenerator(),\r\n        taskGroupID: this.state.selectedTaskGroup,\r\n        store: this.capitalizeFirstLetter(\r\n          this.props.state.taskGroups.filter(\r\n            (item) => item?.id === this.state?.selectedTaskGroup\r\n          )[0]?.store\r\n        ),\r\n        mode: this.state.formValue.mode,\r\n        profile: this.state.formValue.profile,\r\n        proxy: this.state.formValue.proxy || 'local',\r\n        sku: this.state.formValue.sku,\r\n        session: this.state.formValue.session,\r\n        proxyName:\r\n          this.props.state.proxies[this.state.formValue.proxy]?.name || 'local',\r\n        monitorDelay: 3000,\r\n        checkoutDelay: 3000,\r\n        status: {\r\n          status: 'Idle',\r\n          statusColor: '#f2f2f2',\r\n        },\r\n      });\r\n    }\r\n    ipcRenderer.sendSync('create:tasks', tasks);\r\n    this.setState({ show: false });\r\n    cogoToast.success(\r\n      `Created ${\r\n        this.state.formValue.quantity > 1 ? this.state.formValue.quantity : ''\r\n      } Tasks`,\r\n      {\r\n        position: 'top-right',\r\n        heading: 'Success',\r\n      }\r\n    );\r\n    this.getTasks();\r\n  };\r\n\r\n  startAllTasks = (tasks) => {\r\n    if (tasks === 'all') {\r\n      for (const t in this.props.state.tasks) {\r\n        const task = this.props.state.tasks[t];\r\n        this.startTask(task);\r\n      }\r\n    } else {\r\n      for (const t in this.props.state.tasks) {\r\n        if (tasks.includes(this.props.state.tasks[t].id)) {\r\n          this.startTask(this.props.state.tasks[t]);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  stopAllTasks = (tasks) => {\r\n    if (tasks === 'all') {\r\n      for (const t in this.props.state.tasks) {\r\n        const task = this.props.state.tasks[t];\r\n        this.stopTasks(task);\r\n      }\r\n    } else {\r\n      for (const t in this.props.state.tasks) {\r\n        if (tasks.includes(this.props.state.tasks[t].id)) {\r\n          this.stopTasks(this.props.state.tasks[t]);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  capitalizeFirstLetter(string) {\r\n    try {\r\n      return string.charAt(0).toUpperCase() + string.slice(1);\r\n    } catch (e) {\r\n      return string;\r\n    }\r\n  }\r\n\r\n  height = () => {\r\n    const height = window.innerHeight;\r\n    return Math.round(0.75 * height);\r\n  };\r\n\r\n  createTaskGroup = () => {\r\n    this.setState((prevState) => ({\r\n      ...prevState,\r\n      taskGroup: true,\r\n    }));\r\n    this.open();\r\n  };\r\n\r\n  sendTaskGroup = (e) => {\r\n    const { taskGroupForm } = this.state;\r\n    if (taskGroupForm.groupName && taskGroupForm.store) {\r\n      ipcRenderer.send('create:taskgroup', this.state.taskGroupForm);\r\n      this.setState((prevState) => ({\r\n        ...prevState,\r\n        taskGroupForm: {\r\n          id: passwordGenerator(),\r\n          store: '',\r\n          groupName: '',\r\n          tasks : 0,\r\n        },\r\n      }));\r\n      this.close();\r\n      this.getTaskGroups();\r\n    } else {\r\n      cogoToast.error('Please fill in all fields', {\r\n        position: 'top-right',\r\n        heading: 'Error',\r\n      });\r\n    }\r\n  };\r\n\r\n  setSelectedTaskgroup(id) {\r\n    this.setState((prevState) => ({\r\n      ...prevState,\r\n      selectedTaskGroup: id,\r\n    }));\r\n  }\r\n\r\n  deleteTaskGroup = (e, id) => {\r\n    ipcRenderer.send('delete:taskgroup', id);\r\n    this.getTaskGroups();\r\n    this.getTasks();\r\n  };\r\n\r\n  getSessionsArray = (site) => {\r\n    const sessions = this.props.state.sessions[site];\r\n    const array = [];\r\n    for (const property in sessions) {\r\n      const accountName = this.props.state.accounts[site].filter(\r\n        (item) => item.id === sessions[property].account\r\n      )[0].alias;\r\n      array.push({\r\n        value: sessions[property].id,\r\n        label: accountName,\r\n      });\r\n    }\r\n    return array;\r\n  };\r\n\r\n  getProxiesArray = () => {\r\n    const { proxies } = this.props.state;\r\n    const array = [];\r\n    for (const property in proxies) {\r\n      array.push({\r\n        value: proxies[property].id,\r\n        label: proxies[property].name,\r\n      });\r\n    }\r\n    return array;\r\n  };\r\n\r\n  returnModal = (site) => {\r\n    console.log(site);\r\n    if (site === 'amazon') {\r\n      return (\r\n        <>\r\n          <FormGroup style={{ marginLeft: '5%' }}>\r\n            <ControlLabel>SKU</ControlLabel>\r\n            <FormControl\r\n              style={{ width: 'auto' }}\r\n              name=\"sku\"\r\n              placeholder=\"SKU\"\r\n            />\r\n          </FormGroup>\r\n          <FormGroup style={{ marginLeft: '5%' }}>\r\n            <ControlLabel>Mode</ControlLabel>\r\n            <FormControl\r\n              name=\"mode\"\r\n              placeholder=\"Mode\"\r\n              accepter={InputPicker}\r\n              data={this.props.state.siteToModes[site] ?? []}\r\n            />\r\n          </FormGroup>\r\n          <FormGroup style={{ marginLeft: '5%' }}>\r\n            <ControlLabel>Session</ControlLabel>\r\n            <FormControl\r\n              name=\"session\"\r\n              data={this.getSessionsArray(site)}\r\n              accepter={InputPicker}\r\n            />\r\n          </FormGroup>\r\n          <FormGroup style={{ position: 'absolute', top: '0%', left: '60%' }}>\r\n            <ControlLabel>Proxy</ControlLabel>\r\n            <FormControl\r\n              name=\"proxy\"\r\n              data={this.getProxiesArray()}\r\n              placeholder=\"Proxy\"\r\n              accepter={InputPicker}\r\n            />\r\n          </FormGroup>\r\n          <FormGroup style={{ position: 'absolute', top: '30%', left: '60%' }}>\r\n            <ControlLabel>Task Quantity</ControlLabel>\r\n            <FormControl name=\"quantity\" placeholder=\"Quantity\" />\r\n          </FormGroup>\r\n        </>\r\n      );\r\n    }\r\n    if (site === 'target') {\r\n      return (\r\n        <>\r\n          <FormGroup style={{ marginLeft: '5%' }}>\r\n            <ControlLabel>SKU</ControlLabel>\r\n            <FormControl\r\n              style={{ width: 'auto' }}\r\n              name=\"sku\"\r\n              placeholder=\"SKU\"\r\n            />\r\n          </FormGroup>\r\n          <FormGroup style={{ marginLeft: '5%' }}>\r\n            <ControlLabel>Mode</ControlLabel>\r\n            <FormControl\r\n              name=\"mode\"\r\n              placeholder=\"Mode\"\r\n              accepter={InputPicker}\r\n              data={this.props.state.siteToModes[site] ?? []}\r\n            />\r\n          </FormGroup>\r\n          <FormGroup style={{ marginLeft: '5%' }}>\r\n            <ControlLabel>Session</ControlLabel>\r\n            <FormControl\r\n              name=\"session\"\r\n              data={this.getSessionsArray(site)}\r\n              accepter={InputPicker}\r\n            />\r\n          </FormGroup>\r\n          <FormGroup style={{ position: 'absolute', top: '0%', left: '60%' }}>\r\n            <ControlLabel>Proxy</ControlLabel>\r\n            <FormControl\r\n              name=\"proxy\"\r\n              data={this.getProxiesArray()}\r\n              placeholder=\"Proxy\"\r\n              accepter={InputPicker}\r\n            />\r\n          </FormGroup>\r\n          <FormGroup style={{ position: 'absolute', top: '30%', left: '60%' }}>\r\n            <ControlLabel>Task Quantity</ControlLabel>\r\n            <FormControl name=\"quantity\" placeholder=\"Quantity\" />\r\n          </FormGroup>\r\n        </>\r\n      );\r\n    }\r\n\r\n    if (site === 'bestbuy') {\r\n      return (\r\n        <>\r\n          <FormGroup style={{ marginLeft: '5%' }}>\r\n            <ControlLabel>SKU</ControlLabel>\r\n            <FormControl\r\n              style={{ width: 'auto' }}\r\n              name=\"sku\"\r\n              placeholder=\"SKU\"\r\n            />\r\n          </FormGroup>\r\n          <FormGroup style={{ marginLeft: '5%' }}>\r\n            <ControlLabel>Mode</ControlLabel>\r\n            <FormControl\r\n              name=\"mode\"\r\n              placeholder=\"Mode\"\r\n              accepter={InputPicker}\r\n              data={this.props.state.siteToModes[site] ?? []}\r\n            />\r\n          </FormGroup>\r\n          <FormGroup style={{ position: 'absolute', top: '0%', left: '60%' }}>\r\n            <ControlLabel>Proxy</ControlLabel>\r\n            <FormControl\r\n              name=\"proxy\"\r\n              data={this.getProxiesArray()}\r\n              placeholder=\"Proxy\"\r\n              accepter={InputPicker}\r\n            />\r\n          </FormGroup>\r\n          <FormGroup style={{ position: 'absolute', top: '44%', left: '60%' }}>\r\n            <ControlLabel>Task Quantity</ControlLabel>\r\n            <FormControl name=\"quantity\" placeholder=\"Quantity\" />\r\n          </FormGroup>\r\n        </>\r\n      );\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { checkedKeys } = this.props.state;\r\n    const data = this.props.state.tasks;\r\n    let checked = false;\r\n    let indeterminate = false;\r\n\r\n    if (checkedKeys.length === data.length) {\r\n      checked = true;\r\n    } else if (checkedKeys.length === 0) {\r\n      checked = false;\r\n    } else if (checkedKeys.length > 0 && checkedKeys.length < data.length) {\r\n      indeterminate = true;\r\n    }\r\n    const { formValue, taskGroupForm } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <div>\r\n          <Modal show={this.state.show} onHide={this.close} size=\"md\">\r\n            <Modal.Header>\r\n              <Modal.Title>\r\n                Create {this.state.taskGroup ? 'Task Group' : 'Tasks'}\r\n              </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n              {!this.state.taskGroup ? (\r\n                <Form\r\n                  fluid\r\n                  onChange={(formValue) => {\r\n                    this.setState({ formValue });\r\n                    console.log(formValue);\r\n                  }}\r\n                  formValue={formValue}\r\n                >\r\n                  {this.returnModal(\r\n                    this.props.state.taskGroups.filter(\r\n                      (item) => item?.id === this.state?.selectedTaskGroup\r\n                    )[0]?.store\r\n                  )}\r\n                  {/* <FormGroup style={{ marginLeft: '5%' }}>\r\n                    <ControlLabel>Site</ControlLabel>\r\n                    <FormControl\r\n                      name=\"Site\"\r\n                      placeholder=\"Site\"\r\n                      data={this.props.state.sites}\r\n                      accepter={InputPicker}\r\n                    />\r\n                  </FormGroup>\r\n                  <FormGroup style={{ marginLeft: '5%' }}>\r\n                    <ControlLabel>Monitor Input</ControlLabel>\r\n                    <FormControl\r\n                      style={{ width: 'auto' }}\r\n                      name=\"MonitorInput\"\r\n                      type=\"text\"\r\n                      placeholder=\"Keywords\"\r\n                    />\r\n                  </FormGroup>\r\n                  <FormGroup style={{ marginLeft: '5%' }}>\r\n                    <ControlLabel>Profile</ControlLabel>\r\n                    <FormControl\r\n                      name=\"Profile\"\r\n                      placeholder=\"Profile\"\r\n                      accepter={InputPicker}\r\n                      data={this.arrayToLabel(this.props.state.profiles)}\r\n                    />\r\n                  </FormGroup>\r\n                  <FormGroup style={{ marginLeft: '5%' }}>\r\n                    <ControlLabel>Size</ControlLabel>\r\n                    <FormControl\r\n                      name=\"Size\"\r\n                      placeholder=\"Size\"\r\n                      accepter={InputPicker}\r\n                    />\r\n                  </FormGroup>\r\n\r\n                  <FormGroup\r\n                    style={{ position: 'absolute', top: '0', left: '60%' }}\r\n                  >\r\n                    <ControlLabel>Mode</ControlLabel>\r\n                    <FormControl\r\n                      name=\"Mode\"\r\n                      placeholder=\"Mode\"\r\n                      accepter={InputPicker}\r\n                      data={this.props.state.siteToModes[formValue.site] ?? []}\r\n                    />\r\n                  </FormGroup>\r\n\r\n                  <FormGroup\r\n                    style={{ position: 'absolute', top: '22%', left: '60%' }}\r\n                  >\r\n                    <ControlLabel>Account</ControlLabel>\r\n                    <FormControl\r\n                      name=\"Account\"\r\n                      placeholder=\"Optional (None)\"\r\n                      accepter={InputPicker}\r\n                    />\r\n                  </FormGroup>\r\n\r\n                  <FormGroup\r\n                    style={{ position: 'absolute', top: '45%', left: '60%' }}\r\n                  >\r\n                    <ControlLabel>Proxy</ControlLabel>\r\n                    <FormControl\r\n                      name=\"Proxy\"\r\n                      placeholder=\"Proxy\"\r\n                      accepter={InputPicker}\r\n                    />\r\n                  </FormGroup>\r\n\r\n                  <FormGroup\r\n                    style={{ position: 'absolute', top: '68%', left: '60%' }}\r\n                  >\r\n                    <ControlLabel>Task Quantity</ControlLabel>\r\n                    <FormControl\r\n                      name=\"Quantity\"\r\n                      placeholder=\"Proxy\"\r\n                      accepter={InputPicker}\r\n                    />\r\n                  </FormGroup> */}\r\n                </Form>\r\n              ) : (\r\n                <Form\r\n                  fluid\r\n                  onChange={(taskGroupForm) => {\r\n                    this.setState({ taskGroupForm });\r\n                    console.log(taskGroupForm);\r\n                  }}\r\n                  formValue={taskGroupForm}\r\n                >\r\n                  <FormGroup style={{ marginLeft: '5%' }}>\r\n                    <ControlLabel>Site</ControlLabel>\r\n                    <FormControl\r\n                      name=\"store\"\r\n                      placeholder=\"Site\"\r\n                      data={this.props.state.sites}\r\n                      accepter={InputPicker}\r\n                    />\r\n                  </FormGroup>\r\n\r\n                  <FormGroup\r\n                    style={{ position: 'absolute', top: '0', left: '60%' }}\r\n                  >\r\n                    <ControlLabel>Group Name</ControlLabel>\r\n                    <FormControl name=\"groupName\" placeholder=\"Name\" />\r\n                  </FormGroup>\r\n                </Form>\r\n              )}\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n              <Button\r\n                onClick={this.close}\r\n                style={{\r\n                  color: 'white',\r\n                  border: '3px solid white',\r\n                  marginRight: '1rem',\r\n                }}\r\n                appearance=\"ghost\"\r\n              >\r\n                Cancel\r\n              </Button>\r\n              <Button\r\n                onClick={(event) =>\r\n                  !this.state.taskGroup\r\n                    ? this.createTasks(event)\r\n                    : this.sendTaskGroup(event)\r\n                }\r\n                style={{\r\n                  color: 'springgreen',\r\n                  border: '3px solid springgreen',\r\n                }}\r\n                appearance=\"ghost\"\r\n              >\r\n                Create Tasks\r\n              </Button>\r\n            </Modal.Footer>\r\n          </Modal>\r\n        </div>\r\n        <div\r\n          style={{\r\n            position: 'absolute',\r\n            top: '17px',\r\n            left: '80px',\r\n          }}\r\n        >\r\n          <Clock\r\n            format=\"HH:mm:ss\"\r\n            interval={1000}\r\n            ticking\r\n            style={{ position: 'absolute', top: '0', fontSize: '1rem' }}\r\n          />\r\n        </div>\r\n        <div\r\n          style={{\r\n            position: 'absolute',\r\n            top: '40px',\r\n            height: '80%',\r\n            width: '75%',\r\n            right: '0',\r\n            float: 'right',\r\n            fontSize: '22px',\r\n          }}\r\n        >\r\n          <Avatar\r\n            style={{ marginRight: '1rem', top: '0.5rem', position: 'absolute' }}\r\n            size=\"lg\"\r\n            src={\r\n              this.props.state.siteToImages[\r\n                this.props.state.taskGroups.filter(\r\n                  (item) => item?.id === this.state?.selectedTaskGroup\r\n                )[0]?.store\r\n              ]\r\n            }\r\n          />\r\n          <span\r\n            style={{\r\n              marginLeft: '4.75rem',\r\n              top: '0rem',\r\n              position: 'absolute',\r\n            }}\r\n          >\r\n            {\r\n              this.props.state.taskGroups.filter(\r\n                (item) => item?.id === this.state?.selectedTaskGroup\r\n              )[0]?.groupName\r\n            }{' '}\r\n            Task Group | Task Count:{' '}\r\n            {\r\n              this.props.state.tasks.filter(\r\n                (item) => item?.taskGroupID === this.state?.selectedTaskGroup\r\n              ).length\r\n            }{' '}\r\n            Tasks\r\n          </span>\r\n          <span\r\n            style={{\r\n              fontSize: '16px',\r\n              marginLeft: '4.75rem',\r\n              top: '3rem',\r\n              position: 'absolute',\r\n            }}\r\n          >\r\n            {checkedKeys.length} Tasks Selected\r\n            <Input\r\n              style={{\r\n                float: 'right',\r\n                position: 'absolute',\r\n                left: '120%',\r\n                top: '-24%',\r\n                width: '172%',\r\n                border: '3px ​solid #3c3f4',\r\n              }}\r\n              onChange={this.search}\r\n              placeholder=\"Search\"\r\n            />\r\n          </span>\r\n          <div style={{ position: 'absolute', top: '10px', right: '60px' }}>\r\n            <InputGroup style={{ width: '6rem' }}>\r\n              <InputGroup.Addon>\r\n                <Icon icon=\"check-circle\" style={{ color: 'springgreen' }} />\r\n              </InputGroup.Addon>\r\n              <Input value=\"0\" disabled />\r\n            </InputGroup>\r\n          </div>\r\n          <div style={{ position: 'absolute', top: '10px', right: '220px' }}>\r\n            <InputGroup style={{ width: '6rem' }}>\r\n              <InputGroup.Addon>\r\n                <Icon icon=\"shopping-cart\" style={{ color: 'mediumpurple' }} />\r\n              </InputGroup.Addon>\r\n              <Input value=\"0\" disabled />\r\n            </InputGroup>\r\n          </div>\r\n          <div style={{ position: 'absolute', top: '10px', right: '380px' }}>\r\n            <InputGroup style={{ width: '6rem' }}>\r\n              <InputGroup.Addon>\r\n                <Icon icon=\"warning\" style={{ color: 'crimson' }} />\r\n              </InputGroup.Addon>\r\n              <Input value=\"0\" disabled />\r\n            </InputGroup>\r\n          </div>\r\n        </div>\r\n        <div className=\"Tasks\">\r\n          <div\r\n            style={{\r\n              position: 'absolute',\r\n              top: '130px',\r\n              right: '20px',\r\n              height: '80%',\r\n              width: '75%',\r\n              float: 'right',\r\n            }}\r\n          >\r\n            <Button\r\n              id=\"create-tasks-btn\"\r\n              style={{ borderWidth: 2, marginTop: '10px' }}\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n              onClick={(e) => {\r\n                this.setState((prevState) => ({\r\n                  ...prevState,\r\n                  taskGroup: false,\r\n                }));\r\n                this.open();\r\n              }}\r\n            >\r\n              + Create Tasks\r\n            </Button>\r\n            <Button\r\n              id=\"start-all-btn\"\r\n              style={{ borderWidth: 2, marginTop: '10px' }}\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={(e) =>\r\n                checkedKeys.length > 0\r\n                  ? this.startAllTasks(checkedKeys)\r\n                  : this.startAllTasks('all')\r\n              }\r\n            >\r\n              Start {checkedKeys.length > 0 ? 'selected' : 'all'}\r\n            </Button>\r\n            <Button\r\n              id=\"stop-all-btn\"\r\n              variant=\"contained\"\r\n              justify=\"flex-end\"\r\n              color=\"primary\"\r\n              onClick={(e) =>\r\n                checkedKeys.length > 0\r\n                  ? this.stopAllTasks(checkedKeys)\r\n                  : this.stopAllTasks('all')\r\n              }\r\n              style={{ borderWidth: 2, marginTop: '10px' }}\r\n            >\r\n              Stop {checkedKeys.length > 0 ? 'selected' : 'all'}\r\n            </Button>\r\n            <Button\r\n              id=\"edit-all-btn\"\r\n              variant=\"contained\"\r\n              justify=\"flex-end\"\r\n              color=\"primary\"\r\n              style={{ borderWidth: 2, marginTop: '10px' }}\r\n            >\r\n              Edit {checkedKeys.length > 0 ? 'selected' : 'all'}\r\n            </Button>\r\n\r\n            <Button\r\n              id=\"delete-all-btn\"\r\n              variant=\"contained\"\r\n              justify=\"flex-end\"\r\n              color=\"primary\"\r\n              onClick={(event) => {\r\n                checkedKeys.length >= 1\r\n                  ? this.deleteSomeTasks(event, checkedKeys)\r\n                  : this.deleteTasks(event, this.state.selectedTaskGroup);\r\n              }}\r\n              style={{ borderWidth: 2, marginTop: '10px' }}\r\n            >\r\n              Delete {checkedKeys.length > 0 ? 'selected' : 'all'}\r\n            </Button>\r\n          </div>\r\n          <div\r\n            style={{\r\n              position: 'absolute',\r\n              top: '190px',\r\n              right: '10px',\r\n              width: '75%',\r\n            }}\r\n          >\r\n            {/* <ContextMenuTrigger preventClose={false} id=\"SIMPLE\"> */}\r\n              <Table\r\n                height={this.height()}\r\n                data={\r\n                  !this.props.state.search\r\n                    ? this.props.state.tasks.filter(\r\n                        (item) =>\r\n                          item.taskGroupID === this.state.selectedTaskGroup\r\n                      )\r\n                    : this.props.state.filteredTasks.filter(\r\n                        (item) =>\r\n                          item.taskGroupID === this.state.selectedTaskGroup\r\n                      )\r\n                }\r\n                // data={this.props.state.tasks}\r\n                virtualized\r\n                // onRowClick={(rowData) => {\r\n                //   console.log(rowData.id);\r\n                // }}\r\n                shouldUpdateScroll={false}\r\n                renderEmpty={() => (\r\n                  <div\r\n                    style={{\r\n                      fontSize: '20px',\r\n                      top: '40%',\r\n                      width: '100%',\r\n                      textAlign: 'center',\r\n                      display: 'block',\r\n                      lineHeight: '40px',\r\n                      position: 'absolute',\r\n                      fontWeight: 'bold',\r\n                    }}\r\n                  >\r\n                    Create Tasks to Get Started 😎\r\n                  </div>\r\n                )}\r\n              >\r\n                <Column width={50} align=\"center\">\r\n                  <HeaderCell style={{ padding: 0 }}>\r\n                    <div style={{ lineHeight: '40px' }}>\r\n                      <Checkbox\r\n                        inline\r\n                        checked={checked}\r\n                        indeterminate={indeterminate}\r\n                        onChange={this.handleCheckAll}\r\n                      />\r\n                    </div>\r\n                  </HeaderCell>\r\n                  <CheckCell\r\n                    dataKey=\"id\"\r\n                    checkedKeys={checkedKeys}\r\n                    onChange={this.handleCheck}\r\n                  />\r\n                </Column>\r\n                <Column width={120} align=\"center\">\r\n                  <HeaderCell>ID</HeaderCell>\r\n                  <Cell dataKey=\"id\" />\r\n                </Column>\r\n\r\n                <Column width={130}>\r\n                  <HeaderCell>Store</HeaderCell>\r\n                  <Cell dataKey=\"store\" />\r\n                </Column>\r\n\r\n                <Column width={180}>\r\n                  <HeaderCell>Product</HeaderCell>\r\n                  <Cell dataKey=\"sku\" />\r\n                </Column>\r\n\r\n                <Column width={100}>\r\n                  <HeaderCell>Proxy</HeaderCell>\r\n                  <Cell dataKey=\"proxyName\" />\r\n                </Column>\r\n\r\n                <Column width={150}>\r\n                  <HeaderCell>Mode</HeaderCell>\r\n                  <Cell dataKey=\"mode\" />\r\n                </Column>\r\n\r\n                <Column width={220}>\r\n                  <HeaderCell>Status</HeaderCell>\r\n                  <Cell>\r\n                    {(rowData) => {\r\n                      return (\r\n                        <span\r\n                          style={{\r\n                            color: `${this.taskStatusColor(\r\n                              this.props.state.statuses[rowData.id]\r\n                            )}`,\r\n                          }}\r\n                        >\r\n                          {this.props.state.statuses[rowData.id]\r\n                            ? this.props.state.statuses[rowData.id]\r\n                            : 'Idle'}\r\n                        </span>\r\n                      );\r\n                    }}\r\n                  </Cell>\r\n                </Column>\r\n                <Column width={120} fixed=\"right\">\r\n                  <HeaderCell>Actions</HeaderCell>\r\n                  <Cell>\r\n                    {(rowData) => {\r\n                      return (\r\n                        <span>\r\n                          <Icon\r\n                            icon=\"trash2\"\r\n                            size=\"lg\"\r\n                            style={{ color: 'crimson', paddingRight: '20px' }}\r\n                            onClick={(e) =>\r\n                              this.deleteSomeTasks(e, [rowData.id])\r\n                            }\r\n                          />\r\n                          <Icon\r\n                            icon=\"pencil\"\r\n                            size=\"lg\"\r\n                            style={{ color: 'white', paddingRight: '20px' }}\r\n                            // onClick={(e) => {\r\n                            //   datadogLogs.logger.info('Checkout', {\r\n                            //     name: 'Amazon',\r\n                            //     service: 'Aladdin AIO',\r\n                            //     env: 'dev',\r\n                            //     sku: 'BHA32SDAS',\r\n                            //     site: 'Bestbuy',\r\n                            //     mode: 'Fast',\r\n                            //   });\r\n                            // }}\r\n                          />\r\n                          <Icon\r\n                            icon={this.props.state.activeTasks.includes(rowData.id) ? 'stop2' : 'play'}\r\n                            size=\"lg\"\r\n                            style={{\r\n                              color: `${\r\n                                this.props.state.activeTasks.includes(rowData.id) ? 'white' : 'springgreen'\r\n                              }`,\r\n                              paddingRight: '5px',\r\n                            }}\r\n                            onClick={(e) => this.startTask(rowData)}\r\n                          />\r\n                        </span>\r\n                      );\r\n                    }}\r\n                  </Cell>\r\n                </Column>\r\n              </Table>\r\n            {/* </ContextMenuTrigger> */}\r\n            {/* <ContextMenu hideOnLeave id=\"SIMPLE\">\r\n              <MenuItem onClick={this.handleClick} data={{ item: 'item 1' }}>\r\n                <Icon icon=\"play\" style={{ color: 'springgreen' }} /> &nbsp;\r\n                Start\r\n              </MenuItem>\r\n              <MenuItem onClick={this.handleClick} data={{ item: 'item 2' }}>\r\n                <Icon icon=\"stop\" /> &nbsp; Stop\r\n              </MenuItem>\r\n              <MenuItem divider />\r\n              <MenuItem onClick={this.handleClick} data={{ item: 'item 3' }}>\r\n                <Icon icon=\"copy\" /> &nbsp; Duplicate\r\n              </MenuItem>\r\n              <MenuItem onClick={this.handleClick} data={{ item: 'item 4' }}>\r\n                <Icon icon=\"edit2\" style={{ color: 'mediumpurple' }} /> &nbsp;\r\n                Edit\r\n              </MenuItem>\r\n              <MenuItem onClick={this.handleClick} data={{ item: 'item 5' }}>\r\n                <Icon icon=\"trash2\" style={{ color: 'crimson' }} /> &nbsp;\r\n                Delete\r\n              </MenuItem>\r\n            </ContextMenu> */}\r\n          </div>\r\n          <div\r\n            className=\"TaskGroup\"\r\n            style={{\r\n              width: '18%',\r\n              position: 'absolute',\r\n              top: '-25px',\r\n              left: '4.5%',\r\n              overflowY: 'scroll',\r\n              display: 'block',\r\n              height: '88%',\r\n              marginTop: '80px',\r\n              overflowX: 'hidden',\r\n            }}\r\n          >\r\n            <div>\r\n              <>\r\n                {' '}\r\n                <div\r\n                  style={{\r\n                    fontSize: '20px',\r\n                    margin: 'auto',\r\n                    textAlign: 'center',\r\n                  }}\r\n                >\r\n                  Task Groups\r\n                </div>\r\n                <RsuiteButton\r\n                  style={{ marginBottom: '2rem', left: '20%' }}\r\n                  size=\"lg\"\r\n                  color=\"blue\"\r\n                  onClick={this.createTaskGroup}\r\n                >\r\n                  <Icon icon=\"plus-square\" /> Create Group\r\n                </RsuiteButton>\r\n              </>\r\n              {this.props.state?.taskGroups.length ? (\r\n                this.props.state?.taskGroups.map((row) => (\r\n                  <div\r\n                    style={{\r\n                      backgroundColor: 'rgb(41, 44, 62)',\r\n                      marginBottom: '10px',\r\n                      float: 'left',\r\n                      width: '97%',\r\n                      height: '50%',\r\n                      border: `${\r\n                        this.state?.selectedTaskGroup === row?.id\r\n                          ? '2px solid #92ade0'\r\n                          : 'none'\r\n                      }`,\r\n                    }}\r\n                    key={row?.id}\r\n                    onClick={(e) => this.setSelectedTaskgroup(row?.id)}\r\n                  >\r\n                    <div>\r\n                      <Panel shaded bordered>\r\n                        <div style={{ float: 'right' }}>\r\n                          <Dropdown\r\n                            placement=\"leftStart\"\r\n                            renderTitle={() => {\r\n                              return (\r\n                                <IconButton\r\n                                  style={{\r\n                                    float: 'right',\r\n                                    position: 'static',\r\n                                    background: 'transparent',\r\n                                  }}\r\n                                  size=\"lg\"\r\n                                  icon={<Icon icon=\"ellipsis-h\" />}\r\n                                />\r\n                              );\r\n                            }}\r\n                          >\r\n                            <Dropdown.Item\r\n                              onSelect={(e) => this.deleteTaskGroup(e, row?.id)}\r\n                            >\r\n                              <Icon icon=\"trash2\" /> Delete Group\r\n                            </Dropdown.Item>\r\n                            {/* <Dropdown.Item>\r\n                              <Icon icon=\"group\" /> Rename Group\r\n                            </Dropdown.Item> */}\r\n                          </Dropdown>\r\n                        </div>\r\n                        <div>\r\n                          <div style={{ display: '-webkit-box' }}>\r\n                            <img\r\n                              alt=\"\"\r\n                              width=\"40\"\r\n                              src={this.props.state.siteToImages[row?.store]}\r\n                            />\r\n\r\n                            <Typography\r\n                              style={{ marginTop: '3%', marginLeft: '5%' }}\r\n                              component=\"h2\"\r\n                              variant=\"subtitle1\"\r\n                            >\r\n                              {row?.groupName}\r\n                            </Typography>\r\n                          </div>\r\n                        </div>\r\n\r\n                        {/* <Chip\r\n                          size=\"small\"\r\n                          color=\"secondary\"\r\n                          style={{\r\n                            margin: '5px 2px 3px 2px',\r\n                            backgroundColor: '#e7ff00',\r\n                            color: 'black',\r\n                          }}\r\n                          icon={<ShoppingCartIcon />}\r\n                          label=\"0\"\r\n                        />\r\n                        <Chip\r\n                          size=\"small\"\r\n                          color=\"secondary\"\r\n                          style={{\r\n                            margin: '5px 2px 3px 2px',\r\n                            backgroundColor: '#1fcc61',\r\n                            color: 'black',\r\n                          }}\r\n                          icon={<CheckCircleIcon />}\r\n                          label=\"0\"\r\n                        />\r\n                        <Chip\r\n                          size=\"small\"\r\n                          color=\"secondary\"\r\n                          style={{\r\n                            margin: '5px 2px 3px 2px',\r\n                            backgroundColor: '#cd5161',\r\n                            color: 'black',\r\n                          }}\r\n                          icon={<CloseIcon />}\r\n                          label=\"0\"\r\n                        /> */}\r\n                      </Panel>\r\n                    </div>\r\n                  </div>\r\n                ))\r\n              ) : (\r\n                <> </>\r\n              )}\r\n            </div>\r\n            <div />\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <span\r\n            style={{\r\n              bottom: '20px',\r\n              position: 'absolute',\r\n              color: 'springgreen',\r\n              left: '4rem',\r\n            }}\r\n          >\r\n            <Icon icon=\"circle\" /> &nbsp; Connected\r\n          </span>\r\n          <span\r\n            style={{\r\n              bottom: '20px',\r\n              position: 'absolute',\r\n              color: 'springgreen',\r\n              left: '12rem',\r\n            }}\r\n          >\r\n            <Icon icon=\"code-fork\" /> &nbsp; Version 1.0.1\r\n          </span>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({ state });\r\nexport default connect(mapStateToProps)(TasksTable);\r\n","import React from 'react';\r\nimport { InputPicker, Input, InputGroup, Panel, Avatar } from 'rsuite';\r\nimport Clock from 'react-live-clock';\r\nimport { Button } from '@material-ui/core';\r\nimport cogoToast from 'cogo-toast';\r\nimport { connect } from 'react-redux';\r\nimport $ from 'jquery';\r\n\r\nconst childProcess = require('child_process');\r\nconst { ipcRenderer } = require('electron');\r\n\r\nconst styles = {\r\n  width: 360,\r\n  marginBottom: 10,\r\n  marginTop: 10,\r\n};\r\n\r\nconst styles1 = {\r\n  width: 700,\r\n  marginBottom: 10,\r\n  marginTop: 10,\r\n};\r\n\r\nclass Settings extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.testWebhook = this.testWebhook.bind(this);\r\n    this.saveSettings = this.saveSettings.bind(this);\r\n    this.deactivate = this.deactivate.bind(this);\r\n    this.onTodoChange = this.onTodoChange.bind(this);\r\n    this.state = {\r\n    };\r\n  }\r\n\r\n  testWebhook(event, arg) {\r\n    event.preventDefault();\r\n    ipcRenderer.send('test:webhook', arg);\r\n    cogoToast.success('Webhook Sent Successfully', {\r\n      position: 'top-right',\r\n      heading: 'Success',\r\n    });\r\n  }\r\n\r\n  onTodoChange(name, value) {\r\n    this.setState((prevState) => ({\r\n      ...prevState,\r\n      [name]: value,\r\n    }));\r\n  }\r\n\r\n  getSettings() {\r\n    const settings = ipcRenderer.sendSync('get:settings') || {\r\n      RetryDelays: 2222,\r\n      MonitorDelays: 3333,\r\n      WebhookURL: '',\r\n    };\r\n    console.log(settings);\r\n    this.setState(settings);\r\n  }\r\n\r\n  getProfiles = () => {\r\n    const profiles = ipcRenderer.sendSync('get:profiles');\r\n    this.props.dispatch({ type: 'update', obj: { profiles } });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getSettings();\r\n    this.getProfiles();\r\n  }\r\n\r\n  saveSettings(event) {\r\n    event.preventDefault();\r\n    console.log(this.state);\r\n    const arg = this.state;\r\n    ipcRenderer.send('save:settings', arg);\r\n    cogoToast.success('Saved Settings', {\r\n      position: 'top-right',\r\n      heading: 'Success',\r\n    });\r\n  }\r\n\r\n  deactivate(event) {\r\n    event.preventDefault();\r\n    ipcRenderer.send('deactivate');\r\n    cogoToast.success('Deactivated Your Instance', {\r\n      position: 'top-right',\r\n      heading: 'Success',\r\n    });\r\n  }\r\n\r\n  openLogs() {\r\n    ipcRenderer.send('open:logs');\r\n  }\r\n\r\n  render() {\r\n    const { RetryDelays, MonitorDelays, WebhookURL } = this.state;\r\n    return (\r\n      <div\r\n        className=\"SettingsPage\"\r\n        style={{\r\n          width: '90%',\r\n          height: '100%',\r\n          position: 'absolute',\r\n          top: '50px',\r\n          left: '8%',\r\n        }}\r\n      >\r\n        <Button\r\n          id=\"import-btn\"\r\n          style={{ borderWidth: 2, float: 'right' }}\r\n          variant=\"outlined\"\r\n          color=\"secondary\"\r\n        >\r\n          Import All\r\n        </Button>\r\n        <Button\r\n          id=\"export-btn\"\r\n          style={{ borderWidth: 2, float: 'right' }}\r\n          variant=\"outlined\"\r\n          color=\"primary\"\r\n        >\r\n          Export All\r\n        </Button>\r\n        <Button\r\n          id=\"save-btn\"\r\n          variant=\"outlined\"\r\n          justify=\"flex-end\"\r\n          color=\"primary\"\r\n          onClick={(event) => this.saveSettings(event)}\r\n          style={{ borderWidth: 2, float: 'right' }}\r\n        >\r\n          Save\r\n        </Button>\r\n        <Button\r\n          id=\"open-logs-btn\"\r\n          variant=\"outlined\"\r\n          justify=\"flex-end\"\r\n          color=\"primary\"\r\n          onClick={this.openLogs}\r\n          style={{ borderWidth: 2, float: 'right' }}\r\n        >\r\n          Open Logs\r\n        </Button>\r\n        <Button\r\n          id=\"deactivate-btn\"\r\n          variant=\"outlined\"\r\n          justify=\"flex-end\"\r\n          color=\"primary\"\r\n          onClick={(event) => this.deactivate(event)}\r\n          style={{ borderWidth: 2, float: 'right' }}\r\n        >\r\n          Deactivate\r\n        </Button>\r\n\r\n        <h5>Settings</h5>\r\n\r\n        <Clock\r\n          format=\"HH:mm:ss\"\r\n          interval={1000}\r\n          ticking\r\n          style={{ position: 'absolute', top: '-25px', fontSize: '1rem' }}\r\n        />\r\n\r\n        <Panel\r\n          header=\"License\"\r\n          shaded\r\n          collapsible\r\n          defaultExpanded\r\n          style={{ marginTop: '5%', width: '35%' }}\r\n        >\r\n          <h6 style={{ marginBottom: '10px' }}>Discord</h6>\r\n          <div>\r\n            <Avatar\r\n              circle\r\n              size=\"lg\"\r\n              style={{ marginBottom: '10px' }}\r\n              src={this.props.state?.discordAvatar}\r\n              alt=\"RU\"\r\n            />\r\n            <h6\r\n              style={{\r\n                float: 'right',\r\n                fontWeight: '800',\r\n                fontSize: '15px',\r\n                margin: 'auto',\r\n                width: '90%',\r\n                marginTop: '5%',\r\n                marginRight: '-11%',\r\n              }}\r\n            >\r\n              {this.state?.username}\r\n            </h6>\r\n          </div>\r\n\r\n          <h6 style={{ marginBottom: '10px' }}>\r\n            License Key: {this.state?.LicenseKey}\r\n          </h6>\r\n          {/* <h6>Type: Lifetime Key</h6>\r\n          <h6>Expiry: Never</h6> */}\r\n        </Panel>\r\n\r\n        <Panel\r\n          header=\"Miscellaneous Settings\"\r\n          shaded\r\n          collapsible\r\n          defaultExpanded\r\n          style={{ position: 'absolute', top: '45%', width: '35%' }}\r\n        >\r\n          Discord Webhook\r\n          <InputGroup style={{ marginTop: '3%', marginBottom: '3%' }}>\r\n            <Input\r\n              id=\"WebhookURL\"\r\n              value={WebhookURL}\r\n              onChange={(event) =>\r\n                this.onTodoChange('WebhookURL', $('#WebhookURL').val())\r\n              }\r\n            />\r\n            <InputGroup.Button\r\n              onClick={(event) =>\r\n                this.testWebhook(event, $('#WebhookURL').val())\r\n              }\r\n            >\r\n              Test\r\n            </InputGroup.Button>\r\n          </InputGroup>\r\n          <h6>Delays</h6>\r\n          <Input\r\n            id=\"RetryDelays\"\r\n            name=\"RetryDelays\"\r\n            value={RetryDelays}\r\n            style={styles}\r\n            placeholder=\"Retry Delays\"\r\n            onChange={(event) =>\r\n              this.onTodoChange('RetryDelays', $('#RetryDelays').val())\r\n            }\r\n          />\r\n          <Input\r\n            id=\"MonitorDelays\"\r\n            name=\"MonitorDelays\"\r\n            value={MonitorDelays}\r\n            style={styles}\r\n            placeholder=\"Monitor Delays\"\r\n            onChange={(event) =>\r\n              this.onTodoChange('MonitorDelays', $('#MonitorDelays').val())\r\n            }\r\n          />\r\n        </Panel>\r\n\r\n        <Panel\r\n          header=\"Quick Task Config\"\r\n          shaded\r\n          defaultExpanded\r\n          collapsible\r\n          style={{\r\n            position: 'absolute',\r\n            top: '10%',\r\n            left: '50%',\r\n            width: '40%',\r\n          }}\r\n        >\r\n          Account Email\r\n          <InputGroup style={styles}>\r\n            <Input />\r\n          </InputGroup>\r\n          Account Password\r\n          <InputGroup style={styles}>\r\n            <Input />\r\n          </InputGroup>\r\n          Profile\r\n          <InputPicker\r\n            style={styles1}\r\n            data={data}\r\n            placeholder=\"Select Profile\"\r\n          />\r\n          Proxies\r\n          <InputPicker\r\n            style={styles1}\r\n            data={data}\r\n            placeholder=\"Select Proxies\"\r\n          />\r\n          Size\r\n          <InputPicker style={styles1} data={data} placeholder=\"Select Sizes\" />\r\n          Mode\r\n          <InputPicker style={styles1} data={data} placeholder=\"Select Mode\" />\r\n        </Panel>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst data = [\r\n  // {\r\n  //   label: 'Main Debit',\r\n  //   value: 'Eugenia',\r\n  //   role: 'Master',\r\n  // },\r\n  // {\r\n  //   label: 'Capital One',\r\n  //   value: 'Kariane',\r\n  //   role: 'Master',\r\n  // },\r\n  // {\r\n  //   label: 'Cashapp',\r\n  //   value: 'Louisa',\r\n  //   role: 'Master',\r\n  // },\r\n  // {\r\n  //   label: 'Eno',\r\n  //   value: 'Marty',\r\n  //   role: 'Master',\r\n  // },\r\n  // {\r\n  //   label: 'Privacy',\r\n  //   value: 'Kenya',\r\n  //   role: 'Master',\r\n  // },\r\n  // {\r\n  //   label: 'Slut',\r\n  //   value: 'Hal',\r\n  //   role: 'Developer',\r\n  // },\r\n  // {\r\n  //   label: 'Julius',\r\n  //   value: 'Julius',\r\n  //   role: 'Developer',\r\n  // },\r\n];\r\n\r\nconst mapStateToProps = (state) => ({ state });\r\nexport default connect(mapStateToProps)(Settings);\r\n","import React from 'react';\r\nimport Clock from 'react-live-clock';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { Icon, Panel, Avatar, FlexboxGrid, List } from 'rsuite';\r\nimport { connect } from 'react-redux';\r\nimport cogoToast from 'cogo-toast';\r\n\r\nimport { Doughnut } from 'react-chartjs-2';\r\n\r\nconst { ipcRenderer } = require('electron');\r\n\r\nconst DoughnutData = {\r\n  labels: ['Amazon', 'Target', 'Bestbuy'],\r\n  datasets: [\r\n    {\r\n      label: '# of Votes',\r\n      data: [8, 10, 3],\r\n      backgroundColor: ['#f72585', '#480ca8', '#4895ef'],\r\n      borderColor: [\r\n        'rgba(255, 99, 132, 1)',\r\n        'rgba(54, 162, 235, 1)',\r\n        'rgba(255, 206, 86, 1)',\r\n      ],\r\n      borderWidth: 1,\r\n    },\r\n  ],\r\n};\r\n\r\n// const data = [\r\n// ];\r\nconst styleCenter = {\r\n  display: 'flex',\r\n  justifyContent: 'center',\r\n  alignItems: 'center',\r\n  height: '60px',\r\n};\r\n\r\nconst slimText = {\r\n  fontSize: '0.666em',\r\n  color: '#97969B',\r\n  fontWeight: 'lighter',\r\n  paddingBottom: 5,\r\n};\r\n\r\nconst titleStyle = {\r\n  paddingBottom: 5,\r\n  whiteSpace: 'nowrap',\r\n  fontWeight: 500,\r\n};\r\n\r\nclass Dashboard extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  getAnalytics = () => {\r\n    const analytics = ipcRenderer.sendSync('get:analytics');\r\n    this.props.dispatch({ type: 'update', obj: { analytics } });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getAnalytics();\r\n    // if (!JSON.stringify(this.props.state.announcements).includes('pdate')) {\r\n    //   this.fetchAnnouncements();\r\n    // }\r\n  }\r\n\r\n  async fetchAnnouncements() {\r\n    const response = await fetch(\r\n      'https://aladdin-aio.com/api/announcements'\r\n    );\r\n    const responseJSON = await response.json();\r\n    this.announcements = responseJSON.announcements;\r\n    this.props.dispatch({\r\n      type: 'update',\r\n      obj: { announcements: responseJSON.announcements },\r\n    });\r\n  }\r\n\r\n  daysAgo(date) {\r\n    const today = new Date();\r\n    const createdOn = new Date(date);\r\n    const msInDay = 24 * 60 * 60 * 1000;\r\n\r\n    createdOn.setHours(0, 0, 0, 0);\r\n    today.setHours(0, 0, 0, 0);\r\n\r\n    const diff = (+today - +createdOn) / msInDay;\r\n    return Math.round(diff);\r\n  }\r\n\r\n  render() {\r\n    const data = this.props.state.analytics.items;\r\n    return (\r\n      <div\r\n        className=\"SettingsPage\"\r\n        style={{ width: '90%', position: 'absolute', top: '50px', left: '8%' }}\r\n      >\r\n        <h5>Dashboard | Analytics</h5>\r\n\r\n        <Clock\r\n          format=\"HH:mm:ss\"\r\n          interval={1000}\r\n          ticking\r\n          style={{ position: 'absolute', top: '-25px', fontSize: '1rem' }}\r\n        />\r\n\r\n        <Paper\r\n          style={{\r\n            color: 'black',\r\n            marginTop: '2rem',\r\n            background:\r\n              'linear-gradient(90deg, hsla(152, 100%, 50%, 1) 0%, hsla(186, 100%, 69%, 1) 100%)',\r\n            width: '16rem',\r\n            height: '6rem',\r\n          }}\r\n        >\r\n          <span\r\n            style={{\r\n              position: 'absolute',\r\n              top: '43%',\r\n              marginLeft: '1.5rem',\r\n              transform: 'translateY(-50%)',\r\n            }}\r\n          >\r\n            <Icon icon=\"check-circle\" size=\"5x\" />\r\n          </span>\r\n          <h5\r\n            style={{\r\n              textAlign: 'center',\r\n              float: 'right',\r\n              paddingTop: '14%',\r\n              paddingRight: '9%',\r\n            }}\r\n          >\r\n            {this.props.state.analytics.checkouts} Checkouts\r\n          </h5>\r\n        </Paper>\r\n\r\n        <Paper\r\n          style={{\r\n            color: 'black',\r\n            marginTop: '2rem',\r\n            background:\r\n              'linear-gradient(90deg, hsla(340, 80%, 69%, 1) 0%, hsla(15, 93%, 71%, 1) 100%)',\r\n            position: 'absolute',\r\n            left: '18rem',\r\n            width: '16rem',\r\n            height: '6rem',\r\n            top: '1.6rem',\r\n          }}\r\n        >\r\n          <span\r\n            style={{\r\n              position: 'absolute',\r\n              top: '50%',\r\n              marginLeft: '1.5rem',\r\n              transform: 'translateY(-50%)',\r\n            }}\r\n          >\r\n            <Icon icon=\"times-circle\" size=\"5x\" />\r\n          </span>\r\n          <h5\r\n            style={{\r\n              top: '62%',\r\n              position: 'absolute',\r\n              left: '55%',\r\n              transform: 'translateY(-100%)',\r\n            }}\r\n          >\r\n            {this.props.state.analytics.declines} Declines\r\n          </h5>\r\n        </Paper>\r\n\r\n        <Paper\r\n          style={{\r\n            color: 'black',\r\n            marginTop: '2rem',\r\n            background:\r\n              'linear-gradient(90deg, hsla(238, 100%, 71%, 1) 0%, hsla(295, 100%, 84%, 1) 100%)',\r\n            position: 'absolute',\r\n            left: '36rem',\r\n            width: '17rem',\r\n            height: '6rem',\r\n            top: '1.6rem',\r\n          }}\r\n        >\r\n          <span\r\n            style={{\r\n              position: 'absolute',\r\n              top: '50%',\r\n              marginLeft: '1.5rem',\r\n              transform: 'translateY(-50%)',\r\n            }}\r\n          >\r\n            <Icon icon=\"credit-card\" size=\"5x\" />\r\n          </span>\r\n          <h5\r\n            style={{\r\n              top: '62%',\r\n              position: 'absolute',\r\n              left: '51%',\r\n              transform: 'translateY(-100%)',\r\n            }}\r\n          >\r\n            ${this.props.state.analytics.totalSpent} Spent\r\n          </h5>\r\n        </Paper>\r\n\r\n        <Panel\r\n          style={{\r\n            width: '30%',\r\n            float: 'right',\r\n            top: '22%',\r\n            position: 'absolute',\r\n            right: '0%',\r\n            height: '600px',\r\n            overflowY: 'scroll',\r\n            overflowX: 'clip',\r\n          }}\r\n          header={\r\n            <>\r\n              Announcements\r\n              <Icon\r\n                style={{ float: 'right', marginTop: '5px' }}\r\n                icon=\"refresh2\"\r\n                onClick={(e) => {\r\n                  e.preventDefault();\r\n                  this.fetchAnnouncements();\r\n                  cogoToast.success(`Fetching Announcements`, {\r\n                    position: 'top-right',\r\n                  });\r\n                }}\r\n              />\r\n            </>\r\n          }\r\n          bordered\r\n        >\r\n          {this.props.state?.announcements.length > 0 ? (\r\n            this.props.state?.announcements.map((item, index) => (\r\n              <div\r\n                style={{\r\n                  background: 'rgb(39 42 66)',\r\n                  marginBottom: '2rem',\r\n                  borderRadius: '6px',\r\n                }}\r\n                key={index}\r\n              >\r\n                <u>\r\n                  <h6 style={{ marginLeft: '2.5rem', paddingTop: '1rem' }}>\r\n                    {item.title}\r\n                  </h6>\r\n                </u>\r\n                <div\r\n                  style={{\r\n                    marginLeft: '1.5rem',\r\n                    padding: '1rem',\r\n                    paddingBottom: '2rem',\r\n                  }}\r\n                >\r\n                  {item.message}\r\n                </div>\r\n                <div\r\n                  style={{\r\n                    position: 'relative',\r\n                    left: '15.5rem',\r\n                    top: '-1rem',\r\n                  }}\r\n                >\r\n                  <div\r\n                    style={{\r\n                      right: '50%',\r\n                      position: 'relative',\r\n                    }}\r\n                  >\r\n                    {/* <Avatar\r\n                      src=\"./assets/logo_transparent.png\"\r\n                      size=\"sm\"\r\n                      circle\r\n                    /> */}\r\n                    {/* <div>\r\n                      &nbsp; Aladdin Updates\r\n                      {this.daysAgo(item.date) === 0\r\n                        ? `Today - ${\r\n                            new Date()\r\n                              .toLocaleString()\r\n                              .split(',')[0]\r\n                              .split('/2021')[0]\r\n                          }`\r\n                        : `${this.daysAgo(item.date)} days ago`}\r\n                    </div> */}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            ))\r\n          ) : (\r\n            <> </>\r\n          )}\r\n        </Panel>\r\n\r\n        <div style={{ marginTop: '5%' }}>\r\n          <h5>Recent Checkouts</h5>\r\n          <List\r\n            size=\"sm\"\r\n            style={{\r\n              marginRight: '1.5rem',\r\n              maxWidth: 'fit-content',\r\n              maxHeight: '400px',\r\n              position: 'absolute',\r\n            }}\r\n          >\r\n            {data?.length ? data?.map((item, index) => (\r\n              <List.Item key={index} index={index}>\r\n                <FlexboxGrid>\r\n                  {/* icon */}\r\n                  <FlexboxGrid.Item colspan={25} style={styleCenter}>\r\n                    <img width=\"50\" src={item.image} alt=\"\" />\r\n                  </FlexboxGrid.Item>\r\n                  {/* base info */}\r\n                  <FlexboxGrid.Item\r\n                    colspan={25}\r\n                    style={{\r\n                      ...styleCenter,\r\n                      flexDirection: 'column',\r\n                      alignItems: 'flex-start',\r\n                      overflow: 'hidden',\r\n                    }}\r\n                  >\r\n                    <div style={titleStyle}>{item.title}</div>\r\n                    <div style={slimText}>\r\n                      <div\r\n                        style={{ fontSize: '14px', fontWeight: 'bold' }}\r\n                      >{` ${item.site} - $${item.price}`}</div>\r\n                      <div style={{ fontSize: '12px' }}>\r\n                        {new Date(item.date).toLocaleDateString()}\r\n                      </div>\r\n                    </div>\r\n                  </FlexboxGrid.Item>\r\n                  {/* peak data */}\r\n                </FlexboxGrid>\r\n              </List.Item>\r\n            )) : <List.Item> No recent checkouts </List.Item> }\r\n          </List>\r\n        </div>\r\n\r\n        <div\r\n          style={{\r\n            width: '400px',\r\n            position: 'absolute',\r\n            left: '30%',\r\n            top: '90%',\r\n          }}\r\n        >\r\n          <h5 style={{ marginBottom: '1rem' }}>Checkouts By Site</h5>\r\n          <Doughnut data={DoughnutData} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({ state });\r\nexport default connect(mapStateToProps)(Dashboard);\r\n","import React from 'react';\r\nimport {\r\n  Panel,\r\n  Icon,\r\n  Button,\r\n  Avatar,\r\n  IconButton,\r\n  Input,\r\n  FormGroup,\r\n  FormControl,\r\n  ControlLabel,\r\n  List,\r\n  Dropdown,\r\n  Modal,\r\n  Form,\r\n  FlexboxGrid,\r\n} from 'rsuite';\r\nimport Clock from 'react-live-clock';\r\nimport { connect } from 'react-redux';\r\nimport cogoToast from 'cogo-toast';\r\n\r\nconst { ipcRenderer } = require('electron');\r\n\r\nconst styleCenter = {\r\n  display: 'flex',\r\n  justifyContent: 'center',\r\n  alignItems: 'center',\r\n  height: '60px',\r\n};\r\n\r\nconst titleStyle = {\r\n  paddingBottom: 5,\r\n  whiteSpace: 'nowrap',\r\n  fontWeight: 500,\r\n};\r\n\r\nclass Proxies extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      selectedProxygroup: '',\r\n      edit: false,\r\n      formValue: {\r\n        name: '',\r\n        proxies: '',\r\n      },\r\n    };\r\n  }\r\n\r\n  search = (term) => {\r\n    if (term !== '') {\r\n      const filteredProxies = this.props.state.proxies.filter((row) =>\r\n        JSON.stringify(row).toLowerCase().includes(term.toLowerCase())\r\n      );\r\n      this.props.dispatch({\r\n        type: 'update',\r\n        obj: { filteredProxies, search: true },\r\n      });\r\n    } else {\r\n      this.props.dispatch({\r\n        type: 'update',\r\n        obj: { search: false },\r\n      });\r\n    }\r\n  };\r\n\r\n  close = () => {\r\n    this.setState({ show: false });\r\n  };\r\n\r\n  open = () => {\r\n    this.setState({ show: true });\r\n  };\r\n\r\n  editProxyGroup = (e) => {\r\n    this.setState((prevState) => ({\r\n      ...prevState,\r\n      edit: true,\r\n      formValue: {\r\n        id: this.props.state.proxies[prevState.selectedProxygroup].id,\r\n        name: this.props.state.proxies[prevState.selectedProxygroup].name,\r\n        proxies: this.formatProxy(\r\n          this.props.state.proxies[prevState.selectedProxygroup]\r\n        ),\r\n      },\r\n    }));\r\n    this.open();\r\n  };\r\n\r\n  sendEditProxies = () => {\r\n    console.log(this.state.formValue);\r\n    ipcRenderer.send('edit:proxy', this.state.formValue);\r\n    this.close();\r\n    this.getProxies();\r\n    cogoToast.success(`Edited Proxy Group`, {\r\n      position: 'top-right',\r\n      heading: 'Success',\r\n    });\r\n  };\r\n\r\n  formatProxy = (proxyObject) => {\r\n    let proxyText = '';\r\n    const { proxies } = proxyObject;\r\n    const keys = Object.keys(proxies);\r\n    for (let i = 0; i < keys.length; i += 1) {\r\n      const key = keys[i];\r\n      const value = proxies[key];\r\n      if (!value.user && !value.password) {\r\n        proxyText += `${value.ip}:${value.port}\\n`;\r\n      } else {\r\n        proxyText += `${value.ip}:${value.port}:${value.user}:${value.password}\\n`;\r\n      }\r\n    }\r\n    return proxyText;\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getProxies();\r\n  }\r\n\r\n  objectToArray = (object) => {\r\n    if (Array.isArray(object)) {\r\n      return object;\r\n    }\r\n    const array = [];\r\n    for (const property in object) {\r\n      array.push(object[property]);\r\n    }\r\n    return array;\r\n  };\r\n\r\n  setSelectedProxygroup = (id) => {\r\n    this.setState((prevState) => ({\r\n      ...prevState,\r\n      selectedProxygroup: id,\r\n    }));\r\n  };\r\n\r\n  getProxies = () => {\r\n    const proxies = ipcRenderer.sendSync('get:proxies');\r\n    this.props.dispatch({ type: 'update', obj: { proxies } });\r\n    if (!this.state.selectedProxygroup) {\r\n      this.setState((prevState) => ({\r\n        ...prevState,\r\n        selectedProxygroup: proxies[Object.keys(proxies)[0]]?.id,\r\n      }));\r\n    }\r\n  };\r\n\r\n  addProxies = (e) => {\r\n    ipcRenderer.sendSync('add:proxies', this.state.formValue);\r\n    this.close();\r\n    this.setState((prevState) => ({\r\n      ...prevState,\r\n      formValue: {\r\n        name: '',\r\n        proxies: '',\r\n      },\r\n    }));\r\n    this.getProxies();\r\n  };\r\n\r\n  deleteProxies = (e, id) => {\r\n    ipcRenderer.sendSync('delete:proxies', id);\r\n    this.getProxies();\r\n  };\r\n\r\n  height = () => {\r\n    const height = window.innerHeight;\r\n    return Math.round(0.75 * height);\r\n  };\r\n\r\n  spanColor = (num) => {\r\n    num = parseInt(num, 10);\r\n    if (num < 500) {\r\n      return '#5dd47d';\r\n    }\r\n    return '#e0563a';\r\n  };\r\n\r\n  deleteSpecificProxy = (e, groupID, id) => {\r\n    ipcRenderer.sendSync('delete:specific:proxy', groupID, id);\r\n    this.getProxies();\r\n  };\r\n\r\n  pingProxy = (e, groupID, id, proxy) => {\r\n    ipcRenderer.send('test:proxy', groupID, id, proxy);\r\n  };\r\n\r\n  testAllProxies = (e) => {\r\n    const proxiesObject =\r\n      this.props.state.proxies[this.state.selectedProxygroup].proxies;\r\n\r\n    for (const property in proxiesObject) {\r\n      const item = proxiesObject[property];\r\n      this.pingProxy(\r\n        e,\r\n        this.state.selectedProxygroup,\r\n        property,\r\n        item.password\r\n          ? `${item.ip}:${item.port}:${item.user}:${item.password}`\r\n          : `${item.ip}:${item.port}`\r\n      );\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { formValue } = this.state;\r\n\r\n    return (\r\n      <>\r\n        <Modal show={this.state.show} onHide={this.close} size=\"md\">\r\n          <Modal.Header>\r\n            <Modal.Title>\r\n              {this.state.edit ? 'Edit Proxy Group' : 'Create Proxy Group'}\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body style={{ overflow: 'hidden' }}>\r\n            <Form\r\n              fluid\r\n              // onChange={this.handleChange}\r\n              onChange={(formValue) => {\r\n                this.setState({ formValue });\r\n              }}\r\n              formValue={formValue}\r\n            >\r\n              <FormGroup style={{ marginLeft: '5%', marginRight: '5%' }}>\r\n                <ControlLabel>Name</ControlLabel>\r\n                <FormControl placeholder=\"Name\" block name=\"name\" />\r\n              </FormGroup>\r\n              <FormGroup style={{ marginLeft: '5%', marginRight: '5%' }}>\r\n                <ControlLabel>Proxies</ControlLabel>\r\n                <FormControl\r\n                  componentClass=\"textarea\"\r\n                  placeholder=\"Paste your proxies here\"\r\n                  block\r\n                  rows={5}\r\n                  name=\"proxies\"\r\n                />\r\n              </FormGroup>\r\n            </Form>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button\r\n              onClick={this.close}\r\n              style={{\r\n                color: 'white',\r\n                border: '3px solid white',\r\n                marginRight: '1rem',\r\n              }}\r\n              appearance=\"ghost\"\r\n            >\r\n              Cancel\r\n            </Button>\r\n            <Button\r\n              onClick={\r\n                !this.state.edit ? this.addProxies : this.sendEditProxies\r\n              }\r\n              style={{\r\n                color: 'springgreen',\r\n                border: '3px solid springgreen',\r\n              }}\r\n              appearance=\"ghost\"\r\n            >\r\n              Save\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n        <div\r\n          className=\"SettingsPage\"\r\n          style={{\r\n            width: '90%',\r\n            position: 'absolute',\r\n            top: '50px',\r\n            left: '8%',\r\n            // overflowX: 'clip',\r\n          }}\r\n        >\r\n          <h5>Proxy Groups</h5>\r\n          <Clock\r\n            format=\"HH:mm:ss\"\r\n            interval={1000}\r\n            ticking\r\n            style={{ position: 'absolute', top: '-25px', fontSize: '1rem' }}\r\n          />\r\n          <div\r\n            style={{\r\n              width: '18%',\r\n              position: 'absolute',\r\n              top: '-25px',\r\n              overflowY: 'scroll',\r\n              display: 'block',\r\n              marginTop: '80px',\r\n              overflowX: 'hidden',\r\n            }}\r\n          >\r\n            <Input\r\n              style={{\r\n                float: 'right',\r\n                position: 'absolute',\r\n                left: '120%',\r\n                top: '-24%',\r\n                width: '172%',\r\n                border: '3px ​solid #3c3f4',\r\n              }}\r\n              onChange={this.search}\r\n              placeholder=\"Search\"\r\n            />\r\n            <Button\r\n              center\r\n              block\r\n              size=\"lg\"\r\n              color=\"blue\"\r\n              style={{ margin: 'auto', marginBottom: '1rem' }}\r\n              onClick={this.open}\r\n            >\r\n              <Icon icon=\"plus-square\" /> Create Proxy Group\r\n            </Button>\r\n            {this.objectToArray(this.props.state.proxies).map((row) => (\r\n              <Panel\r\n                style={{\r\n                  marginBottom: '7%',\r\n                  width: '95%',\r\n                  height: 'min-content',\r\n                  border: `${\r\n                    this.state?.selectedProxygroup === row?.id\r\n                      ? '2px solid #92ade0'\r\n                      : 'none'\r\n                  }`,\r\n                }}\r\n                key={row.id}\r\n                onClick={(e) => this.setSelectedProxygroup(row.id)}\r\n                shaded\r\n                bordered\r\n              >\r\n                <Avatar style={{ marginRight: '5%' }} size=\"md\">\r\n                  {Object.keys(row.proxies).length}\r\n                </Avatar>\r\n\r\n                <h5\r\n                  style={{\r\n                    float: 'right',\r\n                    top: '17%',\r\n                    right: '40%',\r\n                    display: 'contents',\r\n                  }}\r\n                >\r\n                  {row.name}\r\n                </h5>\r\n                <div style={{ float: 'right' }}>\r\n                  <Dropdown\r\n                    placement=\"leftStart\"\r\n                    renderTitle={() => {\r\n                      return (\r\n                        <IconButton\r\n                          style={{\r\n                            float: 'right',\r\n                            position: 'sticky',\r\n                            transform: 'translateY(-17px) translateX(18px)',\r\n                            background: 'transparent',\r\n                          }}\r\n                          size=\"lg\"\r\n                          icon={<Icon icon=\"ellipsis-h\" />}\r\n                        />\r\n                      );\r\n                    }}\r\n                  >\r\n                    <Dropdown.Item\r\n                      onSelect={(e) => this.deleteProxies(e, row?.id)}\r\n                    >\r\n                      <Icon icon=\"trash2\" /> Delete Group\r\n                    </Dropdown.Item>\r\n                  </Dropdown>\r\n                </div>\r\n              </Panel>\r\n            ))}\r\n          </div>\r\n          <div\r\n            style={{\r\n              position: 'absolute',\r\n              top: '6%',\r\n              right: '10px',\r\n              width: '79%',\r\n            }}\r\n          >\r\n            <Button\r\n              style={{ position: 'relative', float: 'right' }}\r\n              onClick={this.editProxyGroup}\r\n              appearance=\"primary\"\r\n            >\r\n              <Icon icon=\"spinner\" /> Edit Group\r\n            </Button>\r\n            <Button\r\n              style={{ position: 'relative', float: 'right' }}\r\n              onClick={this.testAllProxies}\r\n              appearance=\"primary\"\r\n            >\r\n              <Icon icon=\"spinner\" /> Test All Proxies\r\n            </Button>\r\n\r\n            <div>\r\n              <List style={{ height: `${this.height()}px` }} hover>\r\n                {this.objectToArray(\r\n                  this.objectToArray(this.props.state.proxies).filter(\r\n                    (item) => item.id === this.state.selectedProxygroup\r\n                  )[0]?.proxies\r\n                ).map((item) => (\r\n                  <List.Item key={item.title}>\r\n                    <FlexboxGrid>\r\n                      {/* base info */}\r\n                      <FlexboxGrid.Item\r\n                        colspan={4}\r\n                        // style={{\r\n                        //   ...styleCenter,\r\n                        //   marginLeft: '3rem',\r\n                        //   flexDirection: 'column',\r\n                        //   alignItems: 'flex-start',\r\n                        //   overflow: 'hidden',\r\n                        // }}\r\n                        style={styleCenter}\r\n                      >\r\n                        <div style={titleStyle}>{item?.ip}</div>\r\n                      </FlexboxGrid.Item>\r\n                      {/* peak data */}\r\n                      <FlexboxGrid.Item colspan={3} style={styleCenter}>\r\n                        {item?.port}\r\n                      </FlexboxGrid.Item>\r\n                      {/* uv data */}\r\n                      <FlexboxGrid.Item colspan={4} style={styleCenter}>\r\n                        {item?.user}\r\n                      </FlexboxGrid.Item>\r\n                      <FlexboxGrid.Item colspan={6} style={styleCenter}>\r\n                        {item?.password}\r\n                      </FlexboxGrid.Item>\r\n                      <FlexboxGrid.Item colspan={2} style={styleCenter}>\r\n                        <div\r\n                          style={{\r\n                            color: this.spanColor(\r\n                              item?.speed ? item?.speed : '0'\r\n                            ),\r\n                          }}\r\n                        >\r\n                          {item?.speed ? item?.speed : '0'}\r\n                        </div>\r\n                      </FlexboxGrid.Item>\r\n                      {/* uv data */}\r\n                      <FlexboxGrid.Item\r\n                        colspan={4}\r\n                        style={{\r\n                          ...styleCenter,\r\n                        }}\r\n                      >\r\n                        <span>\r\n                          <Icon\r\n                            icon=\"trash2\"\r\n                            style={{ marginRight: '10px' }}\r\n                            size=\"lg\"\r\n                            onClick={(e) =>\r\n                              this.deleteSpecificProxy(\r\n                                e,\r\n                                this.state.selectedProxygroup,\r\n                                item.id\r\n                              )\r\n                            }\r\n                          />\r\n                        </span>\r\n                        <span>\r\n                          <Icon\r\n                            icon=\"wifi\"\r\n                            size=\"lg\"\r\n                            onClick={(e) =>\r\n                              this.pingProxy(\r\n                                e,\r\n                                this.state.selectedProxygroup,\r\n                                item.id,\r\n                                item.password\r\n                                  ? `${item.ip}:${item.port}:${item.user}:${item.password}`\r\n                                  : `${item.ip}:${item.port}`\r\n                              )\r\n                            }\r\n                          />\r\n                        </span>\r\n                      </FlexboxGrid.Item>\r\n                    </FlexboxGrid>\r\n                  </List.Item>\r\n                ))}\r\n              </List>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => ({ state });\r\nexport default connect(mapStateToProps)(Proxies);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Payment from 'payment';\r\nimport { Icon } from 'rsuite';\r\nimport { connect } from 'react-redux';\r\nimport cogoToast from 'cogo-toast';\r\n\r\nconst { ipcRenderer } = require('electron');\r\n\r\nclass CreditCards extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.setCards();\r\n  }\r\n\r\n  static propTypes = {\r\n    acceptedCards: PropTypes.array,\r\n    callback: PropTypes.func,\r\n    cvc: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\r\n    expiry: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\r\n      .isRequired,\r\n    focused: PropTypes.string,\r\n    issuer: PropTypes.string,\r\n    locale: PropTypes.shape({\r\n      valid: PropTypes.string,\r\n    }),\r\n    name: PropTypes.string.isRequired,\r\n    number: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\r\n      .isRequired,\r\n    placeholders: PropTypes.shape({\r\n      name: PropTypes.string,\r\n    }),\r\n    preview: PropTypes.bool,\r\n  };\r\n\r\n  static defaultProps = {\r\n    acceptedCards: [],\r\n    locale: {\r\n      valid: 'valid thru',\r\n    },\r\n    placeholders: {\r\n      name: 'YOUR NAME HERE',\r\n    },\r\n    preview: false,\r\n  };\r\n\r\n  componentDidUpdate(prevProps) {\r\n    const { acceptedCards, callback, number } = this.props;\r\n\r\n    if (prevProps.number !== number) {\r\n      /* istanbul ignore else */\r\n      if (typeof callback === 'function') {\r\n        callback(this.options, Payment.fns.validateCardNumber(number));\r\n      }\r\n    }\r\n\r\n    if (prevProps.acceptedCards.toString() !== acceptedCards.toString()) {\r\n      this.setCards();\r\n    }\r\n  }\r\n\r\n  getProfiles = () => {\r\n    const profiles = ipcRenderer.sendSync('get:profiles');\r\n    console.log(profiles);\r\n    this.props.dispatch({ type: 'update', obj: { profiles } });\r\n  };\r\n\r\n  duplicateProfile(e, id) {\r\n    ipcRenderer.send('duplicate-profile', id);\r\n    cogoToast.success(`Duplicated Profile`, {\r\n      position: 'top-right',\r\n      heading: 'Success',\r\n    });\r\n    this.getProfiles();\r\n  }\r\n\r\n  deleteProfile(e, id) {\r\n    ipcRenderer.send('delete-profile', id);\r\n    cogoToast.success(`Deleted Profile`, {\r\n      position: 'top-right',\r\n      heading: 'Success',\r\n    });\r\n    this.getProfiles();\r\n  }\r\n\r\n  get issuer() {\r\n    const { issuer, preview } = this.props;\r\n\r\n    return preview && issuer ? issuer.toLowerCase() : this.options.issuer;\r\n  }\r\n\r\n  get number() {\r\n    const { number, preview } = this.props;\r\n\r\n    let maxLength = preview ? 19 : this.options.maxLength;\r\n    let nextNumber =\r\n      typeof number === 'number'\r\n        ? number.toString()\r\n        : number.replace(/[A-Za-z]| /g, '');\r\n\r\n    if (isNaN(parseInt(nextNumber, 10)) && !preview) {\r\n      nextNumber = '';\r\n    }\r\n\r\n    if (maxLength > 16) {\r\n      maxLength = nextNumber.length <= 16 ? 16 : maxLength;\r\n    }\r\n\r\n    if (nextNumber.length > maxLength) {\r\n      nextNumber = nextNumber.slice(0, maxLength);\r\n    }\r\n\r\n    while (nextNumber.length < maxLength) {\r\n      nextNumber += '•';\r\n    }\r\n\r\n    if (['amex', 'dinersclub'].includes(this.issuer)) {\r\n      const format = [0, 4, 10];\r\n      const limit = [4, 6, 5];\r\n      nextNumber = `${nextNumber.substr(\r\n        format[0],\r\n        limit[0]\r\n      )} ${nextNumber.substr(format[1], limit[1])} ${nextNumber.substr(\r\n        format[2],\r\n        limit[2]\r\n      )}`;\r\n    } else if (nextNumber.length > 16) {\r\n      const format = [0, 4, 8, 12];\r\n      const limit = [4, 7];\r\n      nextNumber = `${nextNumber.substr(\r\n        format[0],\r\n        limit[0]\r\n      )} ${nextNumber.substr(format[1], limit[0])} ${nextNumber.substr(\r\n        format[2],\r\n        limit[0]\r\n      )} ${nextNumber.substr(format[3], limit[1])}`;\r\n    } else {\r\n      for (let i = 1; i < maxLength / 4; i++) {\r\n        const space_index = i * 4 + (i - 1);\r\n        nextNumber = `${nextNumber.slice(0, space_index)} ${nextNumber.slice(\r\n          space_index\r\n        )}`;\r\n      }\r\n    }\r\n\r\n    return nextNumber;\r\n  }\r\n\r\n  get expiry() {\r\n    const { expiry = '' } = this.props;\r\n    const date = typeof expiry === 'number' ? expiry.toString() : expiry;\r\n    let month = '';\r\n    let year = '';\r\n\r\n    if (date.includes('/')) {\r\n      [month, year] = date.split('/');\r\n    } else if (date.length) {\r\n      month = date.substr(0, 2);\r\n      year = date.substr(2, 6);\r\n    }\r\n\r\n    while (month.length < 2) {\r\n      month += '•';\r\n    }\r\n\r\n    if (year.length > 2) {\r\n      year = year.substr(2, 4);\r\n    }\r\n\r\n    while (year.length < 2) {\r\n      year += '•';\r\n    }\r\n\r\n    return `${month}/${year}`;\r\n  }\r\n\r\n  get options() {\r\n    const { number } = this.props;\r\n    const issuer = Payment.fns.cardType(number) || 'unknown';\r\n\r\n    let maxLength = 16;\r\n\r\n    if (issuer === 'amex') {\r\n      maxLength = 15;\r\n    } else if (issuer === 'dinersclub') {\r\n      maxLength = 14;\r\n    } else if (['hipercard', 'mastercard', 'visa'].includes(issuer)) {\r\n      maxLength = 19;\r\n    }\r\n\r\n    return {\r\n      issuer,\r\n      maxLength,\r\n    };\r\n  }\r\n\r\n  setCards() {\r\n    const { acceptedCards } = this.props;\r\n    let newCardArray = [];\r\n\r\n    if (acceptedCards.length) {\r\n      Payment.getCardArray().forEach((d) => {\r\n        if (acceptedCards.includes(d.type)) {\r\n          newCardArray.push(d);\r\n        }\r\n      });\r\n    } else {\r\n      newCardArray = newCardArray.concat(Payment.getCardArray());\r\n    }\r\n\r\n    Payment.setCardArray(newCardArray);\r\n  }\r\n\r\n  render() {\r\n    const { cvc, focused, locale, name, placeholders, profileID } = this.props;\r\n    const { number, expiry } = this;\r\n\r\n    return (\r\n      <div key=\"Cards\" className=\"rccs\">\r\n        <div\r\n          className={[\r\n            'rccs__card',\r\n            `rccs__card--${this.issuer}`,\r\n            focused === 'cvc' && this.issuer !== 'amex'\r\n              ? 'rccs__card--flipped'\r\n              : '',\r\n          ]\r\n            .join(' ')\r\n            .trim()}\r\n        >\r\n          <div className=\"rccs__card--front\">\r\n            <div className=\"rccs__card__background\" />\r\n            <div className=\"rccs__issuer\" />\r\n            <div\r\n              className={[\r\n                'rccs__cvc__front',\r\n                focused === 'cvc' ? 'rccs--focused' : '',\r\n              ]\r\n                .join(' ')\r\n                .trim()}\r\n            >\r\n              {cvc}\r\n            </div>\r\n            <div\r\n              className={[\r\n                'rccs__number',\r\n                number.replace(/ /g, '').length > 16\r\n                  ? 'rccs__number--large'\r\n                  : '',\r\n                focused === 'number' ? 'rccs--focused' : '',\r\n                number.substr(0, 1) !== '•' ? 'rccs--filled' : '',\r\n              ]\r\n                .join(' ')\r\n                .trim()}\r\n            >\r\n              •••• {number.substr(-4)}\r\n            </div>\r\n            <div\r\n              className={[\r\n                'rccs__name',\r\n                focused === 'name' ? 'rccs--focused' : '',\r\n                name ? 'rccs--filled' : '',\r\n              ]\r\n                .join(' ')\r\n                .trim()}\r\n            >\r\n              {name || placeholders.name}\r\n            </div>\r\n            <div\r\n              className={[\r\n                'rccs__expiry',\r\n                focused === 'expiry' ? 'rccs--focused' : '',\r\n                expiry.substr(0, 1) !== '•' ? 'rccs--filled' : '',\r\n              ]\r\n                .join(' ')\r\n                .trim()}\r\n            >\r\n              <div className=\"rccs__expiry__value\">\r\n                <Icon\r\n                  style={{ color: 'crimson', paddingRight: '10px' }}\r\n                  size=\"lg\"\r\n                  icon=\"trash2\"\r\n                  onClick={(e) => this.deleteProfile(e, profileID)}\r\n                />\r\n                <Icon\r\n                  style={{ paddingRight: '10px' }}\r\n                  size=\"lg\"\r\n                  onClick={(e) => this.props.onEditClick(e, profileID)}\r\n                  icon=\"pencil\"\r\n                />\r\n                <Icon\r\n                  size=\"lg\"\r\n                  icon=\"copy\"\r\n                  onClick={(e) => this.duplicateProfile(e, profileID)}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"rccs__chip\" />\r\n          </div>\r\n          <div className=\"rccs__card--back\">\r\n            <div className=\"rccs__card__background\" />\r\n            <div className=\"rccs__stripe\" />\r\n            <div className=\"rccs__signature\" />\r\n            <div\r\n              className={['rccs__cvc', focused === 'cvc' ? 'rccs--focused' : '']\r\n                .join(' ')\r\n                .trim()}\r\n            >\r\n              {cvc}\r\n            </div>\r\n            <div className=\"rccs__issuer\" />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => ({ state });\r\n\r\nexport default connect(mapStateToProps)(CreditCards);\r\n","import React from 'react';\r\nimport {\r\n  InputPicker,\r\n  Button,\r\n  Modal,\r\n  Form,\r\n  FormGroup,\r\n  FormControl,\r\n  Steps,\r\n  IconButton,\r\n  Icon,\r\n  ButtonGroup,\r\n  Toggle,\r\n  InputGroup,\r\n  Input,\r\n} from 'rsuite';\r\nimport cogoToast from 'cogo-toast';\r\n\r\nimport Clock from 'react-live-clock';\r\nimport { connect } from 'react-redux';\r\nimport CreditCards from './CreditCard';\r\n\r\nconst { ipcRenderer } = require('electron');\r\n\r\nclass Profile extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleInputFocus = this.handleInputFocus.bind(this);\r\n    this.handleInputChange = this.handleInputChange.bind(this);\r\n    this.saveProfile = this.saveProfile.bind(this);\r\n    this.state = {\r\n      show: false,\r\n      edit: false,\r\n      step: 0,\r\n      formValue: {\r\n        id: null,\r\n        profileName: '',\r\n        email: '',\r\n        cardName: '',\r\n        cardNumber: '',\r\n        cardCVV: '',\r\n        cardExpiration: '',\r\n        firstName: '',\r\n        lastName: '',\r\n        address: '',\r\n        city: '',\r\n        phone: '',\r\n        zip: '',\r\n        state: '',\r\n        country: '',\r\n        billingFirstName: '',\r\n        billingLastName: '',\r\n        billingAddress: '',\r\n        billingCity: '',\r\n        billingPhone: '',\r\n        billingZip: '',\r\n        billingState: '',\r\n        billingCountry: '',\r\n      },\r\n    };\r\n  }\r\n\r\n  handleInputFocus = (e) => {\r\n    this.setState({ focus: e.target.name });\r\n  };\r\n\r\n  handleInputChange = (event, name, value) => {\r\n    this.setState((prevState) => ({\r\n      ...prevState,\r\n      name: value,\r\n    }));\r\n  };\r\n\r\n  saveProfile = () => {\r\n    ipcRenderer.send('set:profiles', this.state.formValue);\r\n  };\r\n\r\n  getProfiles = () => {\r\n    const profiles = ipcRenderer.sendSync('get:profiles');\r\n    console.log(profiles);\r\n    this.props.dispatch({ type: 'update', obj: { profiles } });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getProfiles();\r\n  }\r\n\r\n  close = () => {\r\n    this.setState({ show: false });\r\n  };\r\n\r\n  open = () => {\r\n    this.setState({ show: true });\r\n  };\r\n\r\n  changeStep = (stepNow) => {\r\n    const { formValue, step } = this.state;\r\n    if (step == 0) {\r\n      console.log('here');\r\n      if (\r\n        formValue.profileName &&\r\n        formValue.email &&\r\n        formValue.cardName &&\r\n        formValue.cardNumber &&\r\n        formValue.cardCVV &&\r\n        formValue.cardExpiration\r\n      ) {\r\n        this.setState((prevState) => ({\r\n          ...prevState,\r\n          step: stepNow,\r\n        }));\r\n      } else {\r\n        cogoToast.error(`Please fill all fields`, {\r\n          position: 'top-right',\r\n          heading: 'Error',\r\n        });\r\n      }\r\n    } else if (step === 1) {\r\n      if (\r\n        formValue.firstName &&\r\n        formValue.lastName &&\r\n        formValue.address &&\r\n        formValue.city &&\r\n        formValue.phone &&\r\n        formValue.zip &&\r\n        formValue.state &&\r\n        formValue.country\r\n      ) {\r\n        this.setState((prevState) => ({\r\n          ...prevState,\r\n          step: stepNow,\r\n        }));\r\n      } else {\r\n        cogoToast.error(`Please fill all fields`, {\r\n          position: 'top-right',\r\n          heading: 'Error',\r\n        });\r\n      }\r\n    } else if (step === 2) {\r\n      if (\r\n        formValue.billingFirstName &&\r\n        formValue.billingLastName &&\r\n        formValue.billingAddress &&\r\n        formValue.billingCity &&\r\n        formValue.billingPhone &&\r\n        formValue.billingZip &&\r\n        formValue.billingState &&\r\n        formValue.billingCountry\r\n      ) {\r\n        this.setState((prevState) => ({\r\n          ...prevState,\r\n          step: stepNow,\r\n        }));\r\n      } else {\r\n        cogoToast.error(`Please fill all fields`, {\r\n          position: 'top-right',\r\n          heading: 'Error',\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  // make a function to edit the profile by making the id in formvalue known and then send that to ipcmain\r\n  // open the modal and then send the id to ipcmain\r\n  editProfile = (e, id) => {\r\n    this.setState((prevState) => ({\r\n      ...prevState,\r\n      edit: true,\r\n      formValue: this.props.state.profiles[id],\r\n    }));\r\n    this.open();\r\n  };\r\n\r\n  sendEditProfile = (id) => {\r\n    ipcRenderer.send('edit:profile', this.state.formValue);\r\n    this.close();\r\n    this.clearState();\r\n    this.getProfiles();\r\n    cogoToast.success(`Edited Profile`, {\r\n      position: 'top-right',\r\n      heading: 'Success',\r\n    });\r\n  };\r\n\r\n  clearState = () => {\r\n    this.setState({\r\n      show: false,\r\n      edit: false,\r\n      step: 0,\r\n      CardCVC: '',\r\n      CardExpiry: '',\r\n      CardName: '',\r\n      CardNumber: '',\r\n      formValue: {\r\n        id: null,\r\n        profileName: '',\r\n        email: '',\r\n        cardName: '',\r\n        cardNumber: '',\r\n        cardCVV: '',\r\n        cardExpiration: '',\r\n        firstName: '',\r\n        lastName: '',\r\n        address: '',\r\n        city: '',\r\n        phone: '',\r\n        zip: '',\r\n        state: '',\r\n        country: '',\r\n        billingFirstName: '',\r\n        billingLastName: '',\r\n        billingAddress: '',\r\n        billingCity: '',\r\n        billingPhone: '',\r\n        billingZip: '',\r\n        billingState: '',\r\n        billingCountry: '',\r\n      },\r\n    });\r\n  };\r\n\r\n  createProfile() {\r\n    this.close();\r\n    ipcRenderer.send('set:profiles', this.state.formValue);\r\n    this.clearState();\r\n    this.getProfiles();\r\n  }\r\n\r\n  search = (term) => {\r\n    if (term !== '') {\r\n      // change to profiles object\r\n      const filteredProfiles = this.objectToArray(\r\n        this.props.state.profiles\r\n      ).filter((row) =>\r\n        JSON.stringify(row).toLowerCase().includes(term.toLowerCase())\r\n      );\r\n      this.props.dispatch({\r\n        type: 'update',\r\n        obj: { filteredProfiles, profileSearch: true },\r\n      });\r\n    } else {\r\n      this.props.dispatch({\r\n        type: 'update',\r\n        obj: { profileSearch: false },\r\n      });\r\n    }\r\n  };\r\n\r\n  objectToArray = (object) => {\r\n    if (Array.isArray(object)) {\r\n      return object;\r\n    }\r\n    const array = [];\r\n    for (const property in object) {\r\n      array.push(object[property]);\r\n    }\r\n    return array;\r\n  };\r\n\r\n  render() {\r\n    const { formValue, step } = this.state;\r\n    return (\r\n      <>\r\n        <Modal show={this.state.show} onHide={this.close} size=\"md\">\r\n          <Modal.Header>\r\n            <Modal.Title>\r\n              {this.state.edit ? 'Edit Profile' : 'Create a Profile'}\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body style={{ overflow: 'hidden' }}>\r\n            <Steps\r\n              style={{ marginLeft: '3rem', marginRight: '3rem' }}\r\n              current={step}\r\n            >\r\n              <Steps.Item title=\"General\" />\r\n              <Steps.Item title=\"Shipping\" />\r\n              <Steps.Item title=\"Billing\" />\r\n            </Steps>\r\n            <Form\r\n              fluid\r\n              // onChange={this.handleChange}\r\n              onChange={(formValue) => {\r\n                this.setState({ formValue });\r\n                console.log(formValue);\r\n              }}\r\n              layout=\"inline\"\r\n              style={{ margin: 'auto', marginTop: '2rem', marginLeft: '4rem' }}\r\n              formValue={formValue}\r\n            >\r\n              <h6>\r\n                {step === 0\r\n                  ? 'General Information'\r\n                  : step === 1\r\n                  ? 'Shipping Information'\r\n                  : 'Billing Information'}\r\n              </h6>\r\n              {step === 0 ? (\r\n                <>\r\n                  <FormGroup>\r\n                    <FormControl\r\n                      name=\"profileName\"\r\n                      placeholder=\"Profile Name\"\r\n                    />\r\n                  </FormGroup>\r\n                  <FormGroup>\r\n                    <FormControl name=\"email\" placeholder=\"Email\" />\r\n                  </FormGroup>\r\n                  <FormGroup>\r\n                    <FormControl\r\n                      name=\"cardName\"\r\n                      placeholder=\"Cardholder Name\"\r\n                    />\r\n                  </FormGroup>\r\n                  <FormGroup>\r\n                    <FormControl name=\"cardNumber\" placeholder=\"Card Number\" />\r\n                  </FormGroup>\r\n                  <FormGroup>\r\n                    <FormControl name=\"cardCVV\" placeholder=\"CVV\" />\r\n                  </FormGroup>\r\n                  <FormGroup>\r\n                    <FormControl\r\n                      name=\"cardExpiration\"\r\n                      placeholder=\"Exp 09/23\"\r\n                    />\r\n                  </FormGroup>\r\n                </>\r\n              ) : step === 1 ? (\r\n                <>\r\n                  <FormGroup>\r\n                    <FormControl name=\"firstName\" placeholder=\"First Name\" />\r\n                  </FormGroup>\r\n                  <FormGroup>\r\n                    <FormControl name=\"lastName\" placeholder=\"Last Name\" />\r\n                  </FormGroup>\r\n                  <FormGroup>\r\n                    <FormControl name=\"address\" placeholder=\"Address\" />\r\n                  </FormGroup>\r\n                  <FormGroup>\r\n                    <FormControl name=\"city\" placeholder=\"City\" />\r\n                  </FormGroup>\r\n                  <FormGroup>\r\n                    <FormControl name=\"phone\" placeholder=\"Phone\" />\r\n                  </FormGroup>\r\n                  <FormGroup>\r\n                    <FormControl name=\"zip\" placeholder=\"Zip Code\" />\r\n                  </FormGroup>\r\n                  <div>\r\n                    <FormGroup>\r\n                      <FormControl\r\n                        style={{ paddingRight: '2.4rem' }}\r\n                        name=\"state\"\r\n                        placeholder=\"State\"\r\n                        accepter={InputPicker}\r\n                        data={\r\n                          formValue?.country\r\n                            ? formValue?.country === 'USA'\r\n                              ? states\r\n                              : canadaProvinces\r\n                            : []\r\n                        }\r\n                      />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <FormControl\r\n                        style={{ paddingRight: '2.4rem', marginLeft: '1.3rem' }}\r\n                        name=\"country\"\r\n                        placeholder=\"Country\"\r\n                        accepter={InputPicker}\r\n                        data={[\r\n                          {\r\n                            label: 'United States',\r\n                            value: 'USA',\r\n                          },\r\n                          {\r\n                            label: 'Canada',\r\n                            value: 'CA',\r\n                          },\r\n                        ]}\r\n                      />\r\n                    </FormGroup>\r\n                  </div>\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <div style={{ display: 'inline-flex', width: '100%' }}>\r\n                    <Toggle style={{ marginRight: '1rem' }} />\r\n                    <div>Same Billing And Shipping</div>\r\n                  </div>\r\n                  <FormGroup>\r\n                    <FormControl\r\n                      name=\"billingFirstName\"\r\n                      placeholder=\"First Name\"\r\n                    />\r\n                  </FormGroup>\r\n                  <FormGroup>\r\n                    <FormControl\r\n                      name=\"billingLastName\"\r\n                      placeholder=\"Last Name\"\r\n                    />\r\n                  </FormGroup>\r\n                  <FormGroup>\r\n                    <FormControl name=\"billingAddress\" placeholder=\"Address\" />\r\n                  </FormGroup>\r\n                  <FormGroup>\r\n                    <FormControl name=\"billingCity\" placeholder=\"City\" />\r\n                  </FormGroup>\r\n                  <FormGroup>\r\n                    <FormControl name=\"billingPhone\" placeholder=\"Phone\" />\r\n                  </FormGroup>\r\n                  <FormGroup>\r\n                    <FormControl name=\"billingZip\" placeholder=\"Zip Code\" />\r\n                  </FormGroup>\r\n                  <div>\r\n                    <FormGroup>\r\n                      <FormControl\r\n                        style={{ paddingRight: '2.4rem' }}\r\n                        name=\"billingState\"\r\n                        placeholder=\"State\"\r\n                        accepter={InputPicker}\r\n                        data={\r\n                          formValue?.country\r\n                            ? formValue?.country === 'USA'\r\n                              ? states\r\n                              : canadaProvinces\r\n                            : []\r\n                        }\r\n                      />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <FormControl\r\n                        style={{\r\n                          paddingRight: '2.4rem',\r\n                          marginLeft: '1.3rem',\r\n                        }}\r\n                        name=\"billingCountry\"\r\n                        placeholder=\"Country\"\r\n                        accepter={InputPicker}\r\n                        data={[\r\n                          {\r\n                            label: 'United States',\r\n                            value: 'USA',\r\n                          },\r\n                          {\r\n                            label: 'Canada',\r\n                            value: 'CA',\r\n                          },\r\n                        ]}\r\n                      />\r\n                    </FormGroup>\r\n                  </div>\r\n                </>\r\n              )}\r\n            </Form>\r\n\r\n            <ButtonGroup style={{ marginLeft: '3rem' }}>\r\n              <Button\r\n                onClick={(e) => this.changeStep(step - 1)}\r\n                disabled={step === 0}\r\n                appearance=\"primary\"\r\n              >\r\n                Previous\r\n              </Button>\r\n              <Button\r\n                onClick={(e) => this.changeStep(step + 1)}\r\n                disabled={step === 2}\r\n                appearance=\"primary\"\r\n              >\r\n                Next\r\n              </Button>\r\n            </ButtonGroup>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button\r\n              onClick={(e) => this.close()}\r\n              style={{\r\n                color: 'white',\r\n                border: '3px solid white',\r\n                marginRight: '1rem',\r\n              }}\r\n              appearance=\"ghost\"\r\n            >\r\n              Cancel\r\n            </Button>\r\n            <Button\r\n              onClick={\r\n                !this.state.edit\r\n                  ? (e) => this.createProfile()\r\n                  : (e) => this.sendEditProfile(e)\r\n              }\r\n              style={{\r\n                color: 'springgreen',\r\n                border: '3px solid springgreen',\r\n              }}\r\n              appearance=\"ghost\"\r\n            >\r\n              {!this.state.edit ? 'Create' : 'Edit'}\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n        <div\r\n          className=\"SettingsPage\"\r\n          style={{\r\n            width: '90%',\r\n            height: '90%',\r\n            position: 'absolute',\r\n            top: '50px',\r\n            left: '8%',\r\n            overflowY: 'auto',\r\n          }}\r\n        >\r\n          <h5>Profiles</h5>\r\n\r\n          <Clock\r\n            format=\"HH:mm:ss\"\r\n            interval={1000}\r\n            ticking\r\n            style={{ position: 'absolute', top: '-25px', fontSize: '1rem' }}\r\n          />\r\n          <div style={{ display: 'flex' }}>\r\n            <IconButton\r\n              onClick={this.open}\r\n              icon={<Icon icon=\"plus\" />}\r\n              appearance=\"primary\"\r\n            />\r\n            <InputGroup\r\n              inside\r\n              style={{\r\n                width: 300,\r\n                marginBottom: 10,\r\n                marginTop: 11,\r\n              }}\r\n            >\r\n              <InputGroup.Button>\r\n                <Icon icon=\"search\" />\r\n              </InputGroup.Button>\r\n              <Input placeholder=\"Search Profiles\" onChange={this.search} />\r\n            </InputGroup>\r\n          </div>\r\n          <div\r\n            style={{\r\n              display: 'grid',\r\n              flexWrap: 'wrap',\r\n              marginRight: '2rem',\r\n              marginLeft: '-2rem',\r\n              gridTemplateColumns: 'repeat(auto-fill,minmax(300px, 4fr))',\r\n            }}\r\n          >\r\n            {Object.keys(this.props.state.profiles).length ? (\r\n              this.objectToArray(\r\n                !this.props.state.profileSearch\r\n                  ? this.props.state.profiles\r\n                  : this.props.state.filteredProfiles\r\n              ).map((row) => (\r\n                <CreditCards\r\n                  style={{\r\n                    color: 'white',\r\n                    backgroundColor: '#292c3e',\r\n                    width: '17rem',\r\n                    height: '15rem',\r\n                    position: 'relative',\r\n                    marginRight: '2rem',\r\n                    flex: '0 0 25%',\r\n                  }}\r\n                  onEditClick={this.editProfile}\r\n                  key={row.id}\r\n                  cvc={row.cardCVV}\r\n                  expiry={row.cardExpiration}\r\n                  name={row.profileName}\r\n                  number={row.cardNumber}\r\n                  profileID={row.id}\r\n                />\r\n              ))\r\n            ) : (\r\n              <> </>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => ({ state });\r\nexport default connect(mapStateToProps)(Profile);\r\nconst data = [\r\n  {\r\n    label: 'United States',\r\n    value: 'United States',\r\n    role: 'Master',\r\n  },\r\n  {\r\n    label: 'Canada',\r\n    value: 'Canada',\r\n    role: 'Master',\r\n  },\r\n  {\r\n    label: 'Cashapp',\r\n    value: 'Louisa',\r\n    role: 'Master',\r\n  },\r\n  {\r\n    label: 'Eno',\r\n    value: 'Marty',\r\n    role: 'Master',\r\n  },\r\n  {\r\n    label: 'Privacy',\r\n    value: 'Kenya',\r\n    role: 'Master',\r\n  },\r\n  {\r\n    label: 'Slut',\r\n    value: 'Hal',\r\n    role: 'Developer',\r\n  },\r\n  {\r\n    label: 'Julius',\r\n    value: 'Julius',\r\n    role: 'Developer',\r\n  },\r\n];\r\n\r\nconst canadaProvinces = [\r\n  {\r\n    value: 'Ontario',\r\n    label: 'Ontario',\r\n  },\r\n  {\r\n    value: 'Quebec',\r\n    label: 'Quebec',\r\n  },\r\n  {\r\n    value: 'Nova Scotia',\r\n    label: 'Nova Scotia',\r\n  },\r\n  {\r\n    value: 'New Brunswick',\r\n    label: 'New Brunswick',\r\n  },\r\n  {\r\n    value: 'British Columbia',\r\n    label: 'British Columbia',\r\n  },\r\n  {\r\n    value: 'Prince Edward Island',\r\n    label: 'Prince Edward Island',\r\n  },\r\n  {\r\n    value: 'Saskatchewan',\r\n    label: 'Saskatchewan',\r\n  },\r\n  {\r\n    value: 'Alberta',\r\n    label: 'Alberta',\r\n  },\r\n  {\r\n    value: 'Newfoundland and Labrador',\r\n    label: 'Newfoundland and Labrador',\r\n  },\r\n];\r\n\r\nconst states = [\r\n  {\r\n    label: 'Alabama',\r\n    value: 'Alabama',\r\n    role: 'Alabama',\r\n  },\r\n  {\r\n    label: 'Alaska',\r\n    value: 'Alaska',\r\n    role: 'Alaska',\r\n  },\r\n  {\r\n    label: 'Arizona',\r\n    value: 'Arizona',\r\n    role: 'Arizona',\r\n  },\r\n  {\r\n    label: 'Arkansas',\r\n    value: 'Arkansas',\r\n    role: 'Arkansas',\r\n  },\r\n  {\r\n    label: 'California',\r\n    value: 'California',\r\n    role: 'California',\r\n  },\r\n  {\r\n    label: 'Colorado',\r\n    value: 'Colorado',\r\n    role: 'Colorado',\r\n  },\r\n  {\r\n    label: 'Connecticut',\r\n    value: 'Connecticut',\r\n    role: 'Connecticut',\r\n  },\r\n  {\r\n    label: 'Delaware',\r\n    value: 'Delaware',\r\n    role: 'Delaware',\r\n  },\r\n  {\r\n    label: 'Florida',\r\n    value: 'Florida',\r\n    role: 'Florida',\r\n  },\r\n  {\r\n    label: 'Georgia',\r\n    value: 'Georgia',\r\n    role: 'Georgia',\r\n  },\r\n  {\r\n    label: 'Idaho',\r\n    value: 'Idaho',\r\n    role: 'Idaho',\r\n  },\r\n  {\r\n    label: 'Hawaii',\r\n    value: 'Hawaii',\r\n    role: 'Hawaii',\r\n  },\r\n  {\r\n    label: 'Illinois',\r\n    value: 'Illinois',\r\n    role: 'Illinois',\r\n  },\r\n  {\r\n    label: 'Indiana',\r\n    value: 'Indiana',\r\n    role: 'Indiana',\r\n  },\r\n  {\r\n    label: 'Iowa',\r\n    value: 'Iowa',\r\n    role: 'Iowa',\r\n  },\r\n  {\r\n    label: 'Kansas',\r\n    value: 'Kansas',\r\n    role: 'Kansas',\r\n  },\r\n  {\r\n    label: 'Kentucky',\r\n    value: 'Kentucky',\r\n    role: 'Kentucky',\r\n  },\r\n  {\r\n    label: 'Louisiana',\r\n    value: 'Louisiana',\r\n    role: 'Louisiana',\r\n  },\r\n  {\r\n    label: 'Maine',\r\n    value: 'Maine',\r\n    role: 'Maine',\r\n  },\r\n  {\r\n    label: 'Maryland',\r\n    value: 'Maryland',\r\n    role: 'Maryland',\r\n  },\r\n  {\r\n    label: 'Massachusetts',\r\n    value: 'Massachusetts',\r\n    role: 'Massachusetts',\r\n  },\r\n  {\r\n    label: 'Michigan',\r\n    value: 'Michigan',\r\n    role: 'Michigan',\r\n  },\r\n  {\r\n    label: 'Minnesota',\r\n    value: 'Minnesota',\r\n    role: 'Minnesota',\r\n  },\r\n  {\r\n    label: 'Mississippi',\r\n    value: 'Mississippi',\r\n    role: 'Mississippi',\r\n  },\r\n  {\r\n    label: 'Missouri',\r\n    value: 'Missouri',\r\n    role: 'Missouri',\r\n  },\r\n  {\r\n    label: 'Montana',\r\n    value: 'Montana',\r\n    role: 'Montana',\r\n  },\r\n  {\r\n    label: 'Nebraska',\r\n    value: 'Nebraska',\r\n    role: 'Nebraska',\r\n  },\r\n  {\r\n    label: 'Nevada',\r\n    value: 'Nevada',\r\n    role: 'Nevada',\r\n  },\r\n  {\r\n    label: 'New Hampshire',\r\n    value: 'New Hampshire',\r\n    role: 'New Hampshire',\r\n  },\r\n  {\r\n    label: 'New Jersey',\r\n    value: 'New Jersey',\r\n    role: 'New Jersey',\r\n  },\r\n  {\r\n    label: 'New Mexico',\r\n    value: 'New Mexico',\r\n    role: 'New Mexico',\r\n  },\r\n  {\r\n    label: 'New York',\r\n    value: 'New York',\r\n    role: 'New York',\r\n  },\r\n  {\r\n    label: 'North Carolina',\r\n    value: 'North Carolina',\r\n    role: 'North Carolina',\r\n  },\r\n  {\r\n    label: 'North Dakota',\r\n    value: 'North Dakota',\r\n    role: 'North Dakota',\r\n  },\r\n  {\r\n    label: 'Ohio',\r\n    value: 'Ohio',\r\n    role: 'Ohio',\r\n  },\r\n  {\r\n    label: 'Oklahoma',\r\n    value: 'Oklahoma',\r\n    role: 'Oklahoma',\r\n  },\r\n  {\r\n    label: 'Oregon',\r\n    value: 'Oregon',\r\n    role: 'Oregon',\r\n  },\r\n  {\r\n    label: 'Pennsylvania',\r\n    value: 'Pennsylvania',\r\n    role: 'Pennsylvania',\r\n  },\r\n  {\r\n    label: 'Rhode Island',\r\n    value: 'Rhode Island',\r\n    role: 'Rhode Island',\r\n  },\r\n  {\r\n    label: 'South Carolina',\r\n    value: 'South Carolina',\r\n    role: 'South Carolina',\r\n  },\r\n  {\r\n    label: 'South Dakota',\r\n    value: 'South Dakota',\r\n    role: 'South Dakota',\r\n  },\r\n  {\r\n    label: 'Tennessee',\r\n    value: 'Tennessee',\r\n    role: 'Tennessee',\r\n  },\r\n  {\r\n    label: 'Texas',\r\n    value: 'Texas',\r\n    role: 'Texas',\r\n  },\r\n  {\r\n    label: 'Utah',\r\n    value: 'Utah',\r\n    role: 'Utah',\r\n  },\r\n  {\r\n    label: 'Vermont',\r\n    value: 'Vermont',\r\n    role: 'Vermont',\r\n  },\r\n  {\r\n    label: 'Virginia',\r\n    value: 'Virginia',\r\n    role: 'Virginia',\r\n  },\r\n  {\r\n    label: 'Washington',\r\n    value: 'Washington',\r\n    role: 'Washington',\r\n  },\r\n  {\r\n    label: 'West Virginia',\r\n    value: 'West Virginia',\r\n    role: 'West Virginia',\r\n  },\r\n  {\r\n    label: 'Wisconsin',\r\n    value: 'Wisconsin',\r\n    role: 'Wisconsin',\r\n  },\r\n  {\r\n    label: 'Wyoming',\r\n    value: 'Wyoming',\r\n    role: 'Wyoming',\r\n  },\r\n  {\r\n    label: 'DC',\r\n    value: 'DC',\r\n    role: 'DC',\r\n  },\r\n  {\r\n    label: 'Puerto Rico',\r\n    value: 'Puerto Rico',\r\n    role: 'Puerto Rico',\r\n  },\r\n];\r\n","export default __webpack_public_path__ + \"static/media/empty.25d10e0d.svg\";","import React from 'react';\r\nimport { Form, IconButton, Icon, Panel, Input, CheckPicker } from 'rsuite';\r\nimport cogoToast from 'cogo-toast';\r\nimport { connect } from 'react-redux';\r\nimport $ from 'jquery';\r\n\r\nimport ContentEditable from 'react-contenteditable';\r\n\r\nimport Clock from 'react-live-clock';\r\nimport EmptySVG from '../empty.svg';\r\n\r\nconst { ipcRenderer } = require('electron');\r\n\r\nclass Captcha extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.showHarvester = this.showHarvester.bind(this);\r\n    this.addHarvester = this.addHarvester.bind(this);\r\n    this.saveHarvester = this.saveHarvester.bind(this);\r\n    this.contentEditable = React.createRef();\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getHarvesters();\r\n  }\r\n\r\n  showHarvester(arg, name) {\r\n    ipcRenderer.send('show:harvester', arg, name);\r\n  }\r\n\r\n  addHarvester() {\r\n    const harvester = this.props.state.harvesters;\r\n    const idNum = harvester[harvester.length - 1].id + 1;\r\n\r\n    ipcRenderer.sendSync('set:harvesters', {\r\n      id: idNum,\r\n      store: [],\r\n      name: `Captcha Harvester ${idNum}`,\r\n      proxy: '',\r\n    });\r\n    cogoToast.success(`Added Captcha Harvester`, {\r\n      position: 'top-right',\r\n      heading: 'Success',\r\n    });\r\n    this.getHarvesters();\r\n  }\r\n\r\n  getHarvesters = () => {\r\n    const harvesters = ipcRenderer.sendSync('get:harvesters');\r\n    this.props.dispatch({ type: 'update', obj: { harvesters } });\r\n  };\r\n\r\n  saveHarvester(event, id, name, site, proxy) {\r\n    const arg = {\r\n      id,\r\n      store: site,\r\n      name,\r\n      proxy,\r\n    };\r\n    ipcRenderer.sendSync('save:harvesters', id, arg);\r\n    this.getHarvesters();\r\n    cogoToast.success(`Saved Captcha Harvester`, {\r\n      position: 'top-right',\r\n      heading: 'Success',\r\n    });\r\n    this.getHarvesters();\r\n  }\r\n\r\n  handleChange(value) {\r\n    console.log(value);\r\n  }\r\n\r\n  render() {\r\n    const { state } = this.props;\r\n    const { harvesterSites, harvesters } = state;\r\n    return (\r\n      <div\r\n        className=\"SettingsPage\"\r\n        style={{\r\n          width: '90%',\r\n          position: 'absolute',\r\n          top: '50px',\r\n          left: '8%',\r\n        }}\r\n      >\r\n        <h5>Captcha Harvesters</h5>\r\n\r\n        <Clock\r\n          format=\"HH:mm:ss\"\r\n          interval={1000}\r\n          ticking\r\n          style={{ position: 'absolute', top: '-25px', fontSize: '1rem' }}\r\n        />\r\n        <div\r\n          style={{\r\n            display: 'flex',\r\n            flexWrap: 'wrap',\r\n            overflowY: 'scroll',\r\n          }}\r\n        >\r\n          <div\r\n            style={{\r\n              color: 'white',\r\n              marginTop: '2rem',\r\n              backgroundColor: '#292c3e',\r\n              width: '17rem',\r\n              height: '15rem',\r\n              position: 'relative',\r\n              borderRadius: '15px',\r\n              marginRight: '2rem',\r\n              border: '1px dashed grey',\r\n            }}\r\n            onClick={() => this.addHarvester()}\r\n          >\r\n            <div\r\n              style={{\r\n                width: '80%',\r\n                textAlign: 'center',\r\n                top: '27%',\r\n                position: 'relative',\r\n                marginLeft: '28px',\r\n                height: '100%',\r\n              }}\r\n            >\r\n              <img src={EmptySVG} alt=\"Harvester\" />\r\n            </div>\r\n            <div\r\n              style={{\r\n                textAlign: 'center',\r\n                bottom: '30%',\r\n                position: 'relative',\r\n              }}\r\n            >\r\n              Add New Harvester\r\n            </div>\r\n          </div>\r\n          {harvesters.map((row) => (\r\n            <Panel\r\n              style={{\r\n                color: 'white',\r\n                marginTop: '2rem',\r\n                backgroundColor: '#292c3e',\r\n                width: '17rem',\r\n                height: '15rem',\r\n                position: 'relative',\r\n                marginRight: '2rem',\r\n              }}\r\n            >\r\n              <div\r\n                style={{\r\n                  position: 'absolute',\r\n                  top: '0',\r\n                  width: '100%',\r\n                  right: '0',\r\n                }}\r\n              >\r\n                <ContentEditable\r\n                  innerRef={this.contentEditable}\r\n                  html={`<div id='Harvester${row.id}'>${row.name}</div>`}\r\n                  style={{\r\n                    position: 'relative',\r\n                    width: '100%',\r\n                    justifyContent: 'center',\r\n                    display: 'flex',\r\n                    height: '30px',\r\n                    textAlign: 'center',\r\n                    fontSize: '20px',\r\n                    backgroundColor: '#33374e',\r\n                  }}\r\n                />\r\n              </div>\r\n              <Form style={{ position: 'relative', marginTop: '15px' }}>\r\n                <span style={{ textAlign: 'center' }}>Site</span>\r\n                <CheckPicker\r\n                  onChange={(value) => (row.store = value)}\r\n                  searchable={false}\r\n                  data={harvesterSites}\r\n                  defaultValue={row.store || []}\r\n                  style={{ width: 224, marginBottom: '10px' }}\r\n                />\r\n                <span style={{ textAlign: 'center' }}>Proxy</span>\r\n                <Input\r\n                  style={{ width: 224 }}\r\n                  placeholder=\"Proxy\"\r\n                  name=\"proxy\"\r\n                  label=\"Proxy\"\r\n                  onChange={(value) => (row.proxy = value)}\r\n                  defaultValue={row.proxy}\r\n                />\r\n              </Form>\r\n              <div\r\n                className=\"captchaButtons\"\r\n                style={{\r\n                  position: 'relative',\r\n                  textAlign: 'center',\r\n                  marginTop: '1rem',\r\n                }}\r\n              >\r\n                <IconButton\r\n                  icon={<Icon icon=\"external-link\" size=\"lg\" />}\r\n                  size=\"lg\"\r\n                  color=\"blue\"\r\n                  onClick={(e) =>\r\n                    this.showHarvester(`${row.id}`, `${row.name}`)\r\n                  }\r\n                />\r\n                <IconButton\r\n                  icon={<Icon icon=\"youtube-play\" size=\"lg\" />}\r\n                  size=\"lg\"\r\n                  color=\"red\"\r\n                />\r\n                <IconButton\r\n                  icon={<Icon icon=\"save\" size=\"lg\" />}\r\n                  color=\"cyan\"\r\n                  size=\"lg\"\r\n                  onClick={(event) =>\r\n                    this.saveHarvester(\r\n                      event,\r\n                      row.id,\r\n                      $(`#Harvester${row.id}`).text(),\r\n                      row.store,\r\n                      row.proxy\r\n                    )\r\n                  }\r\n                />\r\n              </div>\r\n            </Panel>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({ state });\r\nexport default connect(mapStateToProps)(Captcha);\r\n","export default __webpack_public_path__ + \"static/media/account.8bebd463.svg\";","import React from 'react';\r\nimport {\r\n  Input,\r\n  Form,\r\n  IconButton,\r\n  Icon,\r\n  Panel,\r\n  CheckPicker,\r\n  Modal,\r\n  FormGroup,\r\n  FormControl,\r\n  ControlLabel,\r\n  InputPicker,\r\n  Button,\r\n} from 'rsuite';\r\nimport Clock from 'react-live-clock';\r\nimport cogoToast from 'cogo-toast';\r\nimport { connect } from 'react-redux';\r\nimport ContentEditable from 'react-contenteditable';\r\n\r\nimport EmptySVG from '../account.svg';\r\n\r\nconst { ipcRenderer } = require('electron');\r\n\r\nconst styles = {\r\n  width: 460,\r\n  marginBottom: 10,\r\n  marginTop: 30,\r\n};\r\n\r\nclass Accounts extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      accounts: '',\r\n      formValue: {\r\n        email: '',\r\n        site: '',\r\n        password: '',\r\n        alias: '',\r\n      },\r\n    };\r\n    this.getAccounts = this.getAccounts.bind(this);\r\n    this.addAccount = this.addAccount.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getAccounts();\r\n  }\r\n\r\n  makeID(length) {\r\n    let result = '';\r\n    const characters =\r\n      'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n    const charactersLength = characters.length;\r\n    for (let i = 0; i < length; i++) {\r\n      result += characters.charAt(Math.floor(Math.random() * charactersLength));\r\n    }\r\n    return result;\r\n  }\r\n\r\n  addAccount() {\r\n    const { accounts } = this.props.state;\r\n    if (\r\n      !this.state.formValue?.email ||\r\n      !this.state.formValue?.site ||\r\n      !this.state.formValue?.password ||\r\n      !this.state.formValue?.alias ||\r\n      this.state.formValue?.email === '' ||\r\n      this.state.formValue?.site === '' ||\r\n      this.state.formValue?.password === '' ||\r\n      this.state.formValue?.alias === ''\r\n    ) {\r\n      cogoToast.error(`Please fill all fields`, {\r\n        position: 'top-right',\r\n        heading: 'Error',\r\n      });\r\n      return;\r\n    }\r\n    const sendInfo = this.state?.formValue;\r\n    sendInfo.id = this.makeID(5);\r\n\r\n    ipcRenderer.sendSync('set:accounts', sendInfo);\r\n\r\n    cogoToast.success(`Added Account`, {\r\n      position: 'top-right',\r\n      heading: 'Success',\r\n    });\r\n    this.getAccounts();\r\n  }\r\n\r\n  getAccounts = () => {\r\n    const accounts = ipcRenderer.sendSync('get:accounts');\r\n    this.props.dispatch({ type: 'update', obj: { accounts } });\r\n  };\r\n\r\n  deleteAccount = (id) => {\r\n    ipcRenderer.sendSync('delete:account', id);\r\n    this.getAccounts();\r\n  };\r\n\r\n  capitalizeFirstLetter(string) {\r\n    try {\r\n      return string.charAt(0).toUpperCase() + string.slice(1);\r\n    } catch (e) {\r\n      return string;\r\n    }\r\n  }\r\n\r\n  close = () => {\r\n    this.setState({ show: false });\r\n  };\r\n\r\n  open = () => {\r\n    this.setState({ show: true });\r\n  };\r\n\r\n  handleChange = (val) => {\r\n    console.log(val);\r\n    console.log(this.state?.formValue);\r\n  };\r\n\r\n  render() {\r\n    const { formValue } = this.state;\r\n\r\n    return (\r\n      <>\r\n        <Modal show={this.state.show} onHide={this.close} size=\"md\">\r\n          <Modal.Header>\r\n            <Modal.Title>Accounts</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body style={{ overflow: 'hidden' }}>\r\n            <Form\r\n              fluid\r\n              // onChange={this.handleChange}\r\n              onChange={(formValue) => {\r\n                this.setState({ formValue });\r\n              }}\r\n              formValue={formValue}\r\n            >\r\n              <FormGroup style={{ marginLeft: '5%' }}>\r\n                <ControlLabel>Site</ControlLabel>\r\n                <FormControl\r\n                  name=\"site\"\r\n                  placeholder=\"Site\"\r\n                  style={{ width: '40%' }}\r\n                  data={[\r\n                    { value: 'amazon', label: 'Amazon' },\r\n                    { value: 'target', label: 'Target' },\r\n                    { value: 'bestbuy', label: 'Bestbuy' },\r\n                  ]}\r\n                  accepter={InputPicker}\r\n                />\r\n              </FormGroup>\r\n              <FormGroup\r\n                style={{\r\n                  marginRight: '5%',\r\n                  position: 'absolute',\r\n                  top: '0',\r\n                  left: '52%',\r\n                  width: '101%',\r\n                }}\r\n              >\r\n                <ControlLabel>Alias</ControlLabel>\r\n                <FormControl\r\n                  style={{ width: '38%' }}\r\n                  name=\"alias\"\r\n                  placeholder=\"Alias\"\r\n                />\r\n              </FormGroup>\r\n              <FormGroup style={{ marginLeft: '5%' }}>\r\n                <ControlLabel>Email</ControlLabel>\r\n                <FormControl\r\n                  style={{ width: '38%' }}\r\n                  name=\"email\"\r\n                  placeholder=\"Email\"\r\n                />\r\n              </FormGroup>\r\n              <FormGroup\r\n                style={{\r\n                  marginLeft: '5%',\r\n                  position: 'absolute',\r\n                  top: '42%',\r\n                  left: '47%',\r\n                  width: '101%',\r\n                }}\r\n              >\r\n                <ControlLabel>Password</ControlLabel>\r\n                <FormControl\r\n                  name=\"password\"\r\n                  style={{ width: '38%' }}\r\n                  placeholder=\"Password\"\r\n                />\r\n              </FormGroup>\r\n            </Form>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button\r\n              onClick={this.close}\r\n              style={{\r\n                color: 'white',\r\n                border: '3px solid white',\r\n                marginRight: '1rem',\r\n              }}\r\n              appearance=\"ghost\"\r\n            >\r\n              Cancel\r\n            </Button>\r\n            <Button\r\n              onClick={this.addAccount}\r\n              style={{\r\n                color: 'springgreen',\r\n                border: '3px solid springgreen',\r\n              }}\r\n              appearance=\"ghost\"\r\n            >\r\n              Save\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n        <div\r\n          style={{\r\n            width: '90%',\r\n            position: 'absolute',\r\n            top: '50px',\r\n            left: '8%',\r\n          }}\r\n        >\r\n          <h5>Accounts</h5>\r\n          <Clock\r\n            format=\"HH:mm:ss\"\r\n            interval={1000}\r\n            ticking\r\n            style={{ position: 'absolute', top: '-25px', fontSize: '1rem' }}\r\n          />\r\n          <div\r\n            style={{\r\n              display: 'flex',\r\n              flexWrap: 'wrap',\r\n              overflowY: 'scroll',\r\n              height: '800px',\r\n            }}\r\n          >\r\n            <div\r\n              style={{\r\n                color: 'white',\r\n                marginTop: '2rem',\r\n                backgroundColor: '#292c3e',\r\n                width: '17rem',\r\n                height: '15rem',\r\n                position: 'relative',\r\n                borderRadius: '15px',\r\n                marginRight: '2rem',\r\n                border: '1px dashed grey',\r\n              }}\r\n              onClick={this.open}\r\n            >\r\n              <div\r\n                style={{\r\n                  width: '200px',\r\n                  textAlign: 'center',\r\n                  marginLeft: '28px',\r\n                }}\r\n              >\r\n                <img src={EmptySVG} alt=\"Accounts\" />\r\n              </div>\r\n              <div\r\n                style={{\r\n                  textAlign: 'center',\r\n                  bottom: '20px',\r\n                  position: 'relative',\r\n                }}\r\n              >\r\n                Add New Account\r\n              </div>\r\n            </div>\r\n            {Object.keys(this.props.state.accounts).length ? (\r\n              this.props.state.accounts.amazon\r\n                ?.concat(this.props.state.accounts.target)\r\n                .concat(this.props.state.accounts.bestbuy)\r\n                .map((row) => (\r\n                  <Panel\r\n                    style={{\r\n                      color: 'white',\r\n                      marginTop: '2rem',\r\n                      backgroundColor: '#292c3e',\r\n                      width: '17rem',\r\n                      height: '15rem',\r\n                      position: 'relative',\r\n                      marginRight: '2rem',\r\n                    }}\r\n                  >\r\n                    <div\r\n                      style={{\r\n                        position: 'absolute',\r\n                        top: '0',\r\n                        width: '100%',\r\n                        right: '0',\r\n                      }}\r\n                    >\r\n                      <ContentEditable\r\n                        innerRef={this.contentEditable}\r\n                        html={`<div>${row?.alias}</div>`}\r\n                        style={{\r\n                          position: 'relative',\r\n                          width: '100%',\r\n                          justifyContent: 'center',\r\n                          display: 'flex',\r\n                          height: '30px',\r\n                          textAlign: 'center',\r\n                          fontSize: '20px',\r\n                          backgroundColor: '#33374e',\r\n                        }}\r\n                      />\r\n                    </div>\r\n                    <Form style={{ position: 'relative', marginTop: '15px' }}>\r\n                      <span style={{ textAlign: 'center' }}>Site</span>\r\n                      <Input\r\n                        style={{ width: 224, marginBottom: '10px' }}\r\n                        value={this.capitalizeFirstLetter(row?.site) || ''}\r\n                        disabled\r\n                      />\r\n                      <span style={{ textAlign: 'center' }}>Email</span>\r\n                      <Input\r\n                        style={{ width: 224 }}\r\n                        disabled\r\n                        value={row?.email}\r\n                      />\r\n                    </Form>\r\n                    <div\r\n                      className=\"captchaButtons\"\r\n                      style={{\r\n                        position: 'relative',\r\n                        textAlign: 'center',\r\n                        marginTop: '1rem',\r\n                      }}\r\n                    >\r\n                      <IconButton\r\n                        icon={<Icon icon=\"pencil\" size=\"lg\" />}\r\n                        size=\"lg\"\r\n                        color=\"blue\"\r\n                      />\r\n                      <IconButton\r\n                        icon={<Icon icon=\"trash\" size=\"lg\" />}\r\n                        size=\"lg\"\r\n                        color=\"red\"\r\n                        onClick={(e) => {\r\n                          this.deleteAccount(row?.id);\r\n                        }}\r\n                      />\r\n                    </div>\r\n                  </Panel>\r\n                ))\r\n            ) : (\r\n              <> </>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => ({ state });\r\nexport default connect(mapStateToProps)(Accounts);\r\n","import React from 'react';\r\nimport {\r\n  Input,\r\n  Form,\r\n  IconButton,\r\n  Icon,\r\n  Panel,\r\n  Button,\r\n  Modal,\r\n  FormGroup,\r\n  FormControl,\r\n  ControlLabel,\r\n  InputPicker,\r\n} from 'rsuite';\r\nimport Clock from 'react-live-clock';\r\nimport cogoToast from 'cogo-toast';\r\nimport { connect } from 'react-redux';\r\n\r\nimport EmptySVG from '../account.svg';\r\n\r\nconst { ipcRenderer } = require('electron');\r\n\r\nclass Sessions extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.close = this.close.bind(this);\r\n    this.open = this.open.bind(this);\r\n    this.state = {\r\n      selectedSessionSite: 'amazon',\r\n      show: false,\r\n      formValue: {\r\n        site: this.props.state.selectedSessionSite,\r\n        account: '',\r\n        proxy: '',\r\n        cookies: [],\r\n      },\r\n    };\r\n    this.getAccounts = this.getAccounts.bind(this);\r\n    this.addSession = this.addSession.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getAccounts();\r\n    this.getSessions();\r\n  }\r\n\r\n  setSelectedSite(site) {\r\n    this.props.dispatch({ type: 'update', obj: { selectedSessionSite: site } });\r\n  }\r\n\r\n  makeID(length) {\r\n    let result = '';\r\n    const characters =\r\n      'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n    const charactersLength = characters.length;\r\n    for (let i = 0; i < length; i++) {\r\n      result += characters.charAt(Math.floor(Math.random() * charactersLength));\r\n    }\r\n    return result;\r\n  }\r\n\r\n  objectToArray = () => {\r\n    const sessions =\r\n      this.props.state.sessions[this.props.state.selectedSessionSite];\r\n    const array = [];\r\n    for (const property in sessions) {\r\n      array.push(sessions[property]);\r\n    }\r\n    return array;\r\n  };\r\n\r\n  addSession() {\r\n    if (\r\n      !this.state.formValue?.site ||\r\n      !this.state.formValue?.account ||\r\n      this.state.formValue?.site === '' ||\r\n      this.state.formValue?.account === ''\r\n    ) {\r\n      cogoToast.error(`Please fill all fields`, {\r\n        position: 'top-right',\r\n        heading: 'Error',\r\n      });\r\n      return;\r\n    }\r\n    const sendInfo = this.state?.formValue;\r\n    sendInfo.id = this.makeID(5);\r\n\r\n    ipcRenderer.sendSync('add:session', sendInfo);\r\n\r\n    cogoToast.success(`Added Session`, {\r\n      position: 'top-right',\r\n      heading: 'Success',\r\n    });\r\n    this.getAccounts();\r\n    this.getSessions();\r\n  }\r\n\r\n  getAccounts = () => {\r\n    const accounts = ipcRenderer.sendSync('get:accounts');\r\n    this.props.dispatch({ type: 'update', obj: { accounts } });\r\n  };\r\n\r\n  getSessions = () => {\r\n    const sessions = ipcRenderer.sendSync('get:sessions');\r\n    this.props.dispatch({ type: 'update', obj: { sessions } });\r\n  };\r\n\r\n  close = () => {\r\n    this.setState({ show: false });\r\n  };\r\n\r\n  open = () => {\r\n    this.setState({ show: true });\r\n  };\r\n\r\n  arrayToLabel = (array) => {\r\n    const labels = [];\r\n    for (const i in array) {\r\n      labels.push({ value: array[i].id, label: array[i].alias });\r\n    }\r\n    return labels;\r\n  };\r\n\r\n  capitalizeFirstLetter(string) {\r\n    try {\r\n      return string.charAt(0).toUpperCase() + string.slice(1);\r\n    } catch (e) {\r\n      return string;\r\n    }\r\n  }\r\n\r\n  returnEmail(id, site) {\r\n    for (let i = 0; i < this.props.state.accounts[site].length; i++) {\r\n      if (this.props.state.accounts[site][i].id === id) {\r\n        return this.props.state.accounts[site][i].email;\r\n      }\r\n    }\r\n    return '';\r\n  }\r\n\r\n  returnAccountName(id, site) {\r\n    for (let i = 0; i < this.props.state.accounts[site].length; i++) {\r\n      console.log(this.props.state.accounts[site][i].id, id);\r\n      if (this.props.state.accounts[site][i].id === id) {\r\n        console.log('matched');\r\n        return this.props.state.accounts[site][i].alias;\r\n      }\r\n    }\r\n    return '';\r\n  }\r\n\r\n  render() {\r\n    const { formValue } = this.state;\r\n    return (\r\n      <>\r\n        <Modal show={this.state.show} onHide={this.close} size=\"md\">\r\n          <Modal.Header>\r\n            <Modal.Title>Create A Session</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <Form\r\n              fluid\r\n              onChange={(formValue) => {\r\n                this.setState({ formValue });\r\n              }}\r\n              formValue={formValue}\r\n            >\r\n              <FormGroup style={{ marginLeft: '5%' }}>\r\n                <ControlLabel>Site</ControlLabel>\r\n                <FormControl\r\n                  name=\"site\"\r\n                  placeholder=\"Site\"\r\n                  data={[\r\n                    { value: 'amazon', label: 'Amazon' },\r\n                    { value: 'target', label: 'Target' },\r\n                  ]}\r\n                  accepter={InputPicker}\r\n                />\r\n              </FormGroup>\r\n\r\n              <FormGroup\r\n                style={{ position: 'absolute', left: '55%', top: '0%' }}\r\n              >\r\n                <ControlLabel>Login Proxy</ControlLabel>\r\n                <FormControl\r\n                  style={{ width: '100%' }}\r\n                  name=\"proxy\"\r\n                  placeholder=\"Login Proxy\"\r\n                />\r\n              </FormGroup>\r\n              <FormGroup style={{ marginLeft: '5%' }}>\r\n                <FormControl\r\n                  name=\"account\"\r\n                  style={{ width: '38%' }}\r\n                  placeholder=\"Account\"\r\n                  accepter={InputPicker}\r\n                  data={\r\n                    this.props.state.accounts[this.state.formValue.site]?.length\r\n                      ? this.arrayToLabel(\r\n                          this.props.state.accounts[this.state.formValue.site]\r\n                        )\r\n                      : []\r\n                  }\r\n                />\r\n              </FormGroup>\r\n            </Form>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button\r\n              onClick={this.close}\r\n              style={{\r\n                color: 'white',\r\n                border: '3px solid white',\r\n                marginRight: '1rem',\r\n              }}\r\n              appearance=\"ghost\"\r\n            >\r\n              Cancel\r\n            </Button>\r\n            <Button\r\n              onClick={this.addSession}\r\n              style={{\r\n                color: 'springgreen',\r\n                border: '3px solid springgreen',\r\n              }}\r\n              appearance=\"ghost\"\r\n            >\r\n              Save\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n        <div\r\n          style={{\r\n            width: '90%',\r\n            position: 'absolute',\r\n            top: '50px',\r\n            left: '8%',\r\n          }}\r\n        >\r\n          <h5>\r\n            {this.capitalizeFirstLetter(this.props.state.selectedSessionSite)}{' '}\r\n            Sessions\r\n          </h5>\r\n          <Clock\r\n            format=\"HH:mm:ss\"\r\n            interval={1000}\r\n            ticking\r\n            style={{ position: 'absolute', top: '-25px', fontSize: '1rem' }}\r\n          />\r\n          <div\r\n            style={{\r\n              display: 'flex',\r\n              flexWrap: 'wrap',\r\n              placeContent: 'center',\r\n              marginRight: '2rem',\r\n              marginLeft: '-2rem',\r\n            }}\r\n          >\r\n            <Panel\r\n              style={{\r\n                color: 'white',\r\n                marginTop: '2rem',\r\n                backgroundColor: 'rgb(50 53 75)',\r\n                position: 'relative',\r\n                borderRadius: '15px',\r\n                width: '20%',\r\n                marginRight: '2rem',\r\n                border:\r\n                  this.props.state.selectedSessionSite === 'amazon'\r\n                    ? 'dotted'\r\n                    : 'none',\r\n              }}\r\n              onClick={(e) => this.setSelectedSite('amazon')}\r\n            >\r\n              <img\r\n                src=\"https://upload.wikimedia.org/wikipedia/commons/a/a9/Amazon_logo.svg\"\r\n                alt=\"Amazon\"\r\n                width=\"200\"\r\n                style={{\r\n                  display: 'block',\r\n                  marginLeft: 'auto',\r\n                  marginRight: 'auto',\r\n                  marginTop: '18%',\r\n                }}\r\n              />\r\n            </Panel>\r\n            <Panel\r\n              style={{\r\n                color: 'white',\r\n                marginTop: '2rem',\r\n                backgroundColor: 'rgb(50 53 75)',\r\n                position: 'relative',\r\n                borderRadius: '15px',\r\n                width: '20%',\r\n                marginRight: '2rem',\r\n                border:\r\n                  this.props.state.selectedSessionSite === 'target'\r\n                    ? 'dotted'\r\n                    : 'none',\r\n              }}\r\n              onClick={(e) => this.setSelectedSite('target')}\r\n            >\r\n              <img\r\n                src=\"https://upload.wikimedia.org/wikipedia/commons/9/9a/Target_logo.svg\"\r\n                alt=\"Target_logo\"\r\n                width=\"70\"\r\n                style={{\r\n                  display: 'block',\r\n                  marginLeft: 'auto',\r\n                  marginRight: 'auto',\r\n                  marginTop: '8%',\r\n                }}\r\n              />\r\n            </Panel>\r\n          </div>\r\n          <div\r\n            style={{\r\n              display: 'flex',\r\n              flexWrap: 'wrap',\r\n              overflowY: 'scroll',\r\n            }}\r\n          >\r\n            <div\r\n              style={{\r\n                color: 'white',\r\n                marginTop: '2rem',\r\n                backgroundColor: '#292c3e',\r\n                width: '17rem',\r\n                height: '15rem',\r\n                position: 'relative',\r\n                borderRadius: '15px',\r\n                marginRight: '2rem',\r\n                border: '1px dashed grey',\r\n              }}\r\n              onClick={this.open}\r\n            >\r\n              <div\r\n                style={{\r\n                  width: '200px',\r\n                  textAlign: 'center',\r\n                  marginLeft: '28px',\r\n                }}\r\n              >\r\n                <img src={EmptySVG} alt=\"Accounts\" />\r\n              </div>\r\n              <div\r\n                style={{\r\n                  textAlign: 'center',\r\n                  bottom: '20px',\r\n                  position: 'relative',\r\n                }}\r\n              >\r\n                Add New Session\r\n              </div>\r\n            </div>\r\n            {Object.keys(this.props.state.sessions).length ? (\r\n              this.objectToArray().map((row) => (\r\n                <Panel\r\n                  style={{\r\n                    color: 'white',\r\n                    marginTop: '2rem',\r\n                    backgroundColor: '#292c3e',\r\n                    width: '17rem',\r\n                    height: '15rem',\r\n                    position: 'relative',\r\n                    marginRight: '2rem',\r\n                  }}\r\n                >\r\n                  <div\r\n                    style={{\r\n                      position: 'absolute',\r\n                      top: '0',\r\n                      width: '100%',\r\n                      right: '0',\r\n                    }}\r\n                  />\r\n                  <Form style={{ position: 'relative', marginTop: '15px' }}>\r\n                    <span style={{ textAlign: 'center' }}>Email</span>\r\n                    <Input\r\n                      style={{ width: 224 }}\r\n                      label=\"Proxy\"\r\n                      disabled\r\n                      value={this.returnEmail(\r\n                        this.props.state.sessions[row.site][row.id].account,\r\n                        row.site\r\n                      )}\r\n                    />\r\n                    <span style={{ textAlign: 'center' }}>Account Name</span>\r\n                    <Input\r\n                      style={{ width: 224 }}\r\n                      label=\"Proxy\"\r\n                      disabled\r\n                      value={this.returnAccountName(\r\n                        this.props.state.sessions[row.site][row.id].account,\r\n                        row.site\r\n                      )}\r\n                    />\r\n                  </Form>\r\n                  <div\r\n                    className=\"captchaButtons\"\r\n                    style={{\r\n                      position: 'relative',\r\n                      textAlign: 'center',\r\n                      marginTop: '1rem',\r\n                    }}\r\n                  >\r\n                    <Button\r\n                      size=\"lg\"\r\n                      color=\"blue\"\r\n                      onClick={async (event) => {\r\n                        ipcRenderer.send(`${row.site}-login`, row);\r\n                        console.log(row);\r\n                      }}\r\n                    >\r\n                      Login\r\n                    </Button>\r\n                    <IconButton\r\n                      icon={<Icon icon=\"pencil\" size=\"lg\" />}\r\n                      size=\"lg\"\r\n                      color=\"cyan\"\r\n                    />\r\n                    <IconButton\r\n                      icon={<Icon icon=\"trash\" size=\"lg\" />}\r\n                      color=\"red\"\r\n                      size=\"lg\"\r\n                    />\r\n                  </div>\r\n                </Panel>\r\n              ))\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => ({ state });\r\nexport default connect(mapStateToProps)(Sessions);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { FlexboxGrid, Input, Button, Icon, Alert } from 'rsuite';\r\nimport { ipcRenderer } from 'electron';\r\n\r\nclass Login extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.activate = this.activate.bind(this);\r\n    this.state = {\r\n      key: '',\r\n    };\r\n  }\r\n\r\n  activate(e) {\r\n    const auth = ipcRenderer.sendSync('activate', this.state?.key.trim());\r\n    if (auth.success) {\r\n      this.props.onLogin(auth);\r\n      Alert.success('Success!');\r\n    } else {\r\n      Alert.error('Invalid key');\r\n    }\r\n  }\r\n\r\n  handleChange = (value) => {\r\n    this.setState((prevState) => ({\r\n      ...prevState,\r\n      key: value,\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <FlexboxGrid>\r\n          <FlexboxGrid.Item colspan={12}>\r\n            <div>\r\n              <img\r\n                alt=\"\"\r\n                style={{ marginTop: '15%' }}\r\n                width=\"400\"\r\n                src=\"./assets/undraw_accept_tasks_po1c.svg\"\r\n              />\r\n            </div>\r\n          </FlexboxGrid.Item>\r\n          <FlexboxGrid.Item colspan={12}>\r\n            <div style={{ marginTop: '15%', textAlign: 'center' }}>\r\n              <img width=\"100\" src=\"./assets/logo_transparent.png\" alt=\"logo\" />\r\n              <h4 style={{ color: '#9C99F2' }}>\r\n                Welcome To <span style={{ color: 'white' }}>Aladdin AIO</span>\r\n              </h4>\r\n              <div style={{ color: 'lightgray' }}>\r\n                Enter your key to get started\r\n              </div>\r\n            </div>\r\n            <div style={{ textAlign: 'center', margin: '10% 15% 0 15%' }}>\r\n              <Input onChange={this.handleChange} placeholder=\"License Key\" />\r\n              <Button\r\n                onClick={this.activate}\r\n                style={{ background: '#6C63FF', marginTop: '1rem' }}\r\n              >\r\n                <Icon style={{ padding: '0.25rem' }} icon=\"sign-in\" /> Activate\r\n              </Button>\r\n            </div>\r\n          </FlexboxGrid.Item>\r\n        </FlexboxGrid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({ state });\r\nexport default connect(mapStateToProps)(Login);\r\n","import React from 'react';\r\nimport { Button, Icon } from 'rsuite';\r\n\r\nconst { remote } = window.require('electron');\r\nconst { ipcRenderer } = window.require('electron');\r\n\r\nclass TopBar extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  close = (e) => {\r\n    e.preventDefault();\r\n    ipcRenderer.send('close');\r\n    return false;\r\n  };\r\n\r\n  minimize = (e) => {\r\n    e.preventDefault();\r\n    console.log('minimize');\r\n    const window = remote.getCurrentWindow();\r\n    window.minimize();\r\n    return false;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"titlebar\">\r\n        <div\r\n          style={{\r\n            position: 'absolute',\r\n            height: '1rem',\r\n            '-webkit-app-region': 'drag',\r\n            top: 0,\r\n            width: '95%',\r\n          }}\r\n        >\r\n          <div>\r\n            <div\r\n              style={{ top: '-10px', right: '-38px', position: 'absolute' }}\r\n              className=\"minimize\"\r\n            >\r\n              <Button\r\n                style={{ background: 'transparent' }}\r\n                onClick={this.minimize}\r\n              >\r\n                <Icon icon=\"window-minimize\" />\r\n              </Button>\r\n            </div>\r\n            <div\r\n              style={{ top: '-10px', right: '-67px', position: 'absolute' }}\r\n              className=\"close\"\r\n            >\r\n              <Button\r\n                style={{ background: 'transparent' }}\r\n                onClick={this.close}\r\n              >\r\n                <Icon icon=\"close\" />\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TopBar;\r\n","import React from 'react';\r\nimport { HashRouter as Router, Route, Redirect } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore } from 'redux';\r\nimport './App.global.css';\r\nimport { createBrowserHistory } from 'history';\r\nimport { ipcRenderer } from 'electron';\r\n// import { datadogLogs } from '@datadog/browser-logs';\r\nimport { Alert } from 'rsuite';\r\nimport SidebarReact from './components/Navbar';\r\nimport TasksTable from './components/App';\r\nimport Settings from './components/Settings';\r\nimport Dashboard from './components/Dashboard';\r\nimport Proxies from './components/Proxies';\r\nimport Profiles from './components/Profiles';\r\nimport Captcha from './components/Harvester';\r\nimport Accounts from './components/Accounts';\r\nimport Sessions from './components/Sessions';\r\nimport Login from './components/Login';\r\nimport TopBar from './components/TopBar';\r\n\r\nconst history = createBrowserHistory();\r\n// const Sentry = require('@sentry/node');\r\n// or use es6 import statements\r\n// import * as Sentry from '@sentry/node';\r\n\r\n// const Tracing = require('@sentry/tracing');\r\n// or use es6 import statements\r\n// import * as Tracing from '@sentry/tracing';\r\n\r\n// Sentry.init({\r\n//   dsn:\r\n//     'https://160acd89026246f78def21d2fe63d136@o849007.ingest.sentry.io/5815937',\r\n\r\n//   // Set tracesSampleRate to 1.0 to capture 100%\r\n//   // of transactions for performance monitoring.\r\n//   // We recommend adjusting this value in production\r\n//   tracesSampleRate: 1.0,\r\n// });\r\n\r\n// datadogLogs.init({\r\n//   clientToken: 'pub2407437efef61d9bab24254d4cf60497',\r\n//   site: 'datadoghq.com',\r\n//   forwardErrorsToLogs: true,\r\n//   sampleRate: 100,\r\n// });\r\n\r\nconst store = createStore(function (\r\n  state = {\r\n    activated: false,\r\n    key: {},\r\n    tasks: [],\r\n    activeTasks: [],\r\n    filteredTasks: [],\r\n    filteredProxies: [],\r\n    filteredProfiles: [],\r\n    taskGroups: [],\r\n    profileSearch: false,\r\n    announcements: [],\r\n    search: false,\r\n    sessions: [],\r\n    logs: {},\r\n    pingSpeeds: {},\r\n    statuses: {},\r\n    taskGroupStatuses: {},\r\n    profiles: [],\r\n    products: {},\r\n    checkedKeys: [],\r\n    selectedSessionSite: 'amazon',\r\n    siteToModes: {\r\n      amazon: [\r\n        { value: 'amazonTurbo', label: 'Turbo' },\r\n        { value: 'amazonNormal', label: 'Normal' },\r\n        // { value: 'amazonMobile', label: 'Mobile' },\r\n        { value: 'amazonMonitor', label: 'Monitor' },\r\n      ],\r\n      target: [{ value: 'targetSafe', label: 'Safe' }],\r\n      bestbuy: [{ value: 'bestbuySafe', label: 'Regular' }],\r\n    },\r\n    siteToImages: {\r\n      amazon: './assets/icons8-amazon-480.png',\r\n      target: './assets/icons8-target-app-256.png',\r\n      bestbuy: './assets/bestbuy.png',\r\n    },\r\n    sites: [\r\n      { value: 'amazon', label: 'Amazon' },\r\n      { value: 'bestbuy', label: 'Bestbuy' },\r\n      { value: 'target', label: 'Target' },\r\n      { value: 'customShopify', label: 'Custom Shopify' },\r\n    ],\r\n    proxies: {},\r\n    analytics: {},\r\n    inputtedProxies: [],\r\n    selectedProxies: [],\r\n    listPings: {},\r\n    harvesters: [],\r\n    accounts: {},\r\n    harvesterSites: [\r\n      { value: 'shopifyCheckpoint', label: 'Shopify Checkpoint' },\r\n      { value: 'shopifyCheckout', label: 'Shopify Checkout' },\r\n      { value: 'walmart', label: 'Walmart' },\r\n      { value: 'newegg', label: 'Newegg' },\r\n    ],\r\n    progress: {},\r\n    selectedGroup: null,\r\n    selectedGroups: [],\r\n    showDeleteGroup: false,\r\n    groups: [],\r\n    discordAvatar:\r\n      'https://external-preview.redd.it/4PE-nlL_PdMD5PrFNLnjurHQ1QKPnCvg368LTDnfM-M.png?auto=webp&s=ff4c3fbc1cce1a1856cff36b5d2a40a6d02cc1c3',\r\n    cookiesUsed: 0,\r\n    cookieInfo: {\r\n      'FootLocker US': {},\r\n      'FootLocker CA': {},\r\n      'Kids FootLocker': {},\r\n      FootAction: {},\r\n      EastBay: {},\r\n      'Champs Sports': {},\r\n    },\r\n  },\r\n  action\r\n) {\r\n  switch (action.type) {\r\n    case 'update':\r\n      return { ...state, ...action.obj };\r\n    case 'set-active-tasks':\r\n      var newState = { ...state };\r\n      newState.activeTasks.concat(action.obj.activeTasks);\r\n      return newState;\r\n    case 'addProduct':\r\n      var newState = { ...state, ...action.obj };\r\n      for (const i of action.info) {\r\n        newState.products[i.id] = i.product;\r\n      }\r\n      return newState;\r\n    case 'deleteProduct':\r\n      var newState = { ...state, ...action.obj };\r\n      delete newState.products[action.id];\r\n      return newState;\r\n    case 'addLog':\r\n      var newState = { ...state };\r\n      for (const i of action.info) {\r\n        // if (!newState.logs[i.taskId]) {\r\n        //     newState.logs[i.taskId] = []\r\n        // }\r\n        // newState.logs[i.taskId].push(i.time + ' ' + i.log)\r\n        if (i.sendToStatus) newState.statuses[i.taskId] = i.log;\r\n      }\r\n      return newState;\r\n    case 'addStatus':\r\n      var newState = { ...state };\r\n      for (const i of action.info) {\r\n        if (newState.taskGroupStatuses[i.taskGroupID]) {\r\n          newState.taskGroupStatuses[i.taskGroupID][i.type] += 1;\r\n        } else {\r\n          newState.taskGroupStatuses[i.taskGroupID][i.type] = 0;\r\n        }\r\n      }\r\n      return newState;\r\n    case 'pingSpeed':\r\n      var newState = { ...state };\r\n      for (const i of action.info) {\r\n        newState.pingSpeeds[i.id] = i.ping;\r\n      }\r\n      return newState;\r\n    default:\r\n      return state;\r\n  }\r\n});\r\n\r\nwindow.store = store;\r\n\r\nclass Index extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      activated: false,\r\n      version: '1.1.9',\r\n    };\r\n  }\r\n\r\n  login = (key) => {\r\n    var activate = ipcRenderer.sendSync('activated', key);\r\n    this.setState({ activated: true, key });\r\n  };\r\n\r\n\r\n  componentDidMount() {\r\n    // this.checkActivation();\r\n    const checkActivation = ipcRenderer.sendSync('checkAuth');\r\n    if (checkActivation.success) {\r\n      this.setState({ activated: true });\r\n    } else {\r\n      this.setState({ activated: false });\r\n    }\r\n    ipcRenderer.on('log', (e, info) => {\r\n      store.dispatch({ type: 'addLog', info });\r\n    });\r\n\r\n    ipcRenderer.on('groupStatus', (e, info) => {\r\n      store.dispatch({ type: 'addStatus', info });\r\n    });\r\n\r\n    ipcRenderer.on('session-msg', (e, msg) => {\r\n      Alert.info(msg);\r\n    });\r\n\r\n    ipcRenderer.on('proxySpeed', (e, info) => {\r\n      // store.dispatch({ type: 'pingSpeed', info });\r\n      const proxies = ipcRenderer.sendSync('get:proxies');\r\n      store.dispatch({ type: 'update', obj: { proxies } });\r\n    });\r\n\r\n    this.fetchAnnouncements();\r\n\r\n    const info = ipcRenderer.sendSync('get:info');\r\n    store.dispatch({\r\n      type: 'update',\r\n      obj: {\r\n        discordAvatar: info.avatar,\r\n        discordUsername: info.username,\r\n        licenseKey: info.LicenseKey,\r\n      },\r\n    });\r\n  }\r\n\r\n  fetchAnnouncements() {\r\n    fetch('https://aladdin-aio.com/api/announcements')\r\n      .then((response1) => response1.json())\r\n      .then((json) =>\r\n        store.dispatch({\r\n          type: 'update',\r\n          obj: { announcements: json.announcements },\r\n        })\r\n      );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Provider store={store}>\r\n        {/* <React.StrictMode> */}\r\n        <Router history={history}>\r\n          <div className=\"app\">\r\n            {this.state.activated ? (\r\n              <div\r\n                style={{ height: '100%', width: '100%' }}\r\n                className=\"page-background\"\r\n              >\r\n                <TopBar />\r\n                <SidebarReact />\r\n                <Route exact path=\"/dashboard\" component={Dashboard} />\r\n                <Route exact path=\"/tasks\" component={TasksTable} />\r\n                <Route exact path=\"/captcha\" component={Captcha} />\r\n                <Route exact path=\"/proxies\" component={Proxies} />\r\n                <Route exact path=\"/profiles\" component={Profiles} />\r\n                <Route exact path=\"/accounts\" component={Accounts} />\r\n                <Route exact path=\"/sessions\" component={Sessions} />\r\n                <Route exact path=\"/settings\" component={Settings} />\r\n                <Redirect path=\"*\" to=\"/tasks\" />\r\n              </div>\r\n            ) : (\r\n              <>\r\n                <Route\r\n                  exact\r\n                  path=\"/login\"\r\n                  key=\"test\"\r\n                  component={() => (\r\n                    <Login\r\n                      activated={this.state.activated}\r\n                      onLogin={this.login}\r\n                    />\r\n                  )}\r\n                />\r\n              </>\r\n            )}\r\n          </div>\r\n        </Router>\r\n        {/* </React.StrictMode> */}\r\n      </Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Index;\r\n","import ReactDOM from 'react-dom';\r\nimport React from 'react';\r\nimport Index from './main';\r\n\r\nReactDOM.render(<Index />, document.getElementById('root'));\r\n"],"sourceRoot":""}